[
  {
    "instruction": "",
    "input": "Có bao nhiêu người đứng đầu các phòng ban lớn hơn 56?",
    "output": "SELECT count(*) FROM head WHERE age  >  56"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên, tiểu bang sinh và tuổi của người đứng đầu các bộ phận được sắp xếp theo độ tuổi.",
    "output": "SELECT name ,  born_state ,  age FROM head ORDER BY age"
  },
  {
    "instruction": "",
    "input": "Liệt kê năm thành lập, tên và ngân sách của mỗi bộ phận.",
    "output": "SELECT creation ,  name ,  budget_in_billions FROM department"
  },
  {
    "instruction": "",
    "input": "Ngân sách tối đa và tối thiểu của các phòng ban là gì?",
    "output": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department"
  },
  {
    "instruction": "",
    "input": "Số lượng nhân viên trung bình của các bộ phận có thứ hạng là từ 10 đến 15 là bao nhiêu?",
    "output": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15"
  },
  {
    "instruction": "",
    "input": "Tên của những người đứng đầu được sinh ra bên ngoài bang California là gì?",
    "output": "SELECT name FROM head WHERE born_state != 'California'"
  },
  {
    "instruction": "",
    "input": "Những năm thành lập khác nhau của các bộ phận được quản lý bởi một thư ký sinh ra ở nhà nước 'Alabama' là gì?",
    "output": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama'"
  },
  {
    "instruction": "",
    "input": "Tên của các tiểu bang nơi có ít nhất 3 người đứng đầu được sinh ra là gì?",
    "output": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Trong năm nào hầu hết các bộ phận được thành lập?",
    "output": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và số lượng nhân viên cho các bộ phận được quản lý bởi những người đứng đầu có giá trị diễn xuất tạm thời là 'có'?",
    "output": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trạng thái diễn xuất?",
    "output": "SELECT count(DISTINCT temporary_acting) FROM management"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phòng ban được dẫn dắt bởi những người đứng đầu không được đề cập?",
    "output": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);"
  },
  {
    "instruction": "",
    "input": "Các độ tuổi khác biệt của những người đứng đầu đang hành động là gì?",
    "output": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes'"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tiểu bang nơi cả Bộ trưởng Bộ Kho bạc 'và Bộ trưởng' An ninh Nội địa 'đã ra đời.",
    "output": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Homeland Security'"
  },
  {
    "instruction": "",
    "input": "Bộ phận nào có nhiều hơn 1 đầu cùng một lúc?Liệt kê ID, tên và số lượng đầu.",
    "output": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tên đầu nào có con 'ha'?Liệt kê ID và tên.",
    "output": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trang trại?",
    "output": "SELECT count(*) FROM farm"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng trang trại.",
    "output": "SELECT count(*) FROM farm"
  },
  {
    "instruction": "",
    "input": "Liệt kê tổng số ngựa trong các trang trại theo thứ tự tăng dần.",
    "output": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC"
  },
  {
    "instruction": "",
    "input": "Tổng số hồ sơ ngựa cho mỗi trang trại, được sắp xếp tăng dần là gì?",
    "output": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC"
  },
  {
    "instruction": "",
    "input": "Các chủ nhà của các cuộc thi có chủ đề không phải là \"người ngoài hành tinh\" là gì?",
    "output": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'"
  },
  {
    "instruction": "",
    "input": "Trả lại các chủ nhà của các cuộc thi mà chủ đề không phải là người ngoài hành tinh?",
    "output": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'"
  },
  {
    "instruction": "",
    "input": "Các chủ đề của các cuộc thi trang trại được sắp xếp theo năm theo thứ tự tăng dần là gì?",
    "output": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC"
  },
  {
    "instruction": "",
    "input": "Trả lại các chủ đề của các cuộc thi trang trại, được sắp xếp theo năm tăng dần.",
    "output": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC"
  },
  {
    "instruction": "",
    "input": "Số lượng ngựa làm việc trung bình của các trang trại với hơn 5000 tổng số ngựa là bao nhiêu?",
    "output": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho số lượng con ngựa làm việc trung bình trong các trang trại với hơn 5000 tổng số ngựa.",
    "output": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000"
  },
  {
    "instruction": "",
    "input": "Số lượng bò tối đa và tối thiểu trên tất cả các trang trại là gì.",
    "output": "SELECT max(Cows) ,  min(Cows) FROM farm"
  },
  {
    "instruction": "",
    "input": "Trả lại số lượng bò tối đa và tối thiểu trên tất cả các trang trại.",
    "output": "SELECT max(Cows) ,  min(Cows) FROM farm"
  },
  {
    "instruction": "",
    "input": "Các thành phố có bao nhiêu trạng thái khác nhau?",
    "output": "SELECT count(DISTINCT Status) FROM city"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng trạng thái khác nhau.",
    "output": "SELECT count(DISTINCT Status) FROM city"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên chính thức của các thành phố theo thứ tự giảm dần dân số.",
    "output": "SELECT Official_Name FROM city ORDER BY Population DESC"
  },
  {
    "instruction": "",
    "input": "Tên chính thức của các thành phố là gì, được đặt hàng theo dân số là gì?",
    "output": "SELECT Official_Name FROM city ORDER BY Population DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và tình trạng chính thức của thành phố với dân số lớn nhất.",
    "output": "SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và tình trạng chính thức của thành phố với nhiều cư dân nhất là gì?",
    "output": "SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị những năm và tên chính thức của các thành phố của các cuộc thi.",
    "output": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho các năm và tên chính thức của các thành phố của mỗi cuộc thi.",
    "output": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên chính thức của các thành phố đã tổ chức nhiều hơn một cuộc thi.",
    "output": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tên chính thức của các thành phố đã tổ chức nhiều hơn một cuộc thi?",
    "output": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tình trạng của thành phố đã tổ chức số lượng lớn nhất các cuộc thi.",
    "output": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tình trạng của thành phố đã tổ chức nhiều cuộc thi nhất là gì?",
    "output": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các chủ đề của các cuộc thi với các thành phố chủ nhà có dân số lớn hơn 1000.",
    "output": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000"
  },
  {
    "instruction": "",
    "input": "Các chủ đề của các cuộc thi có thành phố chủ tương ứng với hơn 1000 cư dân là gì?",
    "output": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các trạng thái khác nhau của các thành phố và dân số trung bình của các thành phố với mỗi tình trạng.",
    "output": "SELECT Status ,  avg(Population) FROM city GROUP BY Status"
  },
  {
    "instruction": "",
    "input": "Các trạng thái và dân số trung bình của mỗi thành phố là gì?",
    "output": "SELECT Status ,  avg(Population) FROM city GROUP BY Status"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các trạng thái khác nhau, được đặt hàng bởi số lượng thành phố có mỗi thành phố.",
    "output": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC"
  },
  {
    "instruction": "",
    "input": "Trả về các trạng thái khác nhau của các thành phố, tăng dần theo tần số.",
    "output": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê loại trạng thái phổ biến nhất trên các thành phố.",
    "output": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tình trạng phổ biến nhất trên tất cả các thành phố là gì?",
    "output": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên chính thức của các thành phố chưa tổ chức bất kỳ cuộc thi nào.",
    "output": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)"
  },
  {
    "instruction": "",
    "input": "Tên chính thức của các thành phố chưa tổ chức một cuộc thi trang trại là gì?",
    "output": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)"
  },
  {
    "instruction": "",
    "input": "Hiển thị trạng thái được chia sẻ bởi các thành phố có dân số lớn hơn 1500 và nhỏ hơn 500.",
    "output": "SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500"
  },
  {
    "instruction": "",
    "input": "Trạng thái nào tương ứng với cả hai thành phố có dân số trên 1500 và các thành phố có dân số thấp hơn 500?",
    "output": "SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500"
  },
  {
    "instruction": "",
    "input": "Tìm tên chính thức của các thành phố có dân số lớn hơn 1500 hoặc nhỏ hơn 500.",
    "output": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500"
  },
  {
    "instruction": "",
    "input": "Tên chính thức của các thành phố có dân số trên 1500 hoặc dưới 500 là gì?",
    "output": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500"
  },
  {
    "instruction": "",
    "input": "Hiển thị bảng xếp hạng điều tra dân số của các thành phố có địa vị không phải là \"làng\".",
    "output": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\""
  },
  {
    "instruction": "",
    "input": "Bảng xếp hạng điều tra dân số của các thành phố không có tình trạng \"làng\" là gì?",
    "output": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\""
  },
  {
    "instruction": "",
    "input": "Khóa học nào có số lượng sinh viên đã đăng ký nhất?",
    "output": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của khóa học với các sinh viên đã đăng ký nhiều nhất là gì?",
    "output": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của các sinh viên đã đăng ký một số khóa học nhưng số lượng lớn nhất các khóa học trong các sinh viên này là gì?",
    "output": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID ID của các sinh viên đã đăng ký một số khóa học nhưng có số lượng khóa học ít nhất cho tất cả sinh viên là gì?",
    "output": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và họ của tất cả các ứng cử viên là gì?",
    "output": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tất cả các ứng cử viên là gì?",
    "output": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID của các sinh viên không bao giờ tham gia các khóa học?",
    "output": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"
  },
  {
    "instruction": "",
    "input": "ID của mỗi sinh viên chưa bao giờ tham dự khóa học là gì?",
    "output": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID của các sinh viên đã tham dự một số khóa học?",
    "output": "SELECT student_id FROM student_course_attendance"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các sinh viên đã tham dự ít nhất một khóa học là gì?",
    "output": "SELECT student_id FROM student_course_attendance"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các sinh viên cho các khóa học là gì và tên của các khóa học đó là gì?",
    "output": "SELECT T1.student_id ,  T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id"
  },
  {
    "instruction": "",
    "input": "Chi tiết của học sinh mà khóa học đã đăng ký gần đây nhất là gì?",
    "output": "SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Chúng tôi có chi tiết nào về các sinh viên đã đăng ký các khóa học gần đây nhất?",
    "output": "SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên tham dự khóa học tiếng Anh?",
    "output": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên đang theo học các khóa học tiếng Anh?",
    "output": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\""
  },
  {
    "instruction": "",
    "input": "Học sinh có ID có bao nhiêu khóa học?",
    "output": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171"
  },
  {
    "instruction": "",
    "input": "Học sinh với ID 171 thực sự tham dự bao nhiêu khóa học?",
    "output": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171"
  },
  {
    "instruction": "",
    "input": "Tìm id của ứng cử viên có email là stanley.monahan@example.org?",
    "output": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = \"stanley.monahan@example.org\""
  },
  {
    "instruction": "",
    "input": "ID của ứng cử viên có email là stanley.monahan@example.org là gì?",
    "output": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = \"stanley.monahan@example.org\""
  },
  {
    "instruction": "",
    "input": "Tìm id của ứng viên gần đây nhất truy cập khóa học?",
    "output": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của ứng cử viên gần đây nhất đã truy cập khóa học là gì?",
    "output": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Chi tiết của học sinh đã đăng ký số lượng khóa học nhất là gì?",
    "output": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các chi tiết của học sinh đã đăng ký nhiều khóa học nhất là gì?",
    "output": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID của các sinh viên đã đăng ký một số khóa học và số lượng khóa học đã đăng ký của họ?",
    "output": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi sinh viên đã đăng ký một số khóa học, họ đã đăng ký bao nhiêu khóa học?",
    "output": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên đã đăng ký mỗi khóa học?Liệt kê tên khóa học và số lượng sinh viên đã đăng ký của họ?",
    "output": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ID khóa học, có bao nhiêu sinh viên được đăng ký và tên khóa học là gì?",
    "output": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"
  },
  {
    "instruction": "",
    "input": "Tìm ID của các ứng cử viên có mã đánh giá là \"Pass\"?",
    "output": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\""
  },
  {
    "instruction": "",
    "input": "ID của các ứng cử viên có mã kết quả là gì?",
    "output": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\""
  },
  {
    "instruction": "",
    "input": "Tìm số di động di động của các ứng cử viên có mã đánh giá là \"thất bại\"?",
    "output": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"Fail\""
  },
  {
    "instruction": "",
    "input": "Số điện thoại di động của các ứng cử viên nhận được mã đánh giá \"Fail\" là gì?",
    "output": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"Fail\""
  },
  {
    "instruction": "",
    "input": "ID của học sinh đã đăng ký khóa học 301 là gì?",
    "output": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301"
  },
  {
    "instruction": "",
    "input": "ID của các sinh viên đã đăng ký khóa học 301 là gì?",
    "output": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301"
  },
  {
    "instruction": "",
    "input": "ID của học sinh gần đây nhất là khóa học 301?",
    "output": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của các sinh viên đã đăng ký khóa học 301 gần đây nhất là gì?",
    "output": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm thành phố riêng biệt của địa chỉ của mọi người?",
    "output": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id"
  },
  {
    "instruction": "",
    "input": "Các thành phố khác nhau nơi mọi người sống là gì?",
    "output": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id"
  },
  {
    "instruction": "",
    "input": "Tìm thành phố riêng biệt của địa chỉ của sinh viên?",
    "output": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id"
  },
  {
    "instruction": "",
    "input": "Các thành phố khác nhau nơi sinh viên sống là gì?",
    "output": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các khóa học theo thứ tự bảng chữ cái?",
    "output": "SELECT course_name FROM courses ORDER BY course_name"
  },
  {
    "instruction": "",
    "input": "Tên của các khóa học theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT course_name FROM courses ORDER BY course_name"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên đầu tiên của những người theo thứ tự bảng chữ cái?",
    "output": "SELECT first_name FROM people ORDER BY first_name"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của những người theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT first_name FROM people ORDER BY first_name"
  },
  {
    "instruction": "",
    "input": "ID của các sinh viên đã đăng ký các khóa học hoặc tham gia các khóa học là gì?",
    "output": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance"
  },
  {
    "instruction": "",
    "input": "ID của các sinh viên đã đăng ký hoặc tham dự khóa học là gì?",
    "output": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance"
  },
  {
    "instruction": "",
    "input": "Tìm ID của các khóa học được đăng ký hoặc tham dự bởi sinh viên có ID là 121?",
    "output": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121"
  },
  {
    "instruction": "",
    "input": "ID của các khóa học được đăng ký hoặc tham dự bởi sinh viên có ID là 121 là gì?",
    "output": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121"
  },
  {
    "instruction": "",
    "input": "Tất cả thông tin của các sinh viên đã đăng ký các khóa học nhưng không tham dự các khóa học là gì?",
    "output": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"
  },
  {
    "instruction": "",
    "input": "Tất cả các chi tiết của các sinh viên đã đăng ký nhưng không tham dự bất kỳ khóa học nào?",
    "output": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID của các sinh viên đã đăng ký Thống kê khóa học theo thứ tự ngày đăng ký.",
    "output": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date"
  },
  {
    "instruction": "",
    "input": "ID của các sinh viên đã đăng ký thống kê khóa học theo thứ tự ngày đăng ký là gì?",
    "output": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID của các sinh viên tham dự các khóa học thống kê theo thứ tự ngày tham dự.",
    "output": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.date_of_attendance"
  },
  {
    "instruction": "",
    "input": "ID của các sinh viên đã tham dự các khóa học trong bộ phận thống kê theo thứ tự ngày tham dự.",
    "output": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.date_of_attendance"
  },
  {
    "instruction": "",
    "input": "Cho tôi ngày khi nhiệt độ tối đa cao hơn 85.",
    "output": "SELECT date FROM weather WHERE max_temperature_f  >  85"
  },
  {
    "instruction": "",
    "input": "Các ngày có nhiệt độ tối đa cao hơn 85 là bao nhiêu?",
    "output": "SELECT date FROM weather WHERE max_temperature_f  >  85"
  },
  {
    "instruction": "",
    "input": "Tên của các trạm có vĩ độ thấp hơn 37,5 là gì?",
    "output": "SELECT name FROM station WHERE lat  <  37.5"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các trạm có vĩ độ nhỏ hơn 37,5 là gì?",
    "output": "SELECT name FROM station WHERE lat  <  37.5"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi thành phố, trả lại vĩ độ cao nhất trong số các trạm của nó.",
    "output": "SELECT city ,  max(lat) FROM station GROUP BY city"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi thành phố, vĩ độ cao nhất cho các trạm của nó là gì?",
    "output": "SELECT city ,  max(lat) FROM station GROUP BY city"
  },
  {
    "instruction": "",
    "input": "Đưa cho tôi trạm bắt đầu và trạm cuối cho các chuyến đi với ba ID lâu đời nhất.",
    "output": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Trạm trạm và trạm cuối cho các chuyến đi với ba ID nhỏ nhất là gì?",
    "output": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Vĩ độ trung bình và kinh độ của các trạm nằm ở thành phố San Jose là gì?",
    "output": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\""
  },
  {
    "instruction": "",
    "input": "Vĩ độ và kinh độ trung bình ở San Jose là gì?",
    "output": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\""
  },
  {
    "instruction": "",
    "input": "ID của chuyến đi có thời gian ngắn nhất là gì?",
    "output": "SELECT id FROM trip ORDER BY duration LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của chuyến đi ngắn nhất là gì?",
    "output": "SELECT id FROM trip ORDER BY duration LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tổng thời gian và tối đa của các chuyến đi với ID xe đạp 636 là bao nhiêu?",
    "output": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636"
  },
  {
    "instruction": "",
    "input": "Tổng thời gian và tối đa cho tất cả các chuyến đi với ID xe đạp 636 là bao nhiêu?",
    "output": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi mã zip, trả lại nhiệt độ trung bình trung bình của tháng 8 ở đó.",
    "output": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi mã zip, nhiệt độ trung bình trung bình cho tất cả các ngày bắt đầu bằng '8' là bao nhiêu?",
    "output": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code"
  },
  {
    "instruction": "",
    "input": "Từ hồ sơ chuyến đi, tìm số lượng xe đạp độc đáo.",
    "output": "SELECT count(DISTINCT bike_id) FROM trip"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu id xe đạp khác nhau?",
    "output": "SELECT count(DISTINCT bike_id) FROM trip"
  },
  {
    "instruction": "",
    "input": "Số lượng các thành phố riêng biệt mà các trạm được đặt tại là bao nhiêu?",
    "output": "SELECT count(DISTINCT city) FROM station"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành phố khác nhau có các trạm này?",
    "output": "SELECT count(DISTINCT city) FROM station"
  },
  {
    "instruction": "",
    "input": "Mountain View City có bao nhiêu trạm?",
    "output": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trạm trong Mountain View?",
    "output": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\""
  },
  {
    "instruction": "",
    "input": "Trả lại tên duy nhất cho các trạm đã từng có sẵn 7 chiếc xe đạp.",
    "output": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7"
  },
  {
    "instruction": "",
    "input": "Các tên khác nhau cho mỗi trạm đã từng có 7 chiếc xe đạp?",
    "output": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7"
  },
  {
    "instruction": "",
    "input": "Trạm khởi động nào có nhiều chuyến đi bắt đầu từ tháng 8?Cho tôi tên và ID của nhà ga.",
    "output": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và ID của Trạm khởi động cho một chuyến đi bắt đầu nhiều nhất trong tháng 8 là gì?",
    "output": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Xe đạp nào đi du lịch thường xuyên nhất trong mã zip 94002?",
    "output": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của chiếc xe đạp đã đi được nhiều nhất trong 94002 là gì?",
    "output": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ngày có cả độ ẩm trung bình trên 50 và khả năng hiển thị trung bình trên 8?",
    "output": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8"
  },
  {
    "instruction": "",
    "input": "Số ngày có độ ẩm trung bình trên 50 và tầm nhìn trung bình trên 8 là bao nhiêu?",
    "output": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8"
  },
  {
    "instruction": "",
    "input": "Vĩ độ, kinh độ, thành phố của nhà ga mà chuyến đi ngắn nhất bắt đầu là gì?",
    "output": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Vĩ độ, kinh độ và thành phố của nhà ga mà chuyến đi với thời gian nhỏ nhất bắt đầu là gì?",
    "output": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của các trạm được đặt tại San Francisco là gì và có sẵn xe đạp trung bình trên 10.",
    "output": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10"
  },
  {
    "instruction": "",
    "input": "ID của các trạm ở San Francisco thường có hơn 10 xe đạp?",
    "output": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10"
  },
  {
    "instruction": "",
    "input": "Tên và ID của các trạm có trung bình hơn 14 chiếc xe đạp hoặc được cài đặt vào tháng 12?",
    "output": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\""
  },
  {
    "instruction": "",
    "input": "Tên và ID của tất cả các trạm có trung bình hơn 14 xe đạp hoặc đã được cài đặt xe đạp vào tháng 12?",
    "output": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\""
  },
  {
    "instruction": "",
    "input": "3 tốc độ che phủ đám mây phổ biến nhất trong khu vực của mã ZIP 94107 là bao nhiêu?",
    "output": "SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "3 nắp đám mây phổ biến nhất trong mã zip của 94107 là gì?",
    "output": "SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Mã zip trong đó áp lực mực nước biển trung bình là gì là thấp nhất?",
    "output": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mã zip có áp lực mực nước biển trung bình thấp nhất là gì?",
    "output": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tính khả dụng của xe đạp trung bình trong các trạm không nằm ở Palo Alto là gì?",
    "output": "SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  \"Palo Alto\")"
  },
  {
    "instruction": "",
    "input": "Tính khả dụng của xe đạp trung bình cho các trạm không ở Palo Alto là gì?",
    "output": "SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  \"Palo Alto\")"
  },
  {
    "instruction": "",
    "input": "Kinh độ trung bình của các trạm không bao giờ có sẵn xe đạp hơn 10 là gì?",
    "output": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)"
  },
  {
    "instruction": "",
    "input": "Kinh độ có nghĩa là gì cho tất cả các trạm chưa bao giờ có hơn 10 xe đạp?",
    "output": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)"
  },
  {
    "instruction": "",
    "input": "Khi nào và trong mã zip mà nhiệt độ tối đa đạt được 80?",
    "output": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80"
  },
  {
    "instruction": "",
    "input": "Mã zip nào có một trạm có nhiệt độ tối đa lớn hơn hoặc bằng 80 và khi nào nó đạt đến nhiệt độ đó?",
    "output": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi ID cho tất cả các chuyến đi diễn ra trong khu vực mã zip với nhiệt độ trung bình trung bình trên 60.",
    "output": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi mã zip, hãy tìm ID của tất cả các chuyến đi có nhiệt độ trung bình cao hơn trên 60?",
    "output": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi mã zip, hãy trả về tốc độ gió tối đa đạt được 25 lần?",
    "output": "SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi mã zip, tốc độ gió tối đa đạt 25 dặm / giờ bao nhiêu lần?",
    "output": "SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code"
  },
  {
    "instruction": "",
    "input": "Vào ngày nào và mã ZIP nào là điểm DEW thấp hơn bất kỳ ngày nào trong mã ZIP 94107?",
    "output": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)"
  },
  {
    "instruction": "",
    "input": "Những ngày nào có điểm sương tối thiểu nhỏ hơn bất kỳ ngày nào trong mã ZIP 94107, và trong đó các mã đó được thực hiện trong mã ZIP nào?",
    "output": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi chuyến đi, hãy trả lại ngày cài đặt của trạm kết thúc.",
    "output": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id"
  },
  {
    "instruction": "",
    "input": "Ngày cài đặt cho mỗi trạm kết thúc trên tất cả các chuyến đi là gì?",
    "output": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id"
  },
  {
    "instruction": "",
    "input": "Chuyến đi nào bắt đầu từ nhà ga với số lượng bến tàu lớn nhất?Cho tôi id chuyến đi.",
    "output": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của chuyến đi bắt đầu từ nhà ga với số lượng dock cao nhất là gì?",
    "output": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các chuyến đi không kết thúc ở Thành phố San Francisco.",
    "output": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city !=  \"San Francisco\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu chuyến đi không kết thúc ở San Francisco?",
    "output": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city != \"San Francisco\""
  },
  {
    "instruction": "",
    "input": "Trong mã ZIP 94107, vào ngày nào thì không có sương mù và mưa nào không được quan sát?",
    "output": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\""
  },
  {
    "instruction": "",
    "input": "Vào ngày nào, nó không phải là sương mù hay mưa trong mã zip của 94107?",
    "output": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\""
  },
  {
    "instruction": "",
    "input": "ID của các trạm có vĩ độ trên 37,4 và không bao giờ có sẵn xe đạp dưới 7?",
    "output": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các trạm có vĩ độ trên 37,4 và chưa bao giờ có ít hơn 7 xe đạp?",
    "output": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7"
  },
  {
    "instruction": "",
    "input": "Tên của các trạm có sẵn xe đạp trung bình trên 10 và không được đặt tại Thành phố San Jose là gì?",
    "output": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các trạm có hơn 10 xe đạp có sẵn và không được đặt tại San Jose là gì?",
    "output": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\""
  },
  {
    "instruction": "",
    "input": "Tên, vĩ độ và thành phố của nhà ga với vĩ độ thấp nhất là gì?",
    "output": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên, vĩ độ và thành phố của nhà ga nằm ở phía nam xa nhất là gì?",
    "output": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Ngày, nhiệt độ trung bình và độ ẩm trung bình trong 3 ngày với tốc độ gió lớn nhất là gì?",
    "output": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Ngày, nhiệt độ trung bình và độ ẩm trung bình cho những ngày có 3 tốc độ gió lớn nhất?",
    "output": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và số lượng trạm cho tất cả các thành phố có ít nhất 15 trạm.",
    "output": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15"
  },
  {
    "instruction": "",
    "input": "Tên của mỗi thành phố có ít nhất 15 trạm và nó có bao nhiêu trạm?",
    "output": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15"
  },
  {
    "instruction": "",
    "input": "Tìm ID và tên của các trạm mà ít nhất 200 chuyến đi bắt đầu.",
    "output": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200"
  },
  {
    "instruction": "",
    "input": "ID và tên của tất cả các trạm bắt đầu là khởi đầu của ít nhất 200 chuyến đi là gì?",
    "output": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200"
  },
  {
    "instruction": "",
    "input": "Tìm mã zip trong đó khả năng hiển thị trung bình trung bình thấp hơn 10.",
    "output": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles)  <  10"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi mã zip, chọn tất cả những người có độ nhớt trung bình dưới 10.",
    "output": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles)  <  10"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các thành phố theo thứ tự giảm vĩ độ cao nhất của các trạm của mỗi thành phố.",
    "output": "SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi thành phố, hãy liệt kê tên của họ theo thứ tự giảm theo vĩ độ trạm cao nhất của họ.",
    "output": "SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC"
  },
  {
    "instruction": "",
    "input": "Những ngày có 5 tốc độ che phủ đám mây hàng đầu là gì?Cũng cho tôi biết tốc độ che phủ đám mây.",
    "output": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Các ngày có 5 tỷ lệ che phủ đám mây cao nhất là bao nhiêu và tỷ lệ là bao nhiêu?",
    "output": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5"
  },
  {
    "instruction": "",
    "input": "ID và thời lượng của các chuyến đi với 3 thời lượng hàng đầu là gì?",
    "output": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "ID của các chuyến đi kéo dài nhất và chúng kéo dài bao lâu?",
    "output": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi trạm, trả lại kinh độ và thời gian trung bình của các chuyến đi bắt đầu từ nhà ga.",
    "output": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ID trạm bắt đầu, tên, kinh độ và thời gian trung bình của các chuyến đi bắt đầu ở đó là gì?",
    "output": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi trạm, tìm vĩ độ của nó và thời gian tối thiểu của các chuyến đi kết thúc tại nhà ga.",
    "output": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ID trạm cuối, tên, vĩ độ và thời gian tối thiểu cho các chuyến đi đã kết thúc ở đó là gì?",
    "output": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các trạm riêng biệt mà từ đó một chuyến đi thời gian dưới 100 bắt đầu.",
    "output": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100"
  },
  {
    "instruction": "",
    "input": "Tất cả các tên trạm khởi động khác nhau cho một chuyến đi kéo dài dưới 100 là gì?",
    "output": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các mã zip trong đó điểm sương tối đa chưa bao giờ đạt 70.",
    "output": "SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f  >=  70"
  },
  {
    "instruction": "",
    "input": "Tất cả các mã zip khác nhau có điểm sương tối đa luôn dưới 70 là gì?",
    "output": "SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f  >=  70"
  },
  {
    "instruction": "",
    "input": "Tìm ID cho các chuyến đi kéo dài ít nhất miễn là thời gian trung bình của các chuyến đi trong mã zip 94103.",
    "output": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các chuyến đi có thời lượng miễn là thời lượng chuyến đi trung bình trong mã zip 94103?",
    "output": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)"
  },
  {
    "instruction": "",
    "input": "Các ngày trong đó áp lực mực nước biển trung bình là từ 30,3 đến 31 là gì?",
    "output": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31"
  },
  {
    "instruction": "",
    "input": "Các ngày có áp lực mực nước biển trung bình trong khoảng từ 30,3 đến 31 là gì?",
    "output": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31"
  },
  {
    "instruction": "",
    "input": "Tìm ngày mà sự khác biệt giữa nhiệt độ tối đa và nhiệt độ tối thiểu là nhỏ nhất.Cũng báo cáo sự khác biệt.",
    "output": "SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những ngày có phạm vi nhiệt độ nhỏ nhất là bao nhiêu, và phạm vi đó là bao nhiêu?",
    "output": "SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID và tên của các trạm đã từng có hơn 12 xe đạp?",
    "output": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12"
  },
  {
    "instruction": "",
    "input": "Các ID và tên khác nhau của các trạm đã có hơn 12 chiếc xe đạp có sẵn là gì?",
    "output": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi mã zip trong đó độ ẩm trung bình trung bình dưới 70 và ít nhất 100 chuyến đi diễn ra.",
    "output": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  100"
  },
  {
    "instruction": "",
    "input": "Các mã zip có độ ẩm trung bình dưới 70 là gì và có ít nhất 100 chuyến đi qua đó là gì?",
    "output": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  100"
  },
  {
    "instruction": "",
    "input": "Tên của các trạm nằm ở thành phố Palo Alto nhưng chưa bao giờ là điểm kết thúc của các chuyến đi hơn 100 lần?",
    "output": "SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100"
  },
  {
    "instruction": "",
    "input": "Tên của các trạm nằm ở Palo Alto là gì nhưng chưa bao giờ là điểm cuối của các chuyến đi",
    "output": "SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu chuyến đi bắt đầu từ Thành phố Mountain View và kết thúc tại Thành phố Palo Alto?",
    "output": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Mountain View\" AND T3.city  =  \"Palo Alto\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu chuyến đi được nêu từ một nhà ga ở Mountain View và kết thúc tại một ở Palo Alto?",
    "output": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Mountain View\" AND T3.city  =  \"Palo Alto\""
  },
  {
    "instruction": "",
    "input": "Vĩ độ và kinh độ trung bình của các điểm bắt đầu của tất cả các chuyến đi là gì?",
    "output": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id"
  },
  {
    "instruction": "",
    "input": "Vĩ độ trung bình và kinh độ của tất cả các trạm khởi đầu cho các chuyến đi là gì?",
    "output": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cuốn sách?",
    "output": "SELECT count(*) FROM book"
  },
  {
    "instruction": "",
    "input": "Liệt kê các nhà văn của các cuốn sách theo thứ tự bảng chữ cái tăng dần.",
    "output": "SELECT Writer FROM book ORDER BY Writer ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tiêu đề của các cuốn sách theo thứ tự tăng dần của các vấn đề.",
    "output": "SELECT Title FROM book ORDER BY Issues ASC"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của những cuốn sách có nhà văn không phải là \"Elaine Lee\" là gì?",
    "output": "SELECT Title FROM book WHERE Writer != \"Elaine Lee\""
  },
  {
    "instruction": "",
    "input": "Tiêu đề và vấn đề của các cuốn sách là gì?",
    "output": "SELECT Title ,  Issues FROM book"
  },
  {
    "instruction": "",
    "input": "Ngày của các ấn phẩm theo thứ tự giảm giá của giá là gì?",
    "output": "SELECT Publication_Date FROM publication ORDER BY Price DESC"
  },
  {
    "instruction": "",
    "input": "Các nhà xuất bản riêng biệt của các ấn phẩm với giá cao hơn 5000000 là gì?",
    "output": "SELECT DISTINCT Publisher FROM publication WHERE Price  >  5000000"
  },
  {
    "instruction": "",
    "input": "Liệt kê nhà xuất bản của ấn phẩm với giá cao nhất.",
    "output": "SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê ngày xuất bản của các ấn phẩm với 3 giá thấp nhất.",
    "output": "SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Hiển thị tiêu đề và ngày xuất bản của sách.",
    "output": "SELECT T1.Title ,  T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị các nhà văn đã xuất bản một cuốn sách với giá hơn 4000000.",
    "output": "SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T2.Price  >  4000000"
  },
  {
    "instruction": "",
    "input": "Hiển thị các tiêu đề của sách theo thứ tự giảm dần của giá xuất bản.",
    "output": "SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Price DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị các nhà xuất bản có nhiều hơn một ấn phẩm.",
    "output": "SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các nhà xuất bản khác nhau cùng với số lượng các ấn phẩm họ có.",
    "output": "SELECT Publisher ,  COUNT(*) FROM publication GROUP BY Publisher"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị ngày xuất bản phổ biến nhất.",
    "output": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các nhà văn đã viết nhiều hơn một cuốn sách.",
    "output": "SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tiêu đề của những cuốn sách không được xuất bản.",
    "output": "SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM publication)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các nhà xuất bản có các ấn phẩm có giá cao hơn 10000000 và các ấn phẩm với giá thấp hơn 5000000.",
    "output": "SELECT Publisher FROM publication WHERE Price  >  10000000 INTERSECT SELECT Publisher FROM publication WHERE Price  <  5000000"
  },
  {
    "instruction": "",
    "input": "Số lượng ngày xuất bản riêng biệt là bao nhiêu?",
    "output": "SELECT COUNT (DISTINCT Publication_Date) FROM publication"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ngày xuất bản riêng biệt trong hồ sơ của chúng tôi?",
    "output": "SELECT COUNT (DISTINCT Publication_Date) FROM publication"
  },
  {
    "instruction": "",
    "input": "Hiển thị giá của các ấn phẩm có nhà xuất bản là \"người\" hoặc \"Wiley\"",
    "output": "SELECT Price FROM publication WHERE Publisher  =  \"Person\" OR Publisher  =  \"Wiley\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu diễn viên?",
    "output": "SELECT count(*) FROM actor"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng diễn viên.",
    "output": "SELECT count(*) FROM actor"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các tác nhân theo thứ tự bảng chữ cái tăng dần.",
    "output": "SELECT Name FROM actor ORDER BY Name ASC"
  },
  {
    "instruction": "",
    "input": "Tên của các diễn viên, được đặt hàng theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT Name FROM actor ORDER BY Name ASC"
  },
  {
    "instruction": "",
    "input": "Các nhân vật và thời gian của các diễn viên là gì?",
    "output": "SELECT Character ,  Duration FROM actor"
  },
  {
    "instruction": "",
    "input": "Trả lại các ký tự và thời lượng cho mỗi diễn viên.",
    "output": "SELECT Character ,  Duration FROM actor"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các diễn viên có tuổi không 20.",
    "output": "SELECT Name FROM actor WHERE Age != 20"
  },
  {
    "instruction": "",
    "input": "Tên của các diễn viên không 20 tuổi là gì?",
    "output": "SELECT Name FROM actor WHERE Age != 20"
  },
  {
    "instruction": "",
    "input": "Các nhân vật của các diễn viên theo thứ tự giảm dần của tuổi tác là gì?",
    "output": "SELECT Character FROM actor ORDER BY age DESC"
  },
  {
    "instruction": "",
    "input": "Trả lại các nhân vật cho các diễn viên, được đặt hàng theo độ tuổi giảm dần.",
    "output": "SELECT Character FROM actor ORDER BY age DESC"
  },
  {
    "instruction": "",
    "input": "Thời gian của diễn viên lâu đời nhất là gì?",
    "output": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại thời gian của diễn viên với độ tuổi lớn nhất.",
    "output": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của các vở nhạc kịch với người được đề cử \"Bob Fosse\" là gì?",
    "output": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\""
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các vở nhạc kịch có ứng cử viên Bob Fosse.",
    "output": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\""
  },
  {
    "instruction": "",
    "input": "Các ứng cử viên khác biệt của các vở nhạc kịch với giải thưởng không phải là \"Tony Award\" là gì?",
    "output": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\""
  },
  {
    "instruction": "",
    "input": "Trả lại các đề cử khác nhau của các vở nhạc kịch có một giải thưởng không phải là giải thưởng Tony.",
    "output": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các diễn viên và tên của nhạc kịch mà họ đang tham gia.",
    "output": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID"
  },
  {
    "instruction": "",
    "input": "Tên của các diễn viên và các vở nhạc kịch mà họ đang tham gia là gì?",
    "output": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các diễn viên đã xuất hiện trong âm nhạc với tên \"The Phantom of the Opera\".",
    "output": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\""
  },
  {
    "instruction": "",
    "input": "Tên của các diễn viên đã có mặt trong vở nhạc kịch có tựa đề The Phantom of the Opera là gì?",
    "output": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các diễn viên theo thứ tự giảm dần của năm, vở nhạc kịch của họ được trao.",
    "output": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC"
  },
  {
    "instruction": "",
    "input": "Tên của các diễn viên được đặt hàng giảm dần theo năm mà vở nhạc kịch của họ được trao giải?",
    "output": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các vở nhạc kịch và số lượng diễn viên đã xuất hiện trong các vở nhạc kịch.",
    "output": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu diễn viên đã xuất hiện trong mỗi vở nhạc kịch?",
    "output": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các vở nhạc kịch có ít nhất ba diễn viên.",
    "output": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Tên của các vở nhạc kịch có từ 3 diễn viên trở lên là gì?",
    "output": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Hiển thị các ứng cử viên khác nhau và số lượng nhạc kịch mà họ đã được đề cử.",
    "output": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee"
  },
  {
    "instruction": "",
    "input": "Mỗi người được đề cử được đề cử bao nhiêu vở nhạc kịch?",
    "output": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee"
  },
  {
    "instruction": "",
    "input": "Vui lòng cho thấy người được đề cử đã được đề cử số lần lớn nhất.",
    "output": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Ai là người được đề cử đã được đề cử cho những nhạc kịch nhất?",
    "output": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê kết quả phổ biến nhất của các vở nhạc kịch.",
    "output": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại kết quả thường xuyên nhất trên tất cả các vở nhạc kịch.",
    "output": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các đề cử đã được đề cử nhiều hơn hai vở nhạc kịch.",
    "output": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Ai là người được đề cử đã được đề cử hơn hai lần?",
    "output": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các vở nhạc kịch không có diễn viên.",
    "output": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)"
  },
  {
    "instruction": "",
    "input": "Tên của các vở nhạc kịch không có diễn viên là gì?",
    "output": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các đề cử đã đề cử nhạc kịch cho cả \"Giải thưởng Tony\" và \"Giải thưởng Bàn kịch\".",
    "output": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Drama Desk Award\""
  },
  {
    "instruction": "",
    "input": "Ai là người được đề cử đã được đề cử cho cả Giải thưởng Tony và Giải thưởng Bàn kịch?",
    "output": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Drama Desk Award\""
  },
  {
    "instruction": "",
    "input": "Hiển thị ứng cử viên âm nhạc với giải thưởng \"Bob Fosse\" hoặc \"Cleavant Derricks\".",
    "output": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\""
  },
  {
    "instruction": "",
    "input": "Ai là người được đề cử được đề cử cho một trong những giải thưởng Bob Fosse hoặc Cleavant Derricks?",
    "output": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\""
  },
  {
    "instruction": "",
    "input": "Tìm email của người dùng có tên là \"Mary\".",
    "output": "SELECT email FROM user_profiles WHERE name  =  'Mary'"
  },
  {
    "instruction": "",
    "input": "ID phân vùng của người dùng có tên là \"Iron Man\" là gì.",
    "output": "SELECT partitionid FROM user_profiles WHERE name  =  'Iron Man'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người dùng?",
    "output": "SELECT count(*) FROM user_profiles"
  },
  {
    "instruction": "",
    "input": "Mỗi người dùng có bao nhiêu người theo dõi?",
    "output": "SELECT count(*) FROM follows"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng người theo dõi cho mỗi người dùng.",
    "output": "SELECT count(*) FROM follows GROUP BY f1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tweet trong hồ sơ.",
    "output": "SELECT count(*) FROM tweets"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng người dùng đã đăng một số tweet.",
    "output": "SELECT count(DISTINCT UID) FROM tweets"
  },
  {
    "instruction": "",
    "input": "Find the name and email of the user whose name contains the word ‘Swift’.",
    "output": "SELECT name ,  email FROM user_profiles WHERE name LIKE '%Swift%'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người dùng có email có chứa ‘siêu sao hoặc‘ edu.",
    "output": "SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%'"
  },
  {
    "instruction": "",
    "input": "Trả lại văn bản của các tweet về chủ đề 'thực tập'.",
    "output": "SELECT text FROM tweets WHERE text LIKE '%intern%'"
  },
  {
    "instruction": "",
    "input": "Tìm tên và email của người dùng có hơn 1000 người theo dõi.",
    "output": "SELECT name ,  email FROM user_profiles WHERE followers  >  1000"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người dùng có số lượng người theo dõi lớn hơn người dùng có tên là \"Tyler Swift\".",
    "output": "SELECT T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  (SELECT count(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 WHERE T1.name  =  'Tyler Swift')"
  },
  {
    "instruction": "",
    "input": "Tìm tên và email cho người dùng có nhiều hơn một người theo dõi.",
    "output": "SELECT T1.name ,  T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người dùng có nhiều hơn một tweet.",
    "output": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm ID của người dùng được theo dõi bởi Mary và Susan.",
    "output": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Susan\""
  },
  {
    "instruction": "",
    "input": "Tìm ID của người dùng được theo sau bởi Mary hoặc Susan.",
    "output": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\" OR T1.name  =  \"Susan\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của người dùng có số lượng người theo dõi lớn nhất.",
    "output": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên và email của người dùng theo sau là số người ít nhất.",
    "output": "SELECT name ,  email FROM user_profiles ORDER BY followers LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và số lượng người theo dõi cho mỗi người dùng và sắp xếp kết quả theo số lượng người theo dõi theo thứ tự giảm dần.",
    "output": "SELECT name ,  followers FROM user_profiles ORDER BY followers DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của 5 người dùng theo sau là số lượng người dùng khác lớn nhất.",
    "output": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Liệt kê văn bản của tất cả các tweet theo thứ tự ngày.",
    "output": "SELECT text FROM tweets ORDER BY createdate"
  },
  {
    "instruction": "",
    "input": "Tìm tên của mỗi người dùng và số tweet được tweet bởi mỗi người trong số họ.",
    "output": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid"
  },
  {
    "instruction": "",
    "input": "Tìm tên và ID phân vùng cho người dùng đã tweet ít hơn hai lần.",
    "output": "SELECT T1.name ,  T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  <  2"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người dùng đã tweet nhiều lần và số lượng tweet được họ tweet.",
    "output": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng người theo dõi trung bình cho người dùng không có bất kỳ tweet nào.",
    "output": "SELECT avg(followers) FROM user_profiles WHERE UID NOT IN (SELECT UID FROM tweets)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng người theo dõi trung bình cho người dùng có một số tweet.",
    "output": "SELECT avg(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)"
  },
  {
    "instruction": "",
    "input": "Tìm tối đa và tổng số người theo dõi của tất cả người dùng.",
    "output": "SELECT max(followers) ,  sum(followers) FROM user_profiles"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các mục danh mục.",
    "output": "SELECT distinct(catalog_entry_name) FROM catalog_contents"
  },
  {
    "instruction": "",
    "input": "Tất cả các tên nhập danh mục là gì?",
    "output": "SELECT distinct(catalog_entry_name) FROM catalog_contents"
  },
  {
    "instruction": "",
    "input": "Tìm danh sách các loại dữ liệu thuộc tính được sở hữu bởi hơn 3 định nghĩa thuộc tính.",
    "output": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3"
  },
  {
    "instruction": "",
    "input": "Các loại dữ liệu thuộc tính với hơn 3 định nghĩa thuộc tính là gì?",
    "output": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3"
  },
  {
    "instruction": "",
    "input": "Kiểu dữ liệu thuộc tính của thuộc tính có tên \"màu xanh lá cây\" là gì?",
    "output": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\""
  },
  {
    "instruction": "",
    "input": "Tìm kiểu dữ liệu thuộc tính cho thuộc tính có tên là \"màu xanh lá cây\".",
    "output": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\""
  },
  {
    "instruction": "",
    "input": "Tìm tên và cấp độ của cấu trúc danh mục với cấp độ từ 5 đến 10.",
    "output": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"
  },
  {
    "instruction": "",
    "input": "Tên và mức độ của cấu trúc danh mục với số cấp độ từ 5 đến 10",
    "output": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các nhà xuất bản danh mục có tên chứa \"Murray\"",
    "output": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\""
  },
  {
    "instruction": "",
    "input": "Những nhà xuất bản danh mục nào có \"Murray\" trong tên của họ?",
    "output": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\""
  },
  {
    "instruction": "",
    "input": "Which catalog publisher has published the most catalogs?",
    "output": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Find the catalog publisher that has the most catalogs.",
    "output": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Find the names and publication dates of all catalogs that have catalog level number greater than 5.",
    "output": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5"
  },
  {
    "instruction": "",
    "input": "Tên và ngày xuất bản của các danh mục với số cấp danh mục trên 5 là gì?",
    "output": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5"
  },
  {
    "instruction": "",
    "input": "What are the entry names of catalog with the attribute possessed by most entries.",
    "output": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tìm tên nhập của danh mục với thuộc tính có nhiều mục nhất.",
    "output": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tên nhập cảnh của danh mục đắt nhất (tính bằng USD) là gì?",
    "output": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên nhập của danh mục với giá cao nhất (tính bằng USD).",
    "output": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "What is the level name of the cheapest catalog (in USD)?",
    "output": "SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Find the level name of the catalog with the lowest price (in USD).",
    "output": "SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1"
  },
  {
    "instruction": "",
    "input": "What are the average and minimum price (in Euro) of all products?",
    "output": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents"
  },
  {
    "instruction": "",
    "input": "Give me the average and minimum price (in Euro) of the products.",
    "output": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents"
  },
  {
    "instruction": "",
    "input": "What is the product with the highest height? Give me the catalog entry name.",
    "output": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Which catalog content has the highest height? Give me the catalog entry name.",
    "output": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Find the name of the product that has the smallest capacity.",
    "output": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Nội dung danh mục nào có công suất nhỏ nhất?Trả lại tên nhập danh mục.",
    "output": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các sản phẩm có số lượng cổ phiếu bắt đầu bằng \"2\".",
    "output": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\""
  },
  {
    "instruction": "",
    "input": "Nội dung danh mục nào có số lượng cổ phiếu sản phẩm bắt đầu từ \"2\"?Hiển thị tên nhập danh danh mục.",
    "output": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\""
  },
  {
    "instruction": "",
    "input": "Find the names of catalog entries with level number 8.",
    "output": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\""
  },
  {
    "instruction": "",
    "input": "What are the names of catalog entries with level number 8?",
    "output": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sản phẩm có chiều dài nhỏ hơn 3 hoặc chiều cao lớn hơn 5.",
    "output": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5"
  },
  {
    "instruction": "",
    "input": "Nội dung danh mục nào có độ dài dưới 3 hoặc trên 5?Tìm tên nhập danh danh mục.",
    "output": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5"
  },
  {
    "instruction": "",
    "input": "Tìm tên và ID thuộc tính của các định nghĩa thuộc tính có giá trị thuộc tính 0.",
    "output": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0"
  },
  {
    "instruction": "",
    "input": "Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID.",
    "output": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0"
  },
  {
    "instruction": "",
    "input": "Find the name and capacity of products with price greater than 700 (in USD).",
    "output": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700"
  },
  {
    "instruction": "",
    "input": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.",
    "output": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700"
  },
  {
    "instruction": "",
    "input": "Find the dates on which more than one revisions were made.",
    "output": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Trên đó nhiều hơn một lần sửa đổi đã được thực hiện trên các danh mục.",
    "output": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm trong hồ sơ?",
    "output": "SELECT count(*) FROM catalog_contents"
  },
  {
    "instruction": "",
    "input": "Find the total number of catalog contents.",
    "output": "SELECT count(*) FROM catalog_contents"
  },
  {
    "instruction": "",
    "input": "Name all the products with next entry ID greater than 8.",
    "output": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8"
  },
  {
    "instruction": "",
    "input": "What are the catalog entry names of the products with next entry ID above 8?",
    "output": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8"
  },
  {
    "instruction": "",
    "input": "How many aircrafts do we have?",
    "output": "SELECT count(*) FROM Aircraft"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu máy bay tồn tại trong cơ sở dữ liệu?",
    "output": "SELECT count(*) FROM Aircraft"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và khoảng cách cho tất cả các máy bay.",
    "output": "SELECT name ,  distance FROM Aircraft"
  },
  {
    "instruction": "",
    "input": "What are the names and distances for all airplanes?",
    "output": "SELECT name ,  distance FROM Aircraft"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID cho tất cả các máy bay có hơn 1000 khoảng cách.",
    "output": "SELECT aid FROM Aircraft WHERE distance  >  1000"
  },
  {
    "instruction": "",
    "input": "What are the ids of all aircrafts that can cover a distance of more than 1000?",
    "output": "SELECT aid FROM Aircraft WHERE distance  >  1000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu máy bay có khoảng cách từ 1000 đến 5000?",
    "output": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000"
  },
  {
    "instruction": "",
    "input": "What is the count of aircrafts that have a distance between 1000 and 5000?",
    "output": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000"
  },
  {
    "instruction": "",
    "input": "Tên và khoảng cách cho máy bay có ID 12 là gì?",
    "output": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12"
  },
  {
    "instruction": "",
    "input": "What is the name and distance for the aircraft that has an id of 12?",
    "output": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12"
  },
  {
    "instruction": "",
    "input": "Khoảng cách tối thiểu, trung bình và tối đa của tất cả các máy bay là bao nhiêu.",
    "output": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft"
  },
  {
    "instruction": "",
    "input": "Trả lại khoảng cách tối thiểu, trung bình và tối đa đi trên tất cả các máy bay.",
    "output": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID và tên của máy bay với khoảng cách tối đa.",
    "output": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "What is the id and name of the aircraft that can cover the maximum distance?",
    "output": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên máy bay với ba khoảng cách thấp nhất.",
    "output": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Máy bay có 3 chiều dài ngắn nhất là gì?Liệt kê tên của họ.",
    "output": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên cho tất cả các máy bay có khoảng cách nhiều hơn mức trung bình.",
    "output": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các máy bay có thể bao gồm nhiều khoảng cách hơn mức trung bình là gì?",
    "output": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)"
  },
  {
    "instruction": "",
    "input": "Chúng tôi có bao nhiêu nhân viên?",
    "output": "SELECT count(*) FROM Employee"
  },
  {
    "instruction": "",
    "input": "Số lượng nhân viên là gì?",
    "output": "SELECT count(*) FROM Employee"
  },
  {
    "instruction": "",
    "input": "Show name and salary for all employees sorted by salary.",
    "output": "SELECT name ,  salary FROM Employee ORDER BY salary"
  },
  {
    "instruction": "",
    "input": "Tên và tiền lương của tất cả nhân viên theo thứ tự tiền lương là gì?",
    "output": "SELECT name ,  salary FROM Employee ORDER BY salary"
  },
  {
    "instruction": "",
    "input": "Show ids for all employees with at least 100000 salary.",
    "output": "SELECT eid FROM Employee WHERE salary  >  100000"
  },
  {
    "instruction": "",
    "input": "ID của mỗi nhân viên có ít nhất mức lương 100000 là bao nhiêu?",
    "output": "SELECT eid FROM Employee WHERE salary  >  100000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhân viên có tiền lương từ 100000 đến 200000?",
    "output": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000"
  },
  {
    "instruction": "",
    "input": "What is the number of employees that have a salary between 100000 and 200000?",
    "output": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000"
  },
  {
    "instruction": "",
    "input": "Tên và tiền lương cho nhân viên có ID 242518965 là gì?",
    "output": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965"
  },
  {
    "instruction": "",
    "input": "Tên và tiền lương của nhân viên với ID 242518965 là gì?",
    "output": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965"
  },
  {
    "instruction": "",
    "input": "Mức lương trung bình và tối đa của tất cả nhân viên là bao nhiêu.",
    "output": "SELECT avg(salary) ,  max(salary) FROM Employee"
  },
  {
    "instruction": "",
    "input": "Mức lương trung bình và lớn nhất của tất cả nhân viên là bao nhiêu?",
    "output": "SELECT avg(salary) ,  max(salary) FROM Employee"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID và tên của nhân viên với mức lương tối đa.",
    "output": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID và tên của nhân viên có mức lương cao nhất là gì?",
    "output": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của nhân viên với ba mức lương thấp nhất.",
    "output": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tên của 3 nhân viên được trả tiền ít nhất là gì?",
    "output": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên cho tất cả nhân viên có tiền lương nhiều hơn mức trung bình.",
    "output": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các nhân viên có mức lương cao hơn mức trung bình là gì?",
    "output": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID và tiền lương của Mark Young.",
    "output": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'"
  },
  {
    "instruction": "",
    "input": "What is the id and salary of the employee named Mark Young?",
    "output": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu chuyến bay?",
    "output": "SELECT count(*) FROM Flight"
  },
  {
    "instruction": "",
    "input": "What is the number of flights?",
    "output": "SELECT count(*) FROM Flight"
  },
  {
    "instruction": "",
    "input": "Hiển thị số chuyến bay, nguồn gốc, điểm đến của tất cả các chuyến bay theo thứ tự bảng chữ cái của các thành phố khởi hành.",
    "output": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin"
  },
  {
    "instruction": "",
    "input": "Số chuyến bay, nguồn gốc và điểm đến cho tất cả các chuyến bay theo thứ tự bảng chữ cái của các thành phố khởi hành là gì?",
    "output": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả số lượng chuyến bay từ Los Angeles.",
    "output": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\""
  },
  {
    "instruction": "",
    "input": "What are the numbers of all flights coming from Los Angeles?",
    "output": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\""
  },
  {
    "instruction": "",
    "input": "Hiển thị nguồn gốc của tất cả các chuyến bay với điểm đến Honolulu.",
    "output": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\""
  },
  {
    "instruction": "",
    "input": "Nguồn gốc của tất cả các chuyến bay đang hướng đến Honolulu là gì?",
    "output": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\""
  },
  {
    "instruction": "",
    "input": "Show me the departure date and arrival date for all flights from Los Angeles to Honolulu.",
    "output": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""
  },
  {
    "instruction": "",
    "input": "Ngày khởi hành và đến ngày của tất cả các chuyến bay từ LA đến Honolulu là gì?",
    "output": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""
  },
  {
    "instruction": "",
    "input": "Hiển thị số chuyến bay cho tất cả các chuyến bay với hơn 2000 khoảng cách.",
    "output": "SELECT flno FROM Flight WHERE distance  >  2000"
  },
  {
    "instruction": "",
    "input": "Số lượng của tất cả các chuyến bay có thể bao gồm khoảng cách hơn 2000 là gì?",
    "output": "SELECT flno FROM Flight WHERE distance  >  2000"
  },
  {
    "instruction": "",
    "input": "Giá trung bình cho các chuyến bay từ Los Angeles đến Honolulu là bao nhiêu.",
    "output": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""
  },
  {
    "instruction": "",
    "input": "Giá trung bình cho các chuyến bay từ LA đến Honolulu là bao nhiêu?",
    "output": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""
  },
  {
    "instruction": "",
    "input": "Hiển thị nguồn gốc và điểm đến cho các chuyến bay có giá cao hơn 300.",
    "output": "SELECT origin ,  destination FROM Flight WHERE price  >  300"
  },
  {
    "instruction": "",
    "input": "Nguồn gốc và điểm đến cho tất cả các chuyến bay có giá cao hơn 300 là gì?",
    "output": "SELECT origin ,  destination FROM Flight WHERE price  >  300"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng chuyến bay và khoảng cách của chuyến bay với giá tối đa.",
    "output": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Số chuyến bay và khoảng cách của nó cho cái có giá tối đa là bao nhiêu?",
    "output": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng chuyến bay của các chuyến bay với ba khoảng cách thấp nhất.",
    "output": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Số lượng của các chuyến bay ngắn nhất là gì?",
    "output": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Khoảng cách trung bình và giá trung bình cho các chuyến bay từ Los Angeles là bao nhiêu.",
    "output": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\""
  },
  {
    "instruction": "",
    "input": "Khoảng cách và giá trung bình cho tất cả các chuyến bay từ LA là bao nhiêu?",
    "output": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\""
  },
  {
    "instruction": "",
    "input": "Show all origins and the number of flights from each origin.",
    "output": "SELECT origin ,  count(*) FROM Flight GROUP BY origin"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi nguồn gốc, có bao nhiêu chuyến bay đến từ đó?",
    "output": "SELECT origin ,  count(*) FROM Flight GROUP BY origin"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các điểm đến và số lượng chuyến bay đến mỗi điểm đến.",
    "output": "SELECT destination ,  count(*) FROM Flight GROUP BY destination"
  },
  {
    "instruction": "",
    "input": "Các điểm đến và số lượng chuyến bay đến từng điểm là gì?",
    "output": "SELECT destination ,  count(*) FROM Flight GROUP BY destination"
  },
  {
    "instruction": "",
    "input": "Nguồn gốc nào có số lượng chuyến bay nhất?",
    "output": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "What place has the most flights coming from there?",
    "output": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Which destination has least number of flights?",
    "output": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Điểm đến nào có số lượng chuyến bay ít nhất?",
    "output": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên máy bay cho chuyến bay với số 99 là gì",
    "output": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99"
  },
  {
    "instruction": "",
    "input": "Tên của máy bay trên chuyến bay số 99 là gì?",
    "output": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các số chuyến bay với máy bay Airbus A340-300.",
    "output": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\""
  },
  {
    "instruction": "",
    "input": "Các số chuyến bay cho máy bay Airbus A340-300 là gì?",
    "output": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên máy bay và số lượng chuyến bay cho mỗi máy bay.",
    "output": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid"
  },
  {
    "instruction": "",
    "input": "Tên của mỗi máy bay là gì và mỗi chuyến bay hoàn thành bao nhiêu chuyến bay?",
    "output": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid"
  },
  {
    "instruction": "",
    "input": "Show names for all aircraft with at least two flights.",
    "output": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2"
  },
  {
    "instruction": "",
    "input": "Tên cho tất cả các máy bay có ít nhất 2 chuyến bay là gì?",
    "output": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhân viên có chứng chỉ.",
    "output": "SELECT count(DISTINCT eid) FROM Certificate"
  },
  {
    "instruction": "",
    "input": "Số lượng nhân viên riêng biệt có chứng chỉ là gì?",
    "output": "SELECT count(DISTINCT eid) FROM Certificate"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID cho tất cả nhân viên không có chứng chỉ.",
    "output": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các nhân viên không có chứng chỉ là gì?",
    "output": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên cho tất cả các máy bay mà John Williams có chứng chỉ.",
    "output": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\""
  },
  {
    "instruction": "",
    "input": "What are the names of all aircrafts that John Williams have certificates to be able to fly?",
    "output": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên cho tất cả nhân viên có Giấy chứng nhận Boeing 737-800.",
    "output": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các nhân viên có chứng chỉ để bay Boeing 737-800 là gì?",
    "output": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên cho tất cả các nhân viên có chứng chỉ trên cả Boeing 737-800 và Airbus A340-300.",
    "output": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các nhân viên có thể bay cả Boeing 737-800 và Airbus A340-300 là gì?",
    "output": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\""
  },
  {
    "instruction": "",
    "input": "Show names for all employees who do not have certificate of Boeing 737-800.",
    "output": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các nhân viên không được chứng nhận bay Boeing 737-800 là gì?",
    "output": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên máy bay mà ít người có chứng chỉ nhất.",
    "output": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của máy bay mà ít người nhất được chứng nhận bay là gì?",
    "output": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và khoảng cách của các máy bay với hơn 5000 khoảng cách và ít nhất 5 người có chứng chỉ.",
    "output": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5"
  },
  {
    "instruction": "",
    "input": "Tên và khoảng cách của mọi máy bay có thể bao gồm khoảng cách hơn 5000 và ít nhất 5 người có thể bay?",
    "output": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5"
  },
  {
    "instruction": "",
    "input": "Mức lương và tên của nhân viên có số lượng chứng chỉ máy bay nhiều nhất là bao nhiêu?",
    "output": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mức lương và tên của nhân viên được chứng nhận để bay nhiều máy bay nhất là bao nhiêu?",
    "output": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mức lương và tên của nhân viên có số lượng chứng chỉ nhiều nhất trên máy bay có khoảng cách hơn 5000?",
    "output": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mức lương và tên của nhân viên có nhiều chứng chỉ nhất để bay trên máy bay hơn 5000?",
    "output": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu dị ứng?",
    "output": "SELECT count(DISTINCT allergy) FROM Allergy_type"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mục Dị ứng?",
    "output": "SELECT count(DISTINCT allergy) FROM Allergy_type"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại dị ứng khác nhau tồn tại?",
    "output": "SELECT count(DISTINCT allergytype) FROM Allergy_type"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu dị ứng khác biệt?",
    "output": "SELECT count(DISTINCT allergytype) FROM Allergy_type"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các loại dị ứng.",
    "output": "SELECT DISTINCT allergytype FROM Allergy_type"
  },
  {
    "instruction": "",
    "input": "Các loại dị ứng khác nhau là gì?",
    "output": "SELECT DISTINCT allergytype FROM Allergy_type"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các dị ứng và các loại của chúng.",
    "output": "SELECT allergy ,  allergytype FROM Allergy_type"
  },
  {
    "instruction": "",
    "input": "Dị ứng và loại của chúng là gì?",
    "output": "SELECT allergy ,  allergytype FROM Allergy_type"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả dị ứng với thực phẩm loại.",
    "output": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\""
  },
  {
    "instruction": "",
    "input": "Tất cả các dị ứng thực phẩm khác nhau là gì?",
    "output": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\""
  },
  {
    "instruction": "",
    "input": "Loại mèo dị ứng là gì?",
    "output": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\""
  },
  {
    "instruction": "",
    "input": "Dị ứng của một loại dị ứng mèo là gì?",
    "output": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu dị ứng có động vật loại?",
    "output": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu dị ứng loại động vật tồn tại?",
    "output": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các loại dị ứng và số lượng dị ứng trong mỗi loại.",
    "output": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype"
  },
  {
    "instruction": "",
    "input": "Các loại dị ứng là gì và có bao nhiêu dị ứng tương ứng với mỗi loại?",
    "output": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype"
  },
  {
    "instruction": "",
    "input": "Which allergy type has most number of allergies?",
    "output": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại dị ứng nào là phổ biến nhất?",
    "output": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại dị ứng nào có số lượng dị ứng ít nhất?",
    "output": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại dị ứng nào là ít phổ biến nhất?",
    "output": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên ở đó?",
    "output": "SELECT count(*) FROM Student"
  },
  {
    "instruction": "",
    "input": "What is the total number of students?",
    "output": "SELECT count(*) FROM Student"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và họ cho tất cả các sinh viên.",
    "output": "SELECT Fname ,  Lname FROM Student"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của tất cả các sinh viên là gì",
    "output": "SELECT Fname ,  Lname FROM Student"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cố vấn khác nhau được liệt kê?",
    "output": "SELECT count(DISTINCT advisor) FROM Student"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cố vấn?",
    "output": "SELECT count(DISTINCT advisor) FROM Student"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các chuyên ngành.",
    "output": "SELECT DISTINCT Major FROM Student"
  },
  {
    "instruction": "",
    "input": "Các chuyên ngành khác nhau là gì?",
    "output": "SELECT DISTINCT Major FROM Student"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các thành phố nơi sinh viên sống.",
    "output": "SELECT DISTINCT city_code FROM Student"
  },
  {
    "instruction": "",
    "input": "Học sinh sống ở thành phố nào?",
    "output": "SELECT DISTINCT city_code FROM Student"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, họ, tuổi cho tất cả các sinh viên nữ.Tình dục của họ là F.",
    "output": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'"
  },
  {
    "instruction": "",
    "input": "Tên và tuổi đầy đủ cho tất cả các sinh viên nữ có giới tính là gì?",
    "output": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID sinh viên cho tất cả các sinh viên nam.",
    "output": "SELECT StuID FROM Student WHERE Sex  =  'M'"
  },
  {
    "instruction": "",
    "input": "ID sinh viên cho tất cả học sinh nam là gì?",
    "output": "SELECT StuID FROM Student WHERE Sex  =  'M'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh 18 tuổi?",
    "output": "SELECT count(*) FROM Student WHERE age  =  18"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh 18 tuổi?",
    "output": "SELECT count(*) FROM Student WHERE age  =  18"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các ID sinh viên lớn hơn 20 tuổi.",
    "output": "SELECT StuID FROM Student WHERE age  >  20"
  },
  {
    "instruction": "",
    "input": "ID sinh viên cho học sinh trên 20 tuổi là gì?",
    "output": "SELECT StuID FROM Student WHERE age  >  20"
  },
  {
    "instruction": "",
    "input": "Học sinh có tên cuối cùng là \"Kim\" sống ở thành phố nào?",
    "output": "SELECT city_code FROM Student WHERE LName  =  \"Kim\""
  },
  {
    "instruction": "",
    "input": "Cho thành phố rằng sinh viên có tên gia đình là Kim sống.",
    "output": "SELECT city_code FROM Student WHERE LName  =  \"Kim\""
  },
  {
    "instruction": "",
    "input": "Who is the advisor of student with ID 1004?",
    "output": "SELECT Advisor FROM Student WHERE StuID  =  1004"
  },
  {
    "instruction": "",
    "input": "Ai khuyên sinh viên 1004?",
    "output": "SELECT Advisor FROM Student WHERE StuID  =  1004"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên sống ở HKG hoặc Chi?",
    "output": "SELECT count(*) FROM Student WHERE city_code  =  \"HKG\" OR city_code  =  \"CHI\""
  },
  {
    "instruction": "",
    "input": "Cung cấp cho số lượng sinh viên sống trong HKG hoặc Chi.",
    "output": "SELECT count(*) FROM Student WHERE city_code  =  \"HKG\" OR city_code  =  \"CHI\""
  },
  {
    "instruction": "",
    "input": "Hiển thị độ tuổi tối thiểu, trung bình và tối đa của tất cả học sinh.",
    "output": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student"
  },
  {
    "instruction": "",
    "input": "Tuổi tối thiểu, trung bình và tối đa trên tất cả các sinh viên là bao nhiêu?",
    "output": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của sinh viên trẻ nhất là gì?",
    "output": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)"
  },
  {
    "instruction": "",
    "input": "Cung cấp tên cuối cùng của sinh viên trẻ nhất.",
    "output": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID học sinh của học sinh lớn nhất.",
    "output": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)"
  },
  {
    "instruction": "",
    "input": "What student id corresponds to the oldest student?",
    "output": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các chuyên ngành và số lượng sinh viên tương ứng.",
    "output": "SELECT major ,  count(*) FROM Student GROUP BY major"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh cho mỗi chuyên ngành?",
    "output": "SELECT major ,  count(*) FROM Student GROUP BY major"
  },
  {
    "instruction": "",
    "input": "Những học sinh nào có số lượng sinh viên nhất?",
    "output": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Thiếu tá lớn nhất là gì?",
    "output": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Show all ages and corresponding number of students.",
    "output": "SELECT age ,  count(*) FROM Student GROUP BY age"
  },
  {
    "instruction": "",
    "input": "How old is each student and how many students are each age?",
    "output": "SELECT age ,  count(*) FROM Student GROUP BY age"
  },
  {
    "instruction": "",
    "input": "Hiển thị tuổi trung bình cho học sinh nam và nữ.",
    "output": "SELECT avg(age) ,  sex FROM Student GROUP BY sex"
  },
  {
    "instruction": "",
    "input": "Độ tuổi trung bình của học sinh nam và nữ là gì?",
    "output": "SELECT avg(age) ,  sex FROM Student GROUP BY sex"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các thành phố và số lượng sinh viên tương ứng.",
    "output": "SELECT city_code ,  count(*) FROM Student GROUP BY city_code"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh sống ở mỗi thành phố?",
    "output": "SELECT city_code ,  count(*) FROM Student GROUP BY city_code"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các cố vấn và số lượng sinh viên tương ứng.",
    "output": "SELECT advisor ,  count(*) FROM Student GROUP BY advisor"
  },
  {
    "instruction": "",
    "input": "Mỗi cố vấn có bao nhiêu sinh viên?",
    "output": "SELECT advisor ,  count(*) FROM Student GROUP BY advisor"
  },
  {
    "instruction": "",
    "input": "Cố vấn nào có số lượng sinh viên nhất?",
    "output": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho cố vấn với nhiều sinh viên nhất.",
    "output": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh bị dị ứng mèo?",
    "output": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"Cat\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh bị ảnh hưởng bởi dị ứng mèo?",
    "output": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"Cat\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các ID sinh viên có ít nhất hai dị ứng.",
    "output": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "ID học sinh của các sinh viên có nhiều dị ứng là gì?",
    "output": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "What are the student ids of students who don't have any allergies?",
    "output": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy"
  },
  {
    "instruction": "",
    "input": "Học sinh nào không bị ảnh hưởng bởi dị ứng?",
    "output": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh nữ bị dị ứng sữa hoặc trứng?",
    "output": "SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  \"F\" AND T1.allergy  =  \"Milk\" OR T1.allergy  =  \"Eggs\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh là nữ bị dị ứng với sữa hoặc trứng?",
    "output": "SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  \"F\" AND T1.allergy  =  \"Milk\" OR T1.allergy  =  \"Eggs\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh bị dị ứng thực phẩm?",
    "output": "SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  \"food\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh bị ảnh hưởng bởi dị ứng liên quan đến thực phẩm?",
    "output": "SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  \"food\""
  },
  {
    "instruction": "",
    "input": "Dị ứng nào có số lượng sinh viên bị ảnh hưởng nhất?",
    "output": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Dị ứng nào là phổ biến nhất?",
    "output": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các dị ứng với số lượng học sinh bị ảnh hưởng.",
    "output": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh bị dị ứng khác nhau?",
    "output": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các loại dị ứng với số lượng học sinh bị ảnh hưởng.",
    "output": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh bị ảnh hưởng bởi từng loại dị ứng?",
    "output": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype"
  },
  {
    "instruction": "",
    "input": "Tìm họ và tuổi của học sinh bị dị ứng với cả sữa và mèo.",
    "output": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")"
  },
  {
    "instruction": "",
    "input": "What are the last names and ages of the students who are allergic to milk and cat?",
    "output": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")"
  },
  {
    "instruction": "",
    "input": "What are the allergies and their types that the student with first name Lisa has? And order the result by name of allergies.",
    "output": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy"
  },
  {
    "instruction": "",
    "input": "Những người dị ứng mà cô gái tên Lisa có là gì?Và các loại của chúng là gì?Đặt hàng kết quả bằng tên dị ứng.",
    "output": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy"
  },
  {
    "instruction": "",
    "input": "Tìm tên và giới tính của học sinh bị dị ứng với sữa nhưng không phải là mèo.",
    "output": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")"
  },
  {
    "instruction": "",
    "input": "Tên và giới tính của các sinh viên bị dị ứng với sữa là gì nhưng có thể nuôi mèo là gì?",
    "output": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")"
  },
  {
    "instruction": "",
    "input": "Tìm độ tuổi trung bình của các sinh viên bị dị ứng với các loại thực phẩm và động vật.",
    "output": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")"
  },
  {
    "instruction": "",
    "input": "Trung bình các sinh viên bị dị ứng với thực phẩm và động vật bao nhiêu tuổi?",
    "output": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên đầu tiên và cuối cùng của các sinh viên không bị dị ứng loại thực phẩm.",
    "output": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của mỗi học sinh không bị dị ứng với bất kỳ loại thực phẩm nào.",
    "output": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")"
  },
  {
    "instruction": "",
    "input": "Find the number of male (sex is 'M') students who have some food type allery.",
    "output": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")"
  },
  {
    "instruction": "",
    "input": "How many male students (sex is 'M') are allergic to any type of food?",
    "output": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")"
  },
  {
    "instruction": "",
    "input": "Find the different first names and cities of the students who have allergy to milk or cat.",
    "output": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" OR T2.Allergy  =  \"Cat\""
  },
  {
    "instruction": "",
    "input": "Tên và thành phố đầu tiên riêng biệt của các sinh viên bị dị ứng với sữa hoặc cho mèo là gì?",
    "output": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" OR T2.Allergy  =  \"Cat\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng học sinh lớn hơn 18 tuổi và không bị dị ứng với thức ăn hoặc động vật.",
    "output": "SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" OR T2.allergytype  =  \"animal\")"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh trên 18 tuổi và không bị dị ứng với loại thực phẩm hoặc loại động vật?",
    "output": "SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" OR T2.allergytype  =  \"animal\")"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên và chuyên ngành các sinh viên không phải là người đến đậu nành.",
    "output": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")"
  },
  {
    "instruction": "",
    "input": "What are the first name and major of the students who are able to consume soy?",
    "output": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")"
  },
  {
    "instruction": "",
    "input": "Danh sách 5 quốc gia hàng đầu theo số lượng hóa đơn.Liệt kê tên quốc gia và số lượng hóa đơn.",
    "output": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;"
  },
  {
    "instruction": "",
    "input": "5 quốc gia hàng đầu theo số lượng hóa đơn là gì và họ có bao nhiêu quốc gia?",
    "output": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;"
  },
  {
    "instruction": "",
    "input": "Danh sách 8 quốc gia hàng đầu theo quy mô gộp/tổng ​​số hóa đơn.Liệt kê tên quốc gia và quy mô hóa đơn tổng.",
    "output": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;"
  },
  {
    "instruction": "",
    "input": "Tên của 8 quốc gia hàng đầu theo tổng kích thước hóa đơn và những kích thước đó là gì?",
    "output": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;"
  },
  {
    "instruction": "",
    "input": "Danh sách 10 quốc gia hàng đầu theo quy mô hóa đơn trung bình.Liệt kê tên quốc gia và kích thước hóa đơn trung bình.",
    "output": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;"
  },
  {
    "instruction": "",
    "input": "Tên của các quốc gia và quy mô hóa đơn trung bình của các quốc gia hàng đầu theo quy mô là gì?",
    "output": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;"
  },
  {
    "instruction": "",
    "input": "Find out 5 customers who most recently purchased something. List customers' first and last name.",
    "output": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và tên cuối cùng của 5 khách hàng đã mua một cái gì đó gần đây nhất là gì?",
    "output": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;"
  },
  {
    "instruction": "",
    "input": "Tìm hiểu 10 khách hàng hàng đầu theo tổng số đơn đặt hàng.Liệt kê họ và họ đầu tiên của khách hàng và số lượng đơn đặt hàng.",
    "output": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;"
  },
  {
    "instruction": "",
    "input": "10 tên đầu tiên và họ hàng đầu của khách hàng hàng đầu theo tổng số đơn đặt hàng là gì và họ đã thực hiện bao nhiêu đơn đặt hàng?",
    "output": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;"
  },
  {
    "instruction": "",
    "input": "List the top 10 customers by total gross sales. List customers' first and last name and total gross sales.",
    "output": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;"
  },
  {
    "instruction": "",
    "input": "10 họ và tên đầu tiên của khách hàng hàng đầu với tổng doanh thu cao nhất là gì, và doanh số bán hàng là gì?",
    "output": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;"
  },
  {
    "instruction": "",
    "input": "List the top 5 genres by number of tracks. List genres name and total tracks.",
    "output": "SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;"
  },
  {
    "instruction": "",
    "input": "How many tracks does each genre have and what are the names of the top 5?",
    "output": "SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;"
  },
  {
    "instruction": "",
    "input": "Liệt kê mọi tiêu đề của mỗi album.",
    "output": "SELECT title FROM albums;"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của tất cả các album là gì?",
    "output": "SELECT title FROM albums;"
  },
  {
    "instruction": "",
    "input": "List every album ordered by album title in ascending order.",
    "output": "SELECT title FROM albums ORDER BY title;"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của tất cả các album theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT title FROM albums ORDER BY title;"
  },
  {
    "instruction": "",
    "input": "Liệt kê mỗi album có tiêu đề bắt đầu với một thứ tự bảng chữ cái.",
    "output": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của tất cả các album bắt đầu với thứ tự bảng chữ cái là gì?",
    "output": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;"
  },
  {
    "instruction": "",
    "input": "Liệt kê các khách hàng đầu tiên và họ của 10 hóa đơn ít đắt tiền nhất.",
    "output": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;"
  },
  {
    "instruction": "",
    "input": "Họ và tên đầu tiên của khách hàng với 10 hóa đơn rẻ nhất là gì?",
    "output": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tổng số lượng hóa đơn từ Chicago, IL.",
    "output": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";"
  },
  {
    "instruction": "",
    "input": "What are the total amount of money in the invoices billed from Chicago, Illinois?",
    "output": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê số lượng hóa đơn từ Chicago, IL.",
    "output": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu hóa đơn đã được lập hóa đơn từ Chicago, IL?",
    "output": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê số lượng hóa đơn từ Hoa Kỳ, được nhóm bởi tiểu bang.",
    "output": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu hóa đơn đã được lập hóa đơn từ mỗi tiểu bang?",
    "output": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tiểu bang ở Mỹ với nhiều hóa đơn nhất.",
    "output": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Các tiểu bang có hóa đơn nhất là gì?",
    "output": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Liệt kê số lượng hóa đơn và tổng số hóa đơn từ California.",
    "output": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";"
  },
  {
    "instruction": "",
    "input": "Số lượng hóa đơn và tổng số tiền được lập hóa đơn từ CA là bao nhiêu?",
    "output": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";"
  },
  {
    "instruction": "",
    "input": "List Aerosmith's albums.",
    "output": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Aerosmith\";"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của tất cả các album Aerosmith là gì?",
    "output": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Aerosmith\";"
  },
  {
    "instruction": "",
    "input": "Billy Cobham có bao nhiêu album?",
    "output": "SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Billy Cobham\";"
  },
  {
    "instruction": "",
    "input": "Billy Cobam đã phát hành bao nhiêu album?",
    "output": "SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Billy Cobham\";"
  },
  {
    "instruction": "",
    "input": "Eduardo Martins is a customer at which company?",
    "output": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";"
  },
  {
    "instruction": "",
    "input": "Công ty mà Eduardo Martins là khách hàng là gì?",
    "output": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";"
  },
  {
    "instruction": "",
    "input": "Email và số điện thoại của Astrid Gruber là gì?",
    "output": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";"
  },
  {
    "instruction": "",
    "input": "Email và số điện thoại của Astrid Gruber là gì?",
    "output": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng sống ở thành phố Prague?",
    "output": "SELECT count(*) FROM customers WHERE city = \"Prague\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng sống ở thành phố Prague?",
    "output": "SELECT count(*) FROM customers WHERE city = \"Prague\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng ở bang CA?",
    "output": "SELECT count(*) FROM customers WHERE state = \"CA\";"
  },
  {
    "instruction": "",
    "input": "How many customers are from California?",
    "output": "SELECT count(*) FROM customers WHERE state = \"CA\";"
  },
  {
    "instruction": "",
    "input": "Roberto Almeida sống ở nước nào?",
    "output": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";"
  },
  {
    "instruction": "",
    "input": "Roberto Almeida ở quốc gia nào?",
    "output": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các album được phát hành bởi Aritist có tên 'LED'",
    "output": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'"
  },
  {
    "instruction": "",
    "input": "Tiêu đề của album được phát hành bởi nghệ sĩ có tên có cụm từ 'LED' là gì?",
    "output": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'"
  },
  {
    "instruction": "",
    "input": "Steve Johnson hỗ trợ có bao nhiêu khách hàng?",
    "output": "SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = \"Steve\" AND T1.last_name = \"Johnson\";"
  },
  {
    "instruction": "",
    "input": "Số lượng khách hàng mà Steve Johnson hỗ trợ là gì?",
    "output": "SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = \"Steve\" AND T1.last_name = \"Johnson\";"
  },
  {
    "instruction": "",
    "input": "Tiêu đề, điện thoại và ngày thuê của Nancy Edwards là gì?",
    "output": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"
  },
  {
    "instruction": "",
    "input": "Tiêu đề, số điện thoại và ngày thuê cho nhân viên tên là Nancy Edwards là gì?",
    "output": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"
  },
  {
    "instruction": "",
    "input": "find the full name of employees who report to Nancy Edwards?",
    "output": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của nhân viên báo cáo với Nancy Edwards là gì?",
    "output": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";"
  },
  {
    "instruction": "",
    "input": "Địa chỉ của nhân viên Nancy Edwards là gì?",
    "output": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"
  },
  {
    "instruction": "",
    "input": "Địa chỉ của Nancy Edwards là gì?",
    "output": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầy đủ của nhân viên đã hỗ trợ nhiều khách hàng nhất.",
    "output": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của nhân viên có nhiều khách hàng nhất là gì?",
    "output": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhân viên đang sống ở Canada?",
    "output": "SELECT count(*) FROM employees WHERE country = \"Canada\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhân viên sống ở Canada?",
    "output": "SELECT count(*) FROM employees WHERE country = \"Canada\";"
  },
  {
    "instruction": "",
    "input": "Số điện thoại của nhân viên Nancy Edwards là gì?",
    "output": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"
  },
  {
    "instruction": "",
    "input": "What is the the phone number of Nancy Edwards?",
    "output": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"
  },
  {
    "instruction": "",
    "input": "Ai là nhân viên trẻ nhất trong công ty?Liệt kê họ và họ của nhân viên.",
    "output": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "What si the youngest employee's first and last name?",
    "output": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Liệt kê Top 10 nhân viên làm việc lâu nhất trong công ty.Liệt kê họ và họ của nhân viên.",
    "output": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;"
  },
  {
    "instruction": "",
    "input": "What are the first and last names of the top 10 longest-serving employees?",
    "output": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng nhân viên có chức danh nhân viên từ mỗi thành phố?",
    "output": "SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhân viên CNTT nhân viên đến từ mỗi thành phố?",
    "output": "SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city"
  },
  {
    "instruction": "",
    "input": "Nhân viên nào quản lý số lượng người nhất?Liệt kê họ và họ của nhân viên, và số người báo cáo cho nhân viên đó.",
    "output": "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tất cả các nhân viên và có bao nhiêu người báo cáo cho họ là gì?",
    "output": "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Lucas Mancini có bao nhiêu đơn đặt hàng?",
    "output": "SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"
  },
  {
    "instruction": "",
    "input": "Luca Mancini có bao nhiêu đơn đặt hàng trong hóa đơn của mình?",
    "output": "SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền chi cho Lucas Mancini chi tiêu là bao nhiêu?",
    "output": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"
  },
  {
    "instruction": "",
    "input": "Lucas Mancini đã chi bao nhiêu tiền?",
    "output": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các loại phương tiện truyền thông.",
    "output": "SELECT name FROM media_types;"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các loại phương tiện truyền thông là gì?",
    "output": "SELECT name FROM media_types;"
  },
  {
    "instruction": "",
    "input": "List all different genre types.",
    "output": "SELECT DISTINCT name FROM genres;"
  },
  {
    "instruction": "",
    "input": "Các tên khác nhau của các thể loại là gì?",
    "output": "SELECT DISTINCT name FROM genres;"
  },
  {
    "instruction": "",
    "input": "List the name of all playlist.",
    "output": "SELECT name FROM playlists;"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các danh sách phát là gì?",
    "output": "SELECT name FROM playlists;"
  },
  {
    "instruction": "",
    "input": "Ai là nhà soạn nhạc của track nhanh như một con cá mập?",
    "output": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";"
  },
  {
    "instruction": "",
    "input": "Nhà soạn nhạc đã tạo ra bản nhạc \"Fast as a Shark\" là gì?",
    "output": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";"
  },
  {
    "instruction": "",
    "input": "Theo dõi nhanh như một con cá mập có bao lâu?",
    "output": "SELECT milliseconds FROM tracks WHERE name = \"Fast As a Shark\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mili giây nhanh như một con cá mập?",
    "output": "SELECT milliseconds FROM tracks WHERE name = \"Fast As a Shark\";"
  },
  {
    "instruction": "",
    "input": "Tên của các bản nhạc có thể loại là Rock là gì?",
    "output": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\";"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bản nhạc trong thể loại nhạc rock là gì?",
    "output": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\";"
  },
  {
    "instruction": "",
    "input": "Tiêu đề của album nào theo dõi những quả bóng vào tường là gì?",
    "output": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";"
  },
  {
    "instruction": "",
    "input": "Tên của album có bóng trên tường là gì?",
    "output": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";"
  },
  {
    "instruction": "",
    "input": "Danh sách tên của tất cả các bản nhạc trong các quả bóng vào tường.",
    "output": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bản nhạc trong album có tên Balls to the Wall là gì?",
    "output": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";"
  },
  {
    "instruction": "",
    "input": "Danh sách tiêu đề của album có số lượng bản nhạc lớn hơn 10.",
    "output": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;"
  },
  {
    "instruction": "",
    "input": "Tên của các album có hơn 10 bài hát là gì?",
    "output": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các bản nhạc thuộc về thể loại Rock và loại phương tiện truyền thông là tệp âm thanh MPEG.",
    "output": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" AND T3.name = \"MPEG audio file\";"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bản nhạc rock được lưu trữ trên các tệp âm thanh MPEG là gì?",
    "output": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" AND T3.name = \"MPEG audio file\";"
  },
  {
    "instruction": "",
    "input": "List the name of tracks belongs to genre Rock or media type is MPEG audio file.",
    "output": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" OR T3.name = \"MPEG audio file\";"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bản nhạc thuộc về thể loại rock và loại phương tiện truyền thông của họ là mpeg là gì?",
    "output": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" OR T3.name = \"MPEG audio file\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các bài hát thuộc về thể loại nhạc rock hoặc jazz thể loại.",
    "output": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\" OR T1.name = \"Jazz\""
  },
  {
    "instruction": "",
    "input": "Tên của các bài hát là những bài hát rock hoặc jazz là gì?",
    "output": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\" OR T1.name = \"Jazz\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các bản nhạc trong danh sách phát của phim.",
    "output": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bản nhạc trên danh sách phát có tiêu đề Phim là gì?",
    "output": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của danh sách phát có số lượng bản nhạc lớn hơn 100.",
    "output": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100;"
  },
  {
    "instruction": "",
    "input": "What are the names of all playlists that have more than 100 tracks?",
    "output": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các bản nhạc được mua bởi khách hàng daan peeters.",
    "output": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";"
  },
  {
    "instruction": "",
    "input": "Các bài hát mà Dean Peeters đã mua là gì?",
    "output": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";"
  },
  {
    "instruction": "",
    "input": "Bao nhiêu là bản nhạc nhanh như một con cá mập?",
    "output": "SELECT unit_price FROM tracks WHERE name = \"Fast As a Shark\";"
  },
  {
    "instruction": "",
    "input": "Đơn giá của giai điệu \"nhanh như một con cá mập\" là bao nhiêu?",
    "output": "SELECT unit_price FROM tracks WHERE name = \"Fast As a Shark\";"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các bản nhạc trong danh sách phát phim nhưng không phải trong danh sách phát nhạc.",
    "output": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bản nhạc trên danh sách phát phim nhưng không có trong danh sách phát nhạc là gì?",
    "output": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các bản nhạc trong cả phim và danh sách phát nhạc.",
    "output": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bản nhạc trong cả bộ phim và danh sách phát nhạc là gì?",
    "output": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng bài hát trong mỗi thể loại?",
    "output": "SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài hát trong mỗi thể loại?",
    "output": "SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu biên tập viên?",
    "output": "SELECT count(*) FROM editor"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các biên tập viên theo thứ tự tăng dần của tuổi.",
    "output": "SELECT Name FROM editor ORDER BY Age ASC"
  },
  {
    "instruction": "",
    "input": "Tên và tuổi của các biên tập viên là gì?",
    "output": "SELECT Name ,  Age FROM editor"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các biên tập viên già hơn 25.",
    "output": "SELECT Name FROM editor WHERE Age  >  25"
  },
  {
    "instruction": "",
    "input": "Show the names of editors of age either 24 or 25.",
    "output": "SELECT Name FROM editor WHERE Age  =  24 OR Age  =  25"
  },
  {
    "instruction": "",
    "input": "Tên của biên tập viên trẻ nhất là gì?",
    "output": "SELECT Name FROM editor ORDER BY Age ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các độ tuổi khác nhau của các biên tập viên là gì?Hiển thị mỗi độ tuổi cùng với số lượng biên tập viên ở độ tuổi đó.",
    "output": "SELECT Age ,  COUNT(*) FROM editor GROUP BY Age"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị thời đại phổ biến nhất của các biên tập viên.",
    "output": "SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các chủ đề riêng biệt của các tạp chí.",
    "output": "SELECT DISTINCT Theme FROM journal"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các biên tập viên và chủ đề của các tạp chí mà họ phục vụ trong các ủy ban.",
    "output": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi Tạp chí_Committee, hãy tìm tên biên tập viên và chủ đề tạp chí.",
    "output": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và độ tuổi của các biên tập viên và chủ đề của các tạp chí mà họ phục vụ trong các ủy ban, theo thứ tự theo thứ tự bảng chữ cái của chủ đề.",
    "output": "SELECT T2.Name ,  T2.age ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID ORDER BY T3.Theme ASC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các biên tập viên trong ủy ban của các tạp chí có doanh số lớn hơn 3000.",
    "output": "SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID WHERE T3.Sales  >  3000"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID, tên của từng biên tập viên và số lượng ủy ban tạp chí họ đang sử dụng.",
    "output": "SELECT T1.editor_id ,  T1.Name ,  COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.editor_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các biên tập viên trong ít nhất hai ủy ban tạp chí.",
    "output": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các biên tập viên không có trong bất kỳ ủy ban nhật ký nào.",
    "output": "SELECT Name FROM editor WHERE editor_id NOT IN (SELECT editor_id FROM journal_committee)"
  },
  {
    "instruction": "",
    "input": "Liệt kê ngày, chủ đề và doanh số của tạp chí không có bất kỳ biên tập viên được liệt kê nào phục vụ trong ủy ban.",
    "output": "SELECT date ,  theme ,  sales FROM journal EXCEPT SELECT T1.date ,  T1.theme ,  T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID"
  },
  {
    "instruction": "",
    "input": "Doanh số trung bình của các tạp chí có biên tập viên có loại công việc là 'Photo' là gì?",
    "output": "SELECT avg(T1.sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID WHERE T2.work_type  =  'Photo'"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu tài khoản?",
    "output": "SELECT count(*) FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng tài khoản.",
    "output": "SELECT count(*) FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID, ID khách hàng, tên cho tất cả các tài khoản.",
    "output": "SELECT account_id ,  customer_id ,  account_name FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Tài khoản là gì, ID khách hàng và tên tài khoản cho tất cả các tài khoản?",
    "output": "SELECT account_id ,  customer_id ,  account_name FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Hiển thị chi tiết tài khoản khác cho tài khoản có tên 338.",
    "output": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\""
  },
  {
    "instruction": "",
    "input": "Các chi tiết tài khoản khác cho tài khoản có tên 338 là gì?",
    "output": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\""
  },
  {
    "instruction": "",
    "input": "Tên, họ và điện thoại của khách hàng có tên tài khoản 162 là gì?",
    "output": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\""
  },
  {
    "instruction": "",
    "input": "Đặt tên đầy đủ và điện thoại của khách hàng có tên tài khoản 162.",
    "output": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\""
  },
  {
    "instruction": "",
    "input": "Khách hàng có tên nghệ thuật tên và họ Turcotte có bao nhiêu tài khoản?",
    "output": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\""
  },
  {
    "instruction": "",
    "input": "Trả về số lượng tài khoản mà khách hàng có tên đầu tiên và tên cuối cùng Turcotte có.",
    "output": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả ID khách hàng và số lượng tài khoản cho mỗi khách hàng.",
    "output": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài khoản cho mỗi ID khách hàng?",
    "output": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID khách hàng và số lượng tài khoản với hầu hết các tài khoản.",
    "output": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID khách hàng của khách hàng có nhiều tài khoản nhất là gì và người này có bao nhiêu tài khoản?",
    "output": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Khách hàng đầu tiên là gì, họ và ID với số lượng tài khoản ít nhất là gì.",
    "output": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đặt tên đầy đủ và ID khách hàng của khách hàng với ít tài khoản nhất.",
    "output": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng khách hàng mà không có tài khoản.",
    "output": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng không có tài khoản?",
    "output": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và họ của khách hàng mà không có bất kỳ tài khoản nào.",
    "output": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của khách hàng không có tài khoản nào là gì?",
    "output": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên đầu tiên và tên cuối cùng cho tất cả khách hàng có tài khoản.",
    "output": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của khách hàng có tài khoản là gì?",
    "output": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng có một tài khoản?",
    "output": "SELECT count(DISTINCT customer_id) FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng khách hàng giữ một tài khoản.",
    "output": "SELECT count(DISTINCT customer_id) FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Chúng tôi có bao nhiêu khách hàng?",
    "output": "SELECT count(*) FROM Customers"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng khách hàng.",
    "output": "SELECT count(*) FROM Customers"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID, tên, họ và điện thoại cho tất cả khách hàng.",
    "output": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers"
  },
  {
    "instruction": "",
    "input": "ID, tên đầy đủ và điện thoại của mỗi khách hàng là gì?",
    "output": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers"
  },
  {
    "instruction": "",
    "input": "Điện thoại và email cho khách hàng có tên Aniyah và họ Feest là gì?",
    "output": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\""
  },
  {
    "instruction": "",
    "input": "Trả lại điện thoại và email của khách hàng với tên đầu tiên Aniyah và họ Feest.",
    "output": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\""
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng thẻ khách hàng.",
    "output": "SELECT count(*) FROM Customers_cards"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thẻ khách hàng?",
    "output": "SELECT count(*) FROM Customers_cards"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID, ID khách hàng, mã loại thẻ, số thẻ cho tất cả các thẻ.",
    "output": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards"
  },
  {
    "instruction": "",
    "input": "ID thẻ, ID khách hàng, loại thẻ và số thẻ cho mỗi thẻ khách hàng là gì?",
    "output": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards"
  },
  {
    "instruction": "",
    "input": "Hiển thị ngày hợp lệ từ và ngày hợp lệ cho thẻ có số thẻ '4560596484842'.",
    "output": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\""
  },
  {
    "instruction": "",
    "input": "Ngày hợp lệ và hợp lệ đến ngày cho thẻ có số 4560596484842 là gì?",
    "output": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\""
  },
  {
    "instruction": "",
    "input": "Tên, họ và điện thoại của khách hàng có thẻ 4560596484842 là gì.",
    "output": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\""
  },
  {
    "instruction": "",
    "input": "Trả lại tên đầy đủ và điện thoại của khách hàng có thẻ số 4560596484842.",
    "output": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thẻ nghệ thuật khách hàng có?",
    "output": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng thẻ mà khách hàng có tên nghệ thuật và tên cuối cùng Turcotte có.",
    "output": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\""
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu thẻ ghi nợ?",
    "output": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng thẻ khách hàng thuộc loại ghi nợ.",
    "output": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\""
  },
  {
    "instruction": "",
    "input": "Khách hàng Blanche Huels có bao nhiêu thẻ tín dụng?",
    "output": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Blanche\" AND T2.customer_last_name  =  \"Huels\" AND T1.card_type_code  =  \"Credit\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng thẻ tín dụng mà khách hàng có tên đầu tiên Blanche và họ Huels có.",
    "output": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Blanche\" AND T2.customer_last_name  =  \"Huels\" AND T1.card_type_code  =  \"Credit\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả ID khách hàng và số lượng thẻ thuộc sở hữu của mỗi khách hàng.",
    "output": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id"
  },
  {
    "instruction": "",
    "input": "Các ID khách hàng khác nhau là gì và mỗi người giữ bao nhiêu thẻ?",
    "output": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id"
  },
  {
    "instruction": "",
    "input": "ID khách hàng có số lượng thẻ nhất là gì và anh ta có bao nhiêu thẻ?",
    "output": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại ID của khách hàng có nhiều thẻ nhất, cũng như số lượng thẻ.",
    "output": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID, tên đầu tiên và tên cuối cùng cho tất cả khách hàng có ít nhất hai thẻ.",
    "output": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "ID và tên đầy đủ của khách hàng chứa hai hoặc nhiều thẻ là gì?",
    "output": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "ID khách hàng là gì, họ và họ với số lượng tài khoản ít nhất là gì.",
    "output": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về ID và tên đầy đủ của khách hàng có ít tài khoản nhất.",
    "output": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các mã loại thẻ và số lượng thẻ trong mỗi loại.",
    "output": "SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code"
  },
  {
    "instruction": "",
    "input": "Các loại thẻ khác nhau là gì và có bao nhiêu thẻ?",
    "output": "SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code"
  },
  {
    "instruction": "",
    "input": "Mã loại thẻ với số lượng thẻ nhất là gì?",
    "output": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về mã của loại thẻ là phổ biến nhất.",
    "output": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã loại thẻ với ít nhất 5 thẻ.",
    "output": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5"
  },
  {
    "instruction": "",
    "input": "Các mã của các loại thẻ có 5 thẻ trở lên là gì?",
    "output": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các mã loại thẻ và số lượng khách hàng giữ thẻ trong mỗi loại.",
    "output": "SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code"
  },
  {
    "instruction": "",
    "input": "Các mã loại thẻ khác nhau là gì và có bao nhiêu khách hàng khác nhau giữ mỗi loại?",
    "output": "SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID khách hàng và FirstName mà không cần thẻ tín dụng.",
    "output": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"Credit\""
  },
  {
    "instruction": "",
    "input": "ID và tên đầu tiên của khách hàng không giữ thẻ tín dụng là gì?",
    "output": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"Credit\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các mã loại thẻ.",
    "output": "SELECT DISTINCT card_type_code FROM Customers_Cards"
  },
  {
    "instruction": "",
    "input": "Các mã loại thẻ khác nhau là gì?",
    "output": "SELECT DISTINCT card_type_code FROM Customers_Cards"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng các loại thẻ.",
    "output": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại thẻ khác nhau?",
    "output": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các loại giao dịch.",
    "output": "SELECT DISTINCT transaction_type FROM Financial_Transactions"
  },
  {
    "instruction": "",
    "input": "Các loại giao dịch khác nhau là gì?",
    "output": "SELECT DISTINCT transaction_type FROM Financial_Transactions"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng loại giao dịch.",
    "output": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại giao dịch khác nhau?",
    "output": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions"
  },
  {
    "instruction": "",
    "input": "Trung bình và tổng số tiền giao dịch là bao nhiêu?",
    "output": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions"
  },
  {
    "instruction": "",
    "input": "Trả lại số tiền giao dịch trung bình, cũng như tổng số tiền của tất cả các giao dịch.",
    "output": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã loại thẻ và số lượng giao dịch.",
    "output": "SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code"
  },
  {
    "instruction": "",
    "input": "Các loại thẻ khác nhau là gì và có bao nhiêu giao dịch được thực hiện với mỗi loại?",
    "output": "SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code"
  },
  {
    "instruction": "",
    "input": "Hiển thị loại giao dịch và số lượng giao dịch.",
    "output": "SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type"
  },
  {
    "instruction": "",
    "input": "Các loại giao dịch khác nhau là gì và có bao nhiêu giao dịch của mỗi giao dịch đã diễn ra?",
    "output": "SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type"
  },
  {
    "instruction": "",
    "input": "Loại giao dịch đã xử lý tổng số tiền lớn nhất trong các giao dịch là gì?",
    "output": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại loại giao dịch với tổng số tiền cao nhất.",
    "output": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID tài khoản và số lượng giao dịch cho mỗi tài khoản",
    "output": "SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id"
  },
  {
    "instruction": "",
    "input": "Các ID tài khoản khác nhau đã thực hiện các giao dịch tài chính, cũng như bao nhiêu giao dịch tương ứng với mỗi giao dịch?",
    "output": "SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu bài hát?",
    "output": "SELECT count(*) FROM track"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng bài hát.",
    "output": "SELECT count(*) FROM track"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và vị trí cho tất cả các bản nhạc.",
    "output": "SELECT name ,  LOCATION FROM track"
  },
  {
    "instruction": "",
    "input": "Tên và vị trí của tất cả các bản nhạc là gì?",
    "output": "SELECT name ,  LOCATION FROM track"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và chỗ ngồi, được đặt hàng bằng chỗ ngồi cho tất cả các bản nhạc được mở sau năm 2000.",
    "output": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating"
  },
  {
    "instruction": "",
    "input": "Tên và chỗ ngồi cho tất cả các bản nhạc được mở sau năm 2000, được đặt hàng bằng chỗ ngồi là gì?",
    "output": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating"
  },
  {
    "instruction": "",
    "input": "Tên, vị trí và chỗ ngồi cho bản nhạc được mở gần đây nhất là gì?",
    "output": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên, vị trí và chỗ ngồi của đường đua đã được mở trong năm gần đây nhất.",
    "output": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Chỗ ngồi tối thiểu, tối đa và trung bình cho tất cả các bản nhạc là gì.",
    "output": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track"
  },
  {
    "instruction": "",
    "input": "Trả lại chỗ ngồi tối thiểu, tối đa và trung bình trên tất cả các bản nhạc.",
    "output": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, vị trí, năm mở cho tất cả các bản nhạc với chỗ ngồi cao hơn mức trung bình.",
    "output": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)"
  },
  {
    "instruction": "",
    "input": "Tên, địa điểm và năm mở cho các bài hát có chỗ ngồi cao hơn mức trung bình là gì?",
    "output": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)"
  },
  {
    "instruction": "",
    "input": "Vị trí riêng biệt nơi các bản nhạc được đặt là gì?",
    "output": "SELECT DISTINCT LOCATION FROM track"
  },
  {
    "instruction": "",
    "input": "Cung cấp các vị trí khác nhau của các bài hát.",
    "output": "SELECT DISTINCT LOCATION FROM track"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cuộc đua?",
    "output": "SELECT count(*) FROM race"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng chủng tộc.",
    "output": "SELECT count(*) FROM race"
  },
  {
    "instruction": "",
    "input": "Các lớp khác nhau mà các chủng tộc có thể có là gì?",
    "output": "SELECT DISTINCT CLASS FROM race"
  },
  {
    "instruction": "",
    "input": "Trả lại các lớp khác nhau của các chủng tộc.",
    "output": "SELECT DISTINCT CLASS FROM race"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, lớp học và ngày cho tất cả các cuộc đua.",
    "output": "SELECT name ,  CLASS ,  date FROM race"
  },
  {
    "instruction": "",
    "input": "Tên, lớp học và ngày cho tất cả các chủng tộc là gì?",
    "output": "SELECT name ,  CLASS ,  date FROM race"
  },
  {
    "instruction": "",
    "input": "Hiển thị lớp chủng tộc và số lượng cuộc đua trong mỗi lớp.",
    "output": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS"
  },
  {
    "instruction": "",
    "input": "Các lớp chủng tộc khác nhau là gì và có bao nhiêu chủng tộc tương ứng với mỗi chủng tộc?",
    "output": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS"
  },
  {
    "instruction": "",
    "input": "Lớp chủng tộc là gì với hầu hết các cuộc đua.",
    "output": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đưa ra các lớp các chủng tộc là phổ biến nhất.",
    "output": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê lớp chủng tộc với ít nhất hai cuộc đua.",
    "output": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Các lớp chủng tộc có hai hoặc nhiều chủng tộc tương ứng là gì?",
    "output": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tên cho các bản nhạc không có chủng tộc trong lớp 'GT' là gì.",
    "output": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'"
  },
  {
    "instruction": "",
    "input": "Đặt tên của các bản nhạc không có cuộc đua trong lớp 'GT'.",
    "output": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên theo dõi đã không có cuộc đua.",
    "output": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các bản nhạc không có cuộc đua nào.",
    "output": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)"
  },
  {
    "instruction": "",
    "input": "Hiển thị năm nơi một bản nhạc có chỗ ngồi ít nhất 5000 mở ra và một bản nhạc có chỗ ngồi không quá 4000 mở.",
    "output": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000"
  },
  {
    "instruction": "",
    "input": "Những năm mở cửa cho các bài hát với chỗ ngồi từ 4000 đến 5000 là gì?",
    "output": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của đường đua và số lượng cuộc đua trong mỗi bản nhạc.",
    "output": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id"
  },
  {
    "instruction": "",
    "input": "Tên của các bản nhạc khác nhau là gì và mỗi bản đua có bao nhiêu cuộc đua?",
    "output": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của ca khúc với số lượng cuộc đua nhất.",
    "output": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của ca khúc đã có số lượng cuộc đua lớn nhất là gì?",
    "output": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và ngày cho mỗi cuộc đua và tên theo dõi của nó.",
    "output": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id"
  },
  {
    "instruction": "",
    "input": "Tên và ngày của các chủng tộc là gì, và tên của các bản nhạc nơi chúng được tổ chức là gì?",
    "output": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và vị trí của đường đua với 1 cuộc đua.",
    "output": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Tên và địa điểm của các bản nhạc đã có chính xác 1 cuộc đua là gì?",
    "output": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Tìm các vị trí có cả hai bản nhạc với hơn 90000 chỗ ngồi và đường ray với dưới 70000 chỗ ngồi.",
    "output": "SELECT LOCATION FROM track WHERE seating  >  90000 INTERSECT SELECT LOCATION FROM track WHERE seating  <  70000"
  },
  {
    "instruction": "",
    "input": "Các vị trí có cả hai bản nhạc với hơn 90000 chỗ ngồi và các bản nhạc có ít hơn 70000 chỗ ngồi là gì?",
    "output": "SELECT LOCATION FROM track WHERE seating  >  90000 INTERSECT SELECT LOCATION FROM track WHERE seating  <  70000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành viên có thẻ thành viên Đen?",
    "output": "SELECT count(*) FROM member WHERE Membership_card  =  'Black'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng thành viên sống trong mỗi địa chỉ.",
    "output": "SELECT count(*) ,  address FROM member GROUP BY address"
  },
  {
    "instruction": "",
    "input": "Cho tôi tên của các thành viên có địa chỉ ở Harford hoặc Waterbury.",
    "output": "SELECT name FROM member WHERE address  =  'Harford' OR address  =  'Waterbury'"
  },
  {
    "instruction": "",
    "input": "Tìm ID và tên của các thành viên dưới 30 tuổi hoặc bằng thẻ thành viên da đen.",
    "output": "SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  <  30"
  },
  {
    "instruction": "",
    "input": "Tìm thời gian mua, tuổi và địa chỉ của từng thành viên và hiển thị kết quả theo thứ tự thời gian mua.",
    "output": "SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase"
  },
  {
    "instruction": "",
    "input": "Thẻ thành viên nào có nhiều hơn 5 thành viên?",
    "output": "SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5"
  },
  {
    "instruction": "",
    "input": "Địa chỉ nào có cả hai thành viên dưới 30 tuổi và thành viên trên 40 tuổi?",
    "output": "SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40"
  },
  {
    "instruction": "",
    "input": "Thẻ thành viên được cả hai thành viên sống ở Hartford và những người sống ở Waterbury địa chỉ là gì?",
    "output": "SELECT membership_card FROM member WHERE address  =  'Hartford' INTERSECT SELECT membership_card FROM member WHERE address  =  'Waterbury'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành viên không sống ở Hartford?",
    "output": "SELECT count(*) FROM member WHERE address != 'Hartford'"
  },
  {
    "instruction": "",
    "input": "Địa chỉ nào không có bất kỳ thành viên nào có thẻ thành viên Đen?",
    "output": "SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card  =  'Black'"
  },
  {
    "instruction": "",
    "input": "Hiển thị các địa chỉ cửa hàng được đặt hàng bởi năm khai mạc của họ.",
    "output": "SELECT address FROM shop ORDER BY open_year"
  },
  {
    "instruction": "",
    "input": "Điểm trung bình và số nhân viên trung bình của tất cả các cửa hàng là gì?",
    "output": "SELECT avg(num_of_staff) ,  avg(score) FROM shop"
  },
  {
    "instruction": "",
    "input": "Tìm ID và địa chỉ của các cửa hàng có điểm dưới điểm trung bình.",
    "output": "SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)"
  },
  {
    "instruction": "",
    "input": "Tìm địa chỉ và số nhân viên của các cửa hàng không có giờ hạnh phúc.",
    "output": "SELECT address ,  num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)"
  },
  {
    "instruction": "",
    "input": "ID và địa chỉ của các cửa hàng có một giờ hạnh phúc vào tháng Năm là gì?",
    "output": "SELECT t1.address ,  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'"
  },
  {
    "instruction": "",
    "input": "Cửa hàng nào có giờ hạnh phúc thường xuyên nhất?Liệt kê ID và số giờ hạnh phúc của nó.",
    "output": "SELECT shop_id ,  count(*) FROM happy_hour GROUP BY shop_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tháng nào có giờ hạnh phúc nhất?",
    "output": "SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những tháng nào có hơn 2 giờ hạnh phúc?",
    "output": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu album?",
    "output": "SELECT count(*) FROM ALBUM"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng album.",
    "output": "SELECT count(*) FROM ALBUM"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các thể loại âm nhạc.",
    "output": "SELECT Name FROM GENRE"
  },
  {
    "instruction": "",
    "input": "Tên của các thể loại âm nhạc khác nhau là gì?",
    "output": "SELECT Name FROM GENRE"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các thông tin khách hàng ở Bang NY.",
    "output": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\""
  },
  {
    "instruction": "",
    "input": "Tất cả thông tin khách hàng cho khách hàng ở NY State là gì?",
    "output": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\""
  },
  {
    "instruction": "",
    "input": "Tên và tên cuối cùng của các nhân viên sống ở thành phố Calgary là gì.",
    "output": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\""
  },
  {
    "instruction": "",
    "input": "Tìm tên đầy đủ của nhân viên sống ở thành phố Calgary.",
    "output": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\""
  },
  {
    "instruction": "",
    "input": "Các quốc gia thanh toán riêng biệt của hóa đơn là gì?",
    "output": "SELECT distinct(BillingCountry) FROM INVOICE"
  },
  {
    "instruction": "",
    "input": "Tìm các quốc gia thanh toán khác nhau cho tất cả các hóa đơn.",
    "output": "SELECT distinct(BillingCountry) FROM INVOICE"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các nghệ sĩ có \"A\" trong tên của họ.",
    "output": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\""
  },
  {
    "instruction": "",
    "input": "Tên của nghệ sĩ có chữ 'A' trong tên của họ là gì?",
    "output": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\""
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề của tất cả các album của nghệ sĩ \"AC/DC\".",
    "output": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\""
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của album của nghệ sĩ \"AC/DC\" là gì?",
    "output": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\""
  },
  {
    "instruction": "",
    "input": "Nghệ sĩ \"Metallica\" có bao nhiêu album?",
    "output": "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Metallica\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng album của nghệ sĩ \"Metallica\".",
    "output": "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Metallica\""
  },
  {
    "instruction": "",
    "input": "Nghệ sĩ \"Balls to the Wall\" của nghệ sĩ nào?",
    "output": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"Balls to the Wall\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của nghệ sĩ đã tạo ra album \"Balls to the Wall\".",
    "output": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"Balls to the Wall\""
  },
  {
    "instruction": "",
    "input": "Nghệ sĩ nào có nhiều album nhất?",
    "output": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của nghệ sĩ với số lượng album lớn nhất là gì?",
    "output": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các bản nhạc chứa từ \"bạn\".",
    "output": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'"
  },
  {
    "instruction": "",
    "input": "Tên của các bản nhạc chứa từ bạn trong đó là gì?",
    "output": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'"
  },
  {
    "instruction": "",
    "input": "Đơn giá trung bình của tất cả các bài hát là bao nhiêu?",
    "output": "SELECT AVG(UnitPrice) FROM TRACK"
  },
  {
    "instruction": "",
    "input": "Tìm đơn giá trung bình cho một đường đua.",
    "output": "SELECT AVG(UnitPrice) FROM TRACK"
  },
  {
    "instruction": "",
    "input": "Thời lượng của các bản nhạc dài nhất và ngắn nhất tính bằng mili giây là gì?",
    "output": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK"
  },
  {
    "instruction": "",
    "input": "Tìm thời lượng tối đa và tối thiểu của các bản nhạc tính bằng mili giây.",
    "output": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên album, ID và số lượng bài hát cho mỗi album.",
    "output": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID"
  },
  {
    "instruction": "",
    "input": "Tên và ID của các album khác nhau là gì và có bao nhiêu bản nhạc trên mỗi album?",
    "output": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID"
  },
  {
    "instruction": "",
    "input": "Tên của thể loại phổ biến nhất trong tất cả các bài hát là gì?",
    "output": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của thể loại thường xuyên nhất trên tất cả các bản nhạc.",
    "output": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại phương tiện truyền thông ít nhất trong tất cả các bản nhạc là gì?",
    "output": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của loại phương tiện ít phổ biến nhất trên tất cả các bản nhạc là gì?",
    "output": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên album và ID cho các album có chứa các bản nhạc có đơn vị lớn hơn 1.",
    "output": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề và ID cho các album có chứa các bản nhạc có đơn giá lớn hơn 1 là gì?",
    "output": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bản nhạc thuộc về thể loại rock?",
    "output": "SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng bài hát là một phần của thể loại nhạc rock.",
    "output": "SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\""
  },
  {
    "instruction": "",
    "input": "Giá trung bình của các bản nhạc thuộc về thể loại nhạc jazz là bao nhiêu?",
    "output": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Jazz\""
  },
  {
    "instruction": "",
    "input": "Tìm đơn giá trung bình của các bản nhạc jazz.",
    "output": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Jazz\""
  },
  {
    "instruction": "",
    "input": "Tên và họ của khách hàng có email \"luisg@embraer.com.br\" là gì?",
    "output": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\""
  },
  {
    "instruction": "",
    "input": "Tìm tên đầy đủ của khách hàng với email \"luisg@embraer.com.br\".",
    "output": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng có email có chứa \"gmail.com\"?",
    "output": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng khách hàng có email có chứa \"gmail.com\".",
    "output": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và họ nhân viên giúp khách hàng có tên là Leonie là gì?",
    "output": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\""
  },
  {
    "instruction": "",
    "input": "Tìm tên đầy đủ của nhân viên giúp khách hàng có tên đầu tiên Leonie.",
    "output": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\""
  },
  {
    "instruction": "",
    "input": "Nhân viên nào giúp nhân viên giúp khách hàng có mã bưu điện 70174 sống ở thành phố?",
    "output": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  \"70174\""
  },
  {
    "instruction": "",
    "input": "Tìm các thành phố tương ứng với các nhân viên giúp khách hàng với Bộ luật Bưu chính 70174.",
    "output": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  \"70174\""
  },
  {
    "instruction": "",
    "input": "Nhân viên sống có bao nhiêu thành phố khác nhau?",
    "output": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các thành phố khác nhau mà nhân viên sống.",
    "output": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các ngày hóa đơn tương ứng với khách hàng có tên đầu tiên Astrid và tên cuối cùng Gruber.",
    "output": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  \"Astrid\" AND LastName  =  \"Gruber\""
  },
  {
    "instruction": "",
    "input": "Ngày hóa đơn cho khách hàng có tên đầu tiên Astrid và họ Gruber là gì?",
    "output": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  \"Astrid\" AND LastName  =  \"Gruber\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các tên khách hàng không có tổng số hóa đơn lớn hơn 20.",
    "output": "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của khách hàng mà không có tổng số hóa đơn vượt quá 20 là gì?",
    "output": "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của tất cả các khách hàng sống ở Brazil và có hóa đơn.",
    "output": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazil\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên khác nhau cho khách hàng từ Brazil cũng có hóa đơn là gì?",
    "output": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazil\""
  },
  {
    "instruction": "",
    "input": "Tìm địa chỉ của tất cả các khách hàng sống ở Đức và có hóa đơn.",
    "output": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\""
  },
  {
    "instruction": "",
    "input": "Địa chỉ của khách hàng sống ở Đức đã có hóa đơn là gì?",
    "output": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\""
  },
  {
    "instruction": "",
    "input": "Liệt kê số điện thoại của tất cả nhân viên.",
    "output": "SELECT Phone FROM EMPLOYEE"
  },
  {
    "instruction": "",
    "input": "Các số điện thoại cho mỗi nhân viên là gì?",
    "output": "SELECT Phone FROM EMPLOYEE"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bản nhạc trong loại phương tiện tệp âm thanh AAC?",
    "output": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC audio file\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các bản nhạc thuộc loại phương tiện \"Tệp âm thanh AAC\".",
    "output": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC audio file\""
  },
  {
    "instruction": "",
    "input": "Thời lượng trung bình tính bằng mili giây của các bản nhạc thuộc thể loại Latin hoặc Pop là bao nhiêu?",
    "output": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Latin\" OR T1.Name  =  \"Pop\""
  },
  {
    "instruction": "",
    "input": "Tìm chiều dài trung bình của các bản nhạc Latin và Pop.",
    "output": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Latin\" OR T1.Name  =  \"Pop\""
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị tên và ID nhân viên của nhân viên phục vụ ít nhất 10 khách hàng.",
    "output": "SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và ID đại diện hỗ trợ cho nhân viên phục vụ 10 khách hàng trở lên là gì?",
    "output": "SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị tên cuối cùng của nhân viên phục vụ không quá 20 khách hàng.",
    "output": "SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của nhân viên phục vụ tối đa 20 khách hàng là gì?",
    "output": "SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20"
  },
  {
    "instruction": "",
    "input": "Vui lòng liệt kê tất cả các tiêu đề album theo thứ tự bảng chữ cái.",
    "output": "SELECT Title FROM ALBUM ORDER BY Title"
  },
  {
    "instruction": "",
    "input": "Tất cả các tiêu đề album, theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT Title FROM ALBUM ORDER BY Title"
  },
  {
    "instruction": "",
    "input": "Vui lòng liệt kê tên và ID của tất cả các nghệ sĩ có ít nhất 3 album theo thứ tự bảng chữ cái.",
    "output": "SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name"
  },
  {
    "instruction": "",
    "input": "Tên và ID của các nghệ sĩ với 3 album trở lên, được liệt kê theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các nghệ sĩ không có bất kỳ album nào.",
    "output": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId"
  },
  {
    "instruction": "",
    "input": "Tên của các nghệ sĩ chưa phát hành bất kỳ album nào?",
    "output": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId"
  },
  {
    "instruction": "",
    "input": "Giá trung bình của các bản nhạc rock là bao nhiêu?",
    "output": "SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\""
  },
  {
    "instruction": "",
    "input": "Tìm đơn giá trung bình của các bản nhạc từ thể loại rock.",
    "output": "SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\""
  },
  {
    "instruction": "",
    "input": "Thời lượng của các bản nhạc pop dài nhất và ngắn nhất tính bằng mili giây là gì?",
    "output": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Pop\""
  },
  {
    "instruction": "",
    "input": "Tìm các bản nhạc pop tối đa và tối thiểu của các bản nhạc pop.",
    "output": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Pop\""
  },
  {
    "instruction": "",
    "input": "Ngày sinh của nhân viên sống ở Edmonton là gì?",
    "output": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\""
  },
  {
    "instruction": "",
    "input": "Tìm ngày sinh tương ứng với những nhân viên sống ở thành phố Edmonton.",
    "output": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\""
  },
  {
    "instruction": "",
    "input": "Giá đơn vị riêng biệt của tất cả các bài hát là gì?",
    "output": "SELECT distinct(UnitPrice) FROM TRACK"
  },
  {
    "instruction": "",
    "input": "Tìm giá đơn giản cho các bài hát.",
    "output": "SELECT distinct(UnitPrice) FROM TRACK"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nghệ sĩ không có album nào?",
    "output": "SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM)"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng nghệ sĩ chưa phát hành album.",
    "output": "SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM)"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề album cho các album có chứa cả hai bản nhạc 'reggae' và 'rock' là gì?",
    "output": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'"
  },
  {
    "instruction": "",
    "input": "Tìm các tiêu đề của các album có chứa các bản nhạc của cả các thể loại reggae và rock.",
    "output": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các số điện thoại.",
    "output": "SELECT customer_phone FROM available_policies"
  },
  {
    "instruction": "",
    "input": "Tất cả các số điện thoại là gì?",
    "output": "SELECT customer_phone FROM available_policies"
  },
  {
    "instruction": "",
    "input": "Các số điện thoại của khách hàng theo chính sách \"bảo hiểm nhân thọ\" là gì?",
    "output": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\""
  },
  {
    "instruction": "",
    "input": "Số điện thoại của khách hàng sử dụng chính sách với mã \"Bảo hiểm nhân thọ\" là gì?",
    "output": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\""
  },
  {
    "instruction": "",
    "input": "Loại chính sách nào có nhiều hồ sơ nhất trong cơ sở dữ liệu?",
    "output": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại chính sách nào xuất hiện thường xuyên nhất trong các chính sách có sẵn?",
    "output": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tất cả các số điện thoại của khách hàng dưới loại chính sách phổ biến nhất là gì?",
    "output": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tìm số điện thoại của khách hàng sử dụng loại chính sách phổ biến nhất trong số các chính sách có sẵn.",
    "output": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tìm loại chính sách được sử dụng bởi hơn 4 khách hàng.",
    "output": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4"
  },
  {
    "instruction": "",
    "input": "Tìm các loại chính sách nhiều hơn 4 khách hàng sử dụng.Hiển thị mã loại của họ.",
    "output": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số và trung bình của các khu định cư.",
    "output": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements"
  },
  {
    "instruction": "",
    "input": "Trả lại tổng và trung bình của tất cả số tiền giải quyết.",
    "output": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các dịch vụ đã được sử dụng trong hơn 2 lần trong thông báo mất mát đầu tiên.",
    "output": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Những dịch vụ nào đã được sử dụng nhiều hơn hai lần trong thông báo mất mát đầu tiên?Trả lại tên dịch vụ.",
    "output": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Ngày có hiệu lực của yêu cầu có số lượng giải quyết lớn nhất là bao nhiêu?",
    "output": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm yêu cầu có tổng số tiền giải quyết lớn nhất.Trả lại ngày có hiệu lực của yêu cầu.",
    "output": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu chính sách được liệt kê cho khách hàng có tên là \"Dayana Robel\"?",
    "output": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Dayana Robel\""
  },
  {
    "instruction": "",
    "input": "Đếm tổng số chính sách được sử dụng bởi khách hàng có tên là \"Dayana Robel\".",
    "output": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Dayana Robel\""
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng có nhiều chính sách nhất được liệt kê là gì?",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Khách hàng nào sử dụng nhiều chính sách nhất?Cho tôi tên khách hàng.",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tất cả các loại chính sách của khách hàng có tên là \"Dayana Robel\" là gì?",
    "output": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\""
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết các loại chính sách được sử dụng bởi khách hàng tên là \"Dayana Robel\".",
    "output": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\""
  },
  {
    "instruction": "",
    "input": "Tất cả các loại chính sách của khách hàng có nhiều chính sách nhất được liệt kê là gì?",
    "output": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các loại chính sách được sử dụng bởi khách hàng đã đăng ký vào nhiều chính sách nhất.",
    "output": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các dịch vụ theo thứ tự bảng chữ cái.",
    "output": "SELECT service_name FROM services ORDER BY service_name"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi một danh sách tất cả các tên dịch vụ được sắp xếp theo thứ tự bảng chữ cái.",
    "output": "SELECT service_name FROM services ORDER BY service_name"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu dịch vụ?",
    "output": "SELECT count(*) FROM services"
  },
  {
    "instruction": "",
    "input": "Đếm tổng số dịch vụ có sẵn.",
    "output": "SELECT count(*) FROM services"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người dùng không có thông báo đầu tiên về hồ sơ tổn thất.",
    "output": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id"
  },
  {
    "instruction": "",
    "input": "Những khách hàng nào không có thông báo đầu tiên về hồ sơ tổn thất?Cho tôi tên khách hàng.",
    "output": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng đã sử dụng dịch vụ \"Đóng chính sách\" hoặc dịch vụ \"Nâng cấp chính sách\".",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" OR t3.service_name  =  \"Upgrade a policy\""
  },
  {
    "instruction": "",
    "input": "Những khách hàng nào đã sử dụng dịch vụ có tên \"Đóng chính sách\" hoặc \"nâng cấp chính sách\"?Cho tôi tên khách hàng.",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" OR t3.service_name  =  \"Upgrade a policy\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng đã sử dụng cả dịch vụ \"Đóng chính sách\" và dịch vụ \"Ứng dụng chính sách mới\".",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"New policy application\""
  },
  {
    "instruction": "",
    "input": "Những khách hàng nào đã sử dụng cả dịch vụ có tên \"Đóng chính sách\" và dịch vụ có tên \"Nâng cấp chính sách\"?Cho tôi tên khách hàng.",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"New policy application\""
  },
  {
    "instruction": "",
    "input": "Tìm ID của khách hàng có tên chứa \"Diana\".",
    "output": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\""
  },
  {
    "instruction": "",
    "input": "ID của khách hàng có \"Diana\" trong một phần tên của họ là gì?",
    "output": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\""
  },
  {
    "instruction": "",
    "input": "Số tiền giải quyết tối đa và tối thiểu trong hồ sơ là gì?",
    "output": "SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements"
  },
  {
    "instruction": "",
    "input": "Tìm số tiền giải quyết tối đa và tối thiểu.",
    "output": "SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các khách hàng theo thứ tự ID ngày càng tăng.",
    "output": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC"
  },
  {
    "instruction": "",
    "input": "Danh sách ID khách hàng được đặt hàng là gì?",
    "output": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC"
  },
  {
    "instruction": "",
    "input": "Lấy lại ngày mở và đóng cửa của tất cả các chính sách liên quan đến khách hàng có tên chứa \"Diana\"",
    "output": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\""
  },
  {
    "instruction": "",
    "input": "Ngày mở và đóng của tất cả các chính sách được sử dụng bởi khách hàng có \"Diana\" trong một phần tên của họ là gì?",
    "output": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại enzyme?",
    "output": "SELECT count(*) FROM enzyme"
  },
  {
    "instruction": "",
    "input": "Tổng số lượng enzyme là bao nhiêu?",
    "output": "SELECT count(*) FROM enzyme"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các enzyme theo thứ tự từ vựng giảm dần.",
    "output": "SELECT name FROM enzyme ORDER BY name DESC"
  },
  {
    "instruction": "",
    "input": "Tên của các enzyme theo thứ tự giảm dần là gì?",
    "output": "SELECT name FROM enzyme ORDER BY name DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên và vị trí mà các enzyme có thể tạo ra hiệu ứng.",
    "output": "SELECT name ,  LOCATION FROM enzyme"
  },
  {
    "instruction": "",
    "input": "Tên và vị trí của tất cả các enzyme được liệt kê là gì?",
    "output": "SELECT name ,  LOCATION FROM enzyme"
  },
  {
    "instruction": "",
    "input": "Giá trị di truyền Mendel trực tuyến tối đa ở người (OMIM) của các enzyme là bao nhiêu?",
    "output": "SELECT max(OMIM) FROM enzyme"
  },
  {
    "instruction": "",
    "input": "Giá trị OMIM tối đa trong cơ sở dữ liệu là gì?",
    "output": "SELECT max(OMIM) FROM enzyme"
  },
  {
    "instruction": "",
    "input": "Sản phẩm, nhiễm sắc thể và porphyria liên quan đến các enzyme có hiệu lực ở vị trí 'cytosol' là gì?",
    "output": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'"
  },
  {
    "instruction": "",
    "input": "Sản phẩm, nhiễm sắc thể và porphyria của các enzyme nằm ở 'cytosol' là gì?",
    "output": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'"
  },
  {
    "instruction": "",
    "input": "Tên của các enzyme không sản xuất 'heme' là gì?",
    "output": "SELECT name FROM enzyme WHERE product != 'Heme'"
  },
  {
    "instruction": "",
    "input": "Tên của các enzyme có sản phẩm không phải là 'heme' là gì?",
    "output": "SELECT name FROM enzyme WHERE product != 'Heme'"
  },
  {
    "instruction": "",
    "input": "Tên và tên thương mại của các loại thuốc có giá trị 'có' trong hồ sơ FDA là gì?",
    "output": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'"
  },
  {
    "instruction": "",
    "input": "Tên và tên thương mại của các loại thuốc được FDA phê duyệt là gì?",
    "output": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'"
  },
  {
    "instruction": "",
    "input": "Tên của các enzyme trong thuốc có tên là 'Amisulpride' có thể đóng vai trò là 'chất ức chế' là gì?",
    "output": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor'"
  },
  {
    "instruction": "",
    "input": "Tên của các enzyme được sử dụng trong y học Amisulpride đóng vai trò là chất ức chế là gì?",
    "output": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor'"
  },
  {
    "instruction": "",
    "input": "ID và tên của thuốc có thể tương tác với hai hoặc nhiều enzyme là gì?",
    "output": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ID thuốc, tên của các loại thuốc có thể tương tác với nhiều hơn một enzyme là gì?",
    "output": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "ID, tên và tình trạng phê duyệt của FDA là gì theo thứ tự giảm dần số lượng enzyme mà nó có thể tương tác.",
    "output": "SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC"
  },
  {
    "instruction": "",
    "input": "ID, tên và tình trạng phê duyệt của FDA đối với các loại thuốc được đặt hàng theo số lượng tương tác enzyme có thể giảm dần?",
    "output": "SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC"
  },
  {
    "instruction": "",
    "input": "ID và tên của enzyme với hầu hết các loại thuốc có thể tương tác như 'chất kích hoạt' là gì?",
    "output": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID và tên của enzyme có thể tương tác với nhiều loại thuốc nhất như một chất kích hoạt?",
    "output": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại tương tác của enzyme có tên là 'ala synthase' và thuốc có tên là 'aripiprazole' là gì?",
    "output": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'"
  },
  {
    "instruction": "",
    "input": "Loại tương tác cho enzyme có tên là 'ala synthase' và thuốc có tên là 'aripiprazole' là gì?",
    "output": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'"
  },
  {
    "instruction": "",
    "input": "Loại tương tác phổ biến nhất giữa enzyme và y học là gì?Và có bao nhiêu?",
    "output": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các loại tương tác phổ biến nhất giữa enzyme và y học là gì và có bao nhiêu loại?",
    "output": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại thuốc có tình trạng phê duyệt của FDA 'không'?",
    "output": "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại thuốc không được FDA chấp thuận?",
    "output": "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu enzyme không có bất kỳ tương tác?",
    "output": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );"
  },
  {
    "instruction": "",
    "input": "Số lượng enzyme mà không có bất kỳ tương tác nào?",
    "output": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );"
  },
  {
    "instruction": "",
    "input": "ID và tên giao dịch của các loại thuốc có thể tương tác với ít nhất 3 enzyme là gì?",
    "output": "SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "ID và tên thương mại của thuốc có thể tương tác với ít nhất 3 enzyme là gì?",
    "output": "SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Tên, vị trí và sản phẩm riêng biệt của các enzyme có bất kỳ tương tác 'ức chế' nào là gì?",
    "output": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'"
  },
  {
    "instruction": "",
    "input": "Các tên, vị trí và sản phẩm khác nhau của các enzyme có khả năng tương tác với chất ức chế có khả năng là gì?",
    "output": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên thuốc và tên thương mại có thể tương tác như 'chất ức chế' và 'chất kích hoạt' với các enzyme.",
    "output": "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'"
  },
  {
    "instruction": "",
    "input": "Các tên thuốc và thương mại có thể tương tác như một chất ức chế và chất kích hoạt với enzyme là gì?",
    "output": "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên thuốc và tên thương mại không thể tương tác với enzyme với sản phẩm 'heme'.",
    "output": "SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX'"
  },
  {
    "instruction": "",
    "input": "Các tên thuốc và thương mại không thể tương tác với enzyme với sản phẩm 'heme' là gì?",
    "output": "SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trạng thái phê duyệt của FDA riêng biệt cho các loại thuốc?",
    "output": "SELECT count(DISTINCT FDA_approved) FROM medicine"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trạng thái phê duyệt của FDA khác nhau cho các loại thuốc?",
    "output": "SELECT count(DISTINCT FDA_approved) FROM medicine"
  },
  {
    "instruction": "",
    "input": "Tên enzyme nào có \"ALA\"?",
    "output": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\""
  },
  {
    "instruction": "",
    "input": "Tên của các enzyme bao gồm chuỗi 'ALA' là gì?",
    "output": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng thuốc được cung cấp bởi mỗi giao dịch.",
    "output": "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại thuốc được cung cấp bởi mỗi tên thương mại?",
    "output": "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các trường học và biệt danh của họ theo thứ tự thành lập năm.",
    "output": "SELECT school ,  nickname FROM university ORDER BY founded"
  },
  {
    "instruction": "",
    "input": "Các trường khác nhau và biệt danh của họ, được đặt hàng bởi những năm sáng lập của họ là gì?",
    "output": "SELECT school ,  nickname FROM university ORDER BY founded"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các trường công lập và địa điểm của họ.",
    "output": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'"
  },
  {
    "instruction": "",
    "input": "Các trường công lập là gì và địa điểm của họ là gì?",
    "output": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'"
  },
  {
    "instruction": "",
    "input": "Khi nào trường có số lượng tuyển sinh lớn nhất được thành lập?",
    "output": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại năm thành lập cho trường với số lượng tuyển sinh lớn nhất.",
    "output": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm năm thành lập của trường không công cộng mới nhất.",
    "output": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Năm thành lập của trường không công cộng được thành lập gần đây nhất là gì?",
    "output": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường trong trận đấu bóng rổ?",
    "output": "SELECT count(DISTINCT school_id) FROM basketball_match"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các trường đã có các trận bóng rổ.",
    "output": "SELECT count(DISTINCT school_id) FROM basketball_match"
  },
  {
    "instruction": "",
    "input": "Điểm phần trăm ACC cao nhất trong cuộc thi là bao nhiêu?",
    "output": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại phần trăm ACC cao nhất trên tất cả các trận đấu bóng rổ.",
    "output": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hội nghị chính của trường có tỷ lệ phần trăm ACC thấp nhất trong cuộc thi là gì?",
    "output": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại hội nghị chính của trường với điểm phần trăm ACC thấp nhất.",
    "output": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên nhóm và điểm số mùa ACC thường xuyên của trường được thành lập trong thời gian dài nhất là gì?",
    "output": "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của đội và ACC trong mùa giải thông thường cho trường được thành lập sớm nhất.",
    "output": "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm vị trí và tất cả các điểm trò chơi của trường có Clemson làm tên nhóm của nó.",
    "output": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'"
  },
  {
    "instruction": "",
    "input": "Điểm số tất cả các trò chơi và vị trí của trường được gọi là Clemson là gì?",
    "output": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'"
  },
  {
    "instruction": "",
    "input": "Kích thước đăng ký trung bình của các trường đại học được thành lập trước năm 1850 là gì?",
    "output": "SELECT avg(enrollment) FROM university WHERE founded  <  1850"
  },
  {
    "instruction": "",
    "input": "Trả lại số lượng tuyển sinh trung bình của các trường đại học được thành lập trước năm 1850.",
    "output": "SELECT avg(enrollment) FROM university WHERE founded  <  1850"
  },
  {
    "instruction": "",
    "input": "Hiển thị tuyển sinh và chính_Conference của trường đại học lâu đời nhất.",
    "output": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Ghi danh và hội nghị chính cho trường đại học được thành lập sớm nhất là gì?",
    "output": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tổng số đăng ký và tối thiểu của tất cả các trường là bao nhiêu?",
    "output": "SELECT sum(enrollment) ,  min(enrollment) FROM university"
  },
  {
    "instruction": "",
    "input": "Trả lại tổng số ghi danh và tối thiểu trên tất cả các trường.",
    "output": "SELECT sum(enrollment) ,  min(enrollment) FROM university"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số học sinh ghi danh cho các trường liên kết khác nhau.",
    "output": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation"
  },
  {
    "instruction": "",
    "input": "Tổng số tuyển sinh của các trường đại học của mỗi loại liên kết là gì?",
    "output": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường không tham gia vào trận đấu bóng rổ?",
    "output": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các trường đại học không tham gia vào trận đấu bóng rổ.",
    "output": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)"
  },
  {
    "instruction": "",
    "input": "Tìm các trường được thành lập sau năm 1850 hoặc công khai.",
    "output": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'"
  },
  {
    "instruction": "",
    "input": "Các trường được thành lập trước năm 1850 hoặc là công khai là gì?",
    "output": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'"
  },
  {
    "instruction": "",
    "input": "Tìm có bao nhiêu loại liên kết khác nhau.",
    "output": "SELECT count(DISTINCT affiliation) FROM university"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các loại liên kết khác nhau.",
    "output": "SELECT count(DISTINCT affiliation) FROM university"
  },
  {
    "instruction": "",
    "input": "Tìm có bao nhiêu địa điểm trường học có từ 'ny'.",
    "output": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường đại học có một vị trí có chứa NY?",
    "output": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\""
  },
  {
    "instruction": "",
    "input": "Tìm tên nhóm của các trường đại học có số lượng đăng ký nhỏ hơn quy mô đăng ký trung bình.",
    "output": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)"
  },
  {
    "instruction": "",
    "input": "Tên của các nhóm từ các trường đại học có số lượng đăng ký dưới mức trung bình là gì?",
    "output": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các trường đại học có quy mô đăng ký hơn 20000 cho mỗi loại liên kết.",
    "output": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation"
  },
  {
    "instruction": "",
    "input": "Các liên kết khác nhau là gì, và có bao nhiêu trường có mỗi trường có quy mô tuyển sinh trên 20000?",
    "output": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số sinh viên đăng ký vào các trường đại học được thành lập sau năm 1850 cho mỗi loại liên kết.",
    "output": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation"
  },
  {
    "instruction": "",
    "input": "Các liên kết khác nhau là gì, và tổng số tiền tuyển sinh được thành lập sau năm 1850 cho mỗi loại tuyển sinh là gì?",
    "output": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation"
  },
  {
    "instruction": "",
    "input": "Ghi danh tối đa trên tất cả các trường là gì?",
    "output": "SELECT max(Enrollment) FROM university"
  },
  {
    "instruction": "",
    "input": "Trả lại số lượng tuyển sinh tối đa trên tất cả các trường.",
    "output": "SELECT max(Enrollment) FROM university"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả thông tin liên quan đến trận đấu bóng rổ.",
    "output": "SELECT * FROM basketball_match"
  },
  {
    "instruction": "",
    "input": "Tất cả các thông tin về trận đấu bóng rổ là gì?",
    "output": "SELECT * FROM basketball_match"
  },
  {
    "instruction": "",
    "input": "Danh sách tên của tất cả các đội trong cuộc thi bóng rổ, được đặt hàng theo tất cả các điểm số trên sân nhà theo thứ tự giảm dần.",
    "output": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các đội trong cuộc thi bóng rổ, được sắp xếp theo tất cả các điểm số trên sân nhà theo thứ tự giảm dần là gì?",
    "output": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC"
  },
  {
    "instruction": "",
    "input": "Tên của các mô hình ra mắt từ năm 2002 đến 2004.",
    "output": "SELECT Model_name FROM chip_model WHERE Launch_year BETWEEN 2002 AND 2004;"
  },
  {
    "instruction": "",
    "input": "Mô hình nào có số lượng RAM ít nhất?Liệt kê tên mô hình và số lượng RAM.",
    "output": "SELECT Model_name ,  RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Mô hình chip và chế độ màn hình của điện thoại với tên mô hình phần cứng \"LG-P760\" là gì?",
    "output": "SELECT chip_model ,  screen_mode FROM phone WHERE Hardware_Model_name = \"LG-P760\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mẫu phần cứng điện thoại được sản xuất bởi công ty có tên là \"Nokia Corporation\"?",
    "output": "SELECT count(*) FROM phone WHERE Company_name = \"Nokia Corporation\";"
  },
  {
    "instruction": "",
    "input": "Kích thước ram tối đa và tối thiểu của điện thoại được sản xuất bởi công ty có tên là \"Nokia Corporation\" là gì?",
    "output": "SELECT max(T1.RAM_MiB) ,  min(T1.RAM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = \"Nokia Corporation\";"
  },
  {
    "instruction": "",
    "input": "Kích thước rom trung bình của điện thoại được sản xuất bởi công ty có tên là \"Nokia Corporation\" là gì?",
    "output": "SELECT avg(T1.ROM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = \"Nokia Corporation\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên mô hình phần cứng và tên công ty cho tất cả các điện thoại được ra mắt vào năm 2002 hoặc có kích thước RAM lớn hơn 32.",
    "output": "SELECT T2.Hardware_Model_name ,  T2.Company_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB  >  32;"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các điện thoại có từ 'đầy đủ' trong các loại công nhận của họ.Liệt kê tên mô hình phần cứng và tên công ty.",
    "output": "SELECT Hardware_Model_name ,  Company_name FROM phone WHERE Accreditation_type LIKE 'Full';"
  },
  {
    "instruction": "",
    "input": "Tìm các ô char, pixel và màu phần cứng cho màn hình của điện thoại có tên mô hình phần cứng là \"LG-P760\".",
    "output": "SELECT T1.Char_cells ,  T1.Pixels ,  T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = \"LG-P760\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên mô hình phần cứng và tên công ty cho điện thoại có loại chế độ màn hình là \"đồ họa\".",
    "output": "SELECT T2.Hardware_Model_name ,  T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  \"Graphics\";"
  },
  {
    "instruction": "",
    "input": "Tìm tên của công ty có số lượng mô hình điện thoại ít nhất.Liệt kê tên công ty và số lượng mô hình điện thoại được sản xuất bởi công ty đó.",
    "output": "SELECT Company_name ,  count(*) FROM phone GROUP BY Company_name ORDER BY count(*) ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của công ty sản xuất nhiều hơn một mô hình điện thoại.",
    "output": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count(*)  >  1;"
  },
  {
    "instruction": "",
    "input": "Liệt kê số lượng KB tối đa, tối thiểu và trung bình của KB ở chế độ màn hình.",
    "output": "SELECT max(used_kb) , min(used_kb) , avg(used_kb) FROM screen_mode;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của mô hình điện thoại được ra mắt vào năm 2002 và với kích thước RAM cao nhất.",
    "output": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 ORDER BY T1.RAM_MiB DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Loại chế độ WiFi và màn hình của mô hình phần cứng có tên là \"LG-P760\" là gì?",
    "output": "SELECT T1.WiFi , T3.Type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T2.Hardware_Model_name = \"LG-P760\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên mô hình phần cứng cho các điện thoại có loại \"Văn bản\" hoặc kích thước RAM lớn hơn 32.",
    "output": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = \"Text\" OR T1.RAM_MiB  >  32;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên mô hình phần cứng cho các điện thoại được sản xuất bởi \"Nokia Corporation\" hoặc có loại chế độ màn hình là \"đồ họa\".",
    "output": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  \"Graphics\" OR t2.Company_name  =  \"Nokia Corporation\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tên mô hình phần cứng cho các phon được sản xuất bởi \"Nokia Corporation\" nhưng có loại chế độ màn hình không phải là văn bản.",
    "output": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"Nokia Corporation\" AND T1.Type != \"Text\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê mô hình phần cứng điện thoại và tên công ty cho các điện thoại có màn hình sử dụng trong KB là từ 10 đến 15.",
    "output": "SELECT DISTINCT T2.Hardware_Model_name , T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb BETWEEN 10 AND 15;"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng điện thoại cho mỗi loại công nhận.",
    "output": "SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu điện thoại thuộc về mỗi loại công nhận?",
    "output": "SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type"
  },
  {
    "instruction": "",
    "input": "Tìm mức công nhận mà hơn 3 điện thoại sử dụng.",
    "output": "SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count(*)  >  3"
  },
  {
    "instruction": "",
    "input": "Tìm các chi tiết cho tất cả các mô hình chip.",
    "output": "SELECT * FROM chip_model"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mô hình không có chức năng WiFi?",
    "output": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng mô hình chip không có wifi.",
    "output": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên mô hình được sắp xếp theo năm ra mắt của họ.",
    "output": "SELECT model_name FROM chip_model ORDER BY launch_year"
  },
  {
    "instruction": "",
    "input": "Tìm kích thước Ram MIB trung bình của các mô hình chip không bao giờ được sử dụng bởi bất kỳ điện thoại nào.",
    "output": "SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các mô hình chip không được sử dụng bởi bất kỳ điện thoại nào có loại công nhận đầy đủ.",
    "output": "SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type  =  'Full'"
  },
  {
    "instruction": "",
    "input": "Tìm các pixel của các chế độ màn hình được cả hai điện thoại sử dụng với các loại công nhận đầy đủ và điện thoại với các loại công nhận tạm thời.",
    "output": "SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Provisional' INTERSECT SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Full'"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu quốc gia?",
    "output": "SELECT count(*) FROM country"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng quốc gia.",
    "output": "SELECT count(*) FROM country"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên quốc gia và thủ đô của tất cả các quốc gia.",
    "output": "SELECT Country_name ,  Capital FROM country"
  },
  {
    "instruction": "",
    "input": "Tên và thủ đô của mỗi quốc gia là gì?",
    "output": "SELECT Country_name ,  Capital FROM country"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các ngôn ngữ gốc chính thức chứa từ \"tiếng Anh\".",
    "output": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\""
  },
  {
    "instruction": "",
    "input": "Các ngôn ngữ gốc chính thức có chứa chuỗi \"tiếng Anh\" là gì.",
    "output": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các vị trí riêng biệt của các trận đấu.",
    "output": "SELECT DISTINCT POSITION FROM match_season"
  },
  {
    "instruction": "",
    "input": "Các vị trí khác nhau cho mùa trận đấu là gì?",
    "output": "SELECT DISTINCT POSITION FROM match_season"
  },
  {
    "instruction": "",
    "input": "Hiển thị các cầu thủ từ trường đại học UCLA.",
    "output": "SELECT Player FROM match_season WHERE College  =  \"UCLA\""
  },
  {
    "instruction": "",
    "input": "Các cầu thủ từ UCLA là ai?",
    "output": "SELECT Player FROM match_season WHERE College  =  \"UCLA\""
  },
  {
    "instruction": "",
    "input": "Hiển thị vị trí khác biệt của người chơi từ UCLA hoặc Duke đại học.",
    "output": "SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\""
  },
  {
    "instruction": "",
    "input": "Các vị trí khác nhau của người chơi từ các trường đại học UCLA hoặc Duke là gì?",
    "output": "SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\""
  },
  {
    "instruction": "",
    "input": "Hiển thị dự thảo số chọn và dự thảo các lớp người chơi có vị trí là người bảo vệ.",
    "output": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\""
  },
  {
    "instruction": "",
    "input": "Các bản nháp chọn số và các lớp dự thảo cho người chơi chơi vị trí hậu vệ là gì?",
    "output": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu đội khác nhau tham gia vào các mùa trận đấu?",
    "output": "SELECT count(DISTINCT Team) FROM match_season"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các đội khác nhau tham gia vào mùa trận đấu.",
    "output": "SELECT count(DISTINCT Team) FROM match_season"
  },
  {
    "instruction": "",
    "input": "Cho các cầu thủ và những năm chơi.",
    "output": "SELECT Player ,  Years_Played FROM player"
  },
  {
    "instruction": "",
    "input": "Ai là người chơi khác nhau và mỗi người chơi bao nhiêu năm?",
    "output": "SELECT Player ,  Years_Played FROM player"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả tên nhóm.",
    "output": "SELECT Name FROM Team"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các đội là gì?",
    "output": "SELECT Name FROM Team"
  },
  {
    "instruction": "",
    "input": "Hiển thị mùa giải, người chơi và tên của đất nước mà người chơi thuộc về.",
    "output": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi người chơi, tên, mùa và đất nước của họ là gì?",
    "output": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country"
  },
  {
    "instruction": "",
    "input": "Người chơi nào đến từ Indonesia?",
    "output": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonesia\""
  },
  {
    "instruction": "",
    "input": "Những người chơi đến từ Indonesia là ai?",
    "output": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonesia\""
  },
  {
    "instruction": "",
    "input": "Các vị trí riêng biệt của người chơi từ một quốc gia có thủ đô là Dublin là gì?",
    "output": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\""
  },
  {
    "instruction": "",
    "input": "Đưa ra các vị trí khác nhau của người chơi chơi cho đất nước với thủ đô Dublin.",
    "output": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\""
  },
  {
    "instruction": "",
    "input": "Các ngôn ngữ chính thức của các quốc gia của người chơi từ Maryland hoặc Duke College là gì?",
    "output": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"Maryland\" OR T2.College  =  \"Duke\""
  },
  {
    "instruction": "",
    "input": "Trả lại các ngôn ngữ bản địa chính thức của các quốc gia có người chơi từ các trường đại học Maryland hoặc Duke.",
    "output": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"Maryland\" OR T2.College  =  \"Duke\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ngôn ngữ chính thức riêng biệt trong số các quốc gia người chơi có vị trí là người bảo vệ.",
    "output": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các ngôn ngữ chính thức khác nhau tương ứng với các quốc gia mà người chơi chơi hậu vệ đến từ.",
    "output": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\""
  },
  {
    "instruction": "",
    "input": "Hiển thị mùa giải, người chơi và tên của đội mà người chơi thuộc về.",
    "output": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id"
  },
  {
    "instruction": "",
    "input": "Ai là người chơi khác nhau, họ chơi mùa nào, và tên của đội họ đang ở trên?",
    "output": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị vị trí của các cầu thủ từ đội có tên \"Ryley Goldner\".",
    "output": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Ryley Goldner\""
  },
  {
    "instruction": "",
    "input": "Trả lại vị trí của người chơi trong đội Ryley Goldner.",
    "output": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Ryley Goldner\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường đại học riêng biệt được liên kết với các cầu thủ từ đội có tên \"Columbus Crew\".",
    "output": "SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các trường đại học khác nhau mà người chơi chơi cho Columbus Crew đến từ.",
    "output": "SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""
  },
  {
    "instruction": "",
    "input": "Hiển thị các cầu thủ và năm chơi cho người chơi từ đội \"Columbus Crew\".",
    "output": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""
  },
  {
    "instruction": "",
    "input": "Những người chơi đã chơi cho Columbus Crew là gì và mỗi người chơi cho bao nhiêu năm?",
    "output": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""
  },
  {
    "instruction": "",
    "input": "Hiển thị vị trí của người chơi và số lượng người chơi tương ứng.",
    "output": "SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người chơi đã chơi từng vị trí?",
    "output": "SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên quốc gia và số lượng người chơi tương ứng.",
    "output": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người chơi từ mỗi quốc gia?",
    "output": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name"
  },
  {
    "instruction": "",
    "input": "Trả lại tất cả người chơi được sắp xếp theo trường đại học theo thứ tự bảng chữ cái tăng dần.",
    "output": "SELECT player FROM match_season ORDER BY College ASC"
  },
  {
    "instruction": "",
    "input": "Tất cả những người chơi đã chơi trong mùa trận đấu, được sắp xếp bởi trường đại học theo thứ tự bảng chữ cái tăng dần là gì?",
    "output": "SELECT player FROM match_season ORDER BY College ASC"
  },
  {
    "instruction": "",
    "input": "Hiển thị vị trí phổ biến nhất của người chơi trong các mùa trận đấu.",
    "output": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Vị trí phổ biến nhất trong số những người chơi trong các mùa trận đấu là gì?",
    "output": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị 3 trường đại học phổ biến nhất của người chơi trong các mùa trận đấu.",
    "output": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Ba trường đại học mà nhiều người chơi nhất đến từ đó là gì?",
    "output": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các trường đại học có ít nhất hai người chơi.",
    "output": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các trường đại học có hai hoặc nhiều người chơi là gì?",
    "output": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các trường đại học có ít nhất hai người chơi theo thứ tự bảng chữ cái giảm dần.",
    "output": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC"
  },
  {
    "instruction": "",
    "input": "Tên của các trường đại học có hai hoặc nhiều người chơi, được liệt kê theo thứ tự bảng chữ cái giảm dần là gì?",
    "output": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC"
  },
  {
    "instruction": "",
    "input": "Tên của các đội không có kỷ lục mùa trận là gì?",
    "output": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các đội không có kỷ lục mùa giải.",
    "output": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)"
  },
  {
    "instruction": "",
    "input": "Tên của các quốc gia có cả người chơi có vị trí về phía trước và người chơi có hậu vệ vị trí là gì?",
    "output": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Forward\" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\""
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các quốc gia có người chơi chơi vị trí chuyển tiếp, cũng như những người chơi chơi vị trí hậu vệ.",
    "output": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Forward\" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\""
  },
  {
    "instruction": "",
    "input": "Trường đại học nào có cả người chơi có tiền vệ vị trí và người chơi có hậu vệ vị trí?",
    "output": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\""
  },
  {
    "instruction": "",
    "input": "Trả lại các trường đại học có những người chơi chơi vị trí tiền vệ, cũng như những người chơi đóng vị trí hậu vệ.",
    "output": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người leo núi?",
    "output": "SELECT count(*) FROM climber"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng người leo núi.",
    "output": "SELECT count(*) FROM climber"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của những người leo núi theo thứ tự giảm dần điểm.",
    "output": "SELECT Name FROM climber ORDER BY Points DESC"
  },
  {
    "instruction": "",
    "input": "Tên của những người leo núi là gì, được đặt hàng bởi các điểm giảm dần?",
    "output": "SELECT Name FROM climber ORDER BY Points DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của những người leo núi có đất nước không phải là Thụy Sĩ.",
    "output": "SELECT Name FROM climber WHERE Country != \"Switzerland\""
  },
  {
    "instruction": "",
    "input": "Tên của những người leo núi không đến từ đất nước Thụy Sĩ là gì?",
    "output": "SELECT Name FROM climber WHERE Country != \"Switzerland\""
  },
  {
    "instruction": "",
    "input": "Điểm tối đa cho những người leo núi có quốc gia là Vương quốc Anh là bao nhiêu?",
    "output": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\""
  },
  {
    "instruction": "",
    "input": "Trả lại số lượng điểm tối đa cho những người leo núi từ Vương quốc Anh.",
    "output": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu quốc gia khác nhau là những người leo núi từ?",
    "output": "SELECT COUNT(DISTINCT Country) FROM climber"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các quốc gia khác nhau mà những người leo núi đến từ.",
    "output": "SELECT COUNT(DISTINCT Country) FROM climber"
  },
  {
    "instruction": "",
    "input": "Tên của những ngọn núi theo thứ tự bảng chữ cái tăng dần là gì?",
    "output": "SELECT Name FROM mountain ORDER BY Name ASC"
  },
  {
    "instruction": "",
    "input": "Đặt tên của những ngọn núi theo thứ tự bảng chữ cái.",
    "output": "SELECT Name FROM mountain ORDER BY Name ASC"
  },
  {
    "instruction": "",
    "input": "Các quốc gia núi có chiều cao lớn hơn 5000 là gì?",
    "output": "SELECT Country FROM mountain WHERE Height  >  5000"
  },
  {
    "instruction": "",
    "input": "Trả lại các quốc gia của những ngọn núi có chiều cao lớn hơn 5000.",
    "output": "SELECT Country FROM mountain WHERE Height  >  5000"
  },
  {
    "instruction": "",
    "input": "Tên của ngọn núi cao nhất là gì?",
    "output": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của ngọn núi với chiều cao lớn nhất.",
    "output": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các phạm vi riêng biệt của những ngọn núi với 3 nổi bật hàng đầu.",
    "output": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Các phạm vi khác nhau của 3 ngọn núi với sự nổi bật cao nhất là gì?",
    "output": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của những người leo núi và tên của những ngọn núi họ leo lên.",
    "output": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"
  },
  {
    "instruction": "",
    "input": "Tên của những người leo núi và tên tương ứng của những ngọn núi mà họ leo lên là gì?",
    "output": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của những người leo núi và chiều cao của những ngọn núi họ leo lên.",
    "output": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"
  },
  {
    "instruction": "",
    "input": "Tên của những người leo núi và chiều cao tương ứng của những ngọn núi mà họ leo lên là gì?",
    "output": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị chiều cao của ngọn núi được leo lên bởi người leo núi với các điểm tối đa.",
    "output": "SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Chiều cao của ngọn núi leo lên bởi cuộc leo núi có nhiều điểm nhất?",
    "output": "SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị những tên riêng biệt của những ngọn núi được leo lên bởi những người leo núi từ đất nước \"Tây Đức\".",
    "output": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\""
  },
  {
    "instruction": "",
    "input": "Những tên khác nhau của những ngọn núi được leo lên bởi những người leo núi từ đất nước Tây Đức là gì?",
    "output": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\""
  },
  {
    "instruction": "",
    "input": "Hiển thị thời gian được sử dụng bởi những người leo núi để leo núi ở đất nước Uganda.",
    "output": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\""
  },
  {
    "instruction": "",
    "input": "Thời đại được sử dụng bởi những người leo núi leo núi ở đất nước Uganda là gì?",
    "output": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\""
  },
  {
    "instruction": "",
    "input": "Vui lòng cho các quốc gia và số lượng người leo núi từ mỗi quốc gia.",
    "output": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người leo núi từ mỗi quốc gia?",
    "output": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country"
  },
  {
    "instruction": "",
    "input": "Liệt kê các quốc gia có nhiều hơn một ngọn núi.",
    "output": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Những quốc gia nào có nhiều hơn một ngọn núi?",
    "output": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của những ngọn núi không có bất kỳ người leo núi nào.",
    "output": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)"
  },
  {
    "instruction": "",
    "input": "Tên của các hạt mà không có người leo núi đã leo lên là gì?",
    "output": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các quốc gia có những ngọn núi có chiều cao hơn 5600 tầng và những ngọn núi có chiều cao dưới 5200.",
    "output": "SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200"
  },
  {
    "instruction": "",
    "input": "Các quốc gia có cả hai ngọn núi cao hơn 5600 và thấp hơn 5200 là gì?",
    "output": "SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200"
  },
  {
    "instruction": "",
    "input": "Hiển thị phạm vi có số lượng núi nhiều nhất.",
    "output": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Phạm vi nào chứa nhiều ngọn núi nhất?",
    "output": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của những ngọn núi có chiều cao hơn 5000 hoặc nổi bật hơn 1000.",
    "output": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000"
  },
  {
    "instruction": "",
    "input": "Tên của những ngọn núi có chiều cao trên 5000 hoặc nổi bật hơn 1000 là gì?",
    "output": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhà xây dựng cơ thể?",
    "output": "SELECT count(*) FROM body_builder"
  },
  {
    "instruction": "",
    "input": "Liệt kê tổng số điểm của các nhà xây dựng cơ thể theo thứ tự tăng dần.",
    "output": "SELECT Total FROM body_builder ORDER BY Total ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê điểm số Snatch và điểm số giật sạch của các nhà xây dựng cơ thể theo thứ tự tăng dần của điểm Snatch.",
    "output": "SELECT Snatch ,  Clean_Jerk FROM body_builder ORDER BY Snatch ASC"
  },
  {
    "instruction": "",
    "input": "Điểm giật trung bình của các nhà xây dựng cơ thể là bao nhiêu?",
    "output": "SELECT avg(Snatch) FROM body_builder"
  },
  {
    "instruction": "",
    "input": "Điểm sạch và giật của người xây dựng cơ thể với tổng số điểm cao nhất là gì?",
    "output": "SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Sinh nhật của những người theo thứ tự chiều cao tăng dần là gì?",
    "output": "SELECT Birth_Date FROM People ORDER BY Height ASC"
  },
  {
    "instruction": "",
    "input": "Tên của các nhà xây dựng cơ thể là gì?",
    "output": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID"
  },
  {
    "instruction": "",
    "input": "Tên của các nhà xây dựng cơ thể có tổng điểm cao hơn 300 là gì?",
    "output": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  >  300"
  },
  {
    "instruction": "",
    "input": "Tên của người xây dựng cơ thể với trọng lượng cơ thể lớn nhất là gì?",
    "output": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Ngày sinh và nơi sinh của người xây dựng cơ thể với tổng số điểm cao nhất là gì?",
    "output": "SELECT T2.Birth_Date ,  T2.Birth_Place FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Total DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Chiều cao của các nhà xây dựng cơ thể với tổng số điểm nhỏ hơn 315 là gì?",
    "output": "SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  <  315"
  },
  {
    "instruction": "",
    "input": "Tổng số điểm trung bình của các nhà xây dựng cơ thể với chiều cao lớn hơn 200 là bao nhiêu?",
    "output": "SELECT avg(T1.Total) FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200"
  },
  {
    "instruction": "",
    "input": "Tên của các nhà xây dựng cơ thể theo thứ tự giảm dần của tổng số điểm là gì?",
    "output": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Total DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê từng nơi sinh cùng với số người từ đó.",
    "output": "SELECT Birth_Place ,  COUNT(*) FROM people GROUP BY Birth_Place"
  },
  {
    "instruction": "",
    "input": "Nơi sinh phổ biến nhất của con người là gì?",
    "output": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những nơi sinh được chia sẻ bởi ít nhất hai người là gì?",
    "output": "SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê chiều cao và trọng lượng của những người theo thứ tự chiều cao giảm dần.",
    "output": "SELECT Height ,  Weight FROM people ORDER BY Height DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả thông tin về mỗi người xây dựng cơ thể.",
    "output": "SELECT * FROM body_builder"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và nguồn gốc của những người không phải là người xây dựng cơ thể.",
    "output": "SELECT Name ,  birth_place FROM people EXCEPT SELECT T1.Name ,  T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id  =  T2.people_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nơi sinh khác nhau?",
    "output": "SELECT count(DISTINCT Birth_Place) FROM people"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người không phải là người xây dựng cơ thể?",
    "output": "SELECT count(*) FROM people WHERE people_id NOT IN (SELECT People_ID FROM body_builder)"
  },
  {
    "instruction": "",
    "input": "Liệt kê trọng lượng của các nhà xây dựng cơ thể có điểm Snatch cao hơn 140 hoặc có chiều cao lớn hơn 200.",
    "output": "SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T1.snatch  >  140 OR T2.height  >  200;"
  },
  {
    "instruction": "",
    "input": "Tổng số điểm của các nhà xây dựng cơ thể có sinh nhật chứa chuỗi \"tháng 1\" là gì?",
    "output": "SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T2.Birth_Date LIKE \"%January%\";"
  },
  {
    "instruction": "",
    "input": "Điểm giật tối thiểu là bao nhiêu?",
    "output": "SELECT min(snatch) FROM body_builder"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cuộc bầu cử?",
    "output": "SELECT count(*) FROM election"
  },
  {
    "instruction": "",
    "input": "Liệt kê các phiếu bầu của các cuộc bầu cử theo thứ tự giảm dần.",
    "output": "SELECT Votes FROM election ORDER BY Votes DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê các ngày và phiếu bầu của các cuộc bầu cử.",
    "output": "SELECT Date ,  Vote_Percent FROM election"
  },
  {
    "instruction": "",
    "input": "Phần trăm phiếu bầu tối thiểu và tối đa của các cuộc bầu cử là gì?",
    "output": "SELECT min(Vote_Percent) ,  max(Vote_Percent) FROM election"
  },
  {
    "instruction": "",
    "input": "Tên và các bên của đại diện là gì?",
    "output": "SELECT Name ,  Party FROM representative"
  },
  {
    "instruction": "",
    "input": "Tên của các đại diện có đảng không phải là \"đảng Cộng hòa\" là gì?",
    "output": "SELECT Name FROM Representative WHERE Party != \"Republican\""
  },
  {
    "instruction": "",
    "input": "Phạm vi cuộc sống của các đại diện từ bang New York hoặc bang Indiana là gì?",
    "output": "SELECT Lifespan FROM representative WHERE State  =  \"New York\" OR State  =  \"Indiana\""
  },
  {
    "instruction": "",
    "input": "Tên của các đại diện và ngày bầu cử mà họ tham gia là gì.",
    "output": "SELECT T2.Name ,  T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID"
  },
  {
    "instruction": "",
    "input": "Tên của các đại diện với hơn 10000 phiếu bầu trong bầu cử là gì?",
    "output": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE Votes  >  10000"
  },
  {
    "instruction": "",
    "input": "Tên của các đại diện trong thứ tự giảm dần phiếu bầu là gì?",
    "output": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC"
  },
  {
    "instruction": "",
    "input": "Đảng của đại diện có số phiếu nhỏ nhất.",
    "output": "SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tuổi thọ của các đại diện trong lệnh giảm dần phần trăm phiếu bầu là gì?",
    "output": "SELECT T2.Lifespan FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY Vote_Percent DESC"
  },
  {
    "instruction": "",
    "input": "Số phiếu bầu trung bình của các đại diện từ \"Đảng Cộng hòa\" là bao nhiêu?",
    "output": "SELECT avg(T1.Votes) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE T2.Party  =  \"Republican\""
  },
  {
    "instruction": "",
    "input": "Các bên khác nhau của đại diện là gì?Hiển thị tên đảng và số lượng đại diện trong mỗi bên.",
    "output": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party"
  },
  {
    "instruction": "",
    "input": "Bên có số lượng đại diện lớn nhất là gì?",
    "output": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những bên nào có ít nhất ba đại diện?",
    "output": "SELECT Party FROM representative GROUP BY Party HAVING COUNT(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Những quốc gia nào có ít nhất hai đại diện?",
    "output": "SELECT State FROM representative GROUP BY State HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các đại diện chưa tham gia các cuộc bầu cử được liệt kê ở đây.",
    "output": "SELECT Name FROM representative WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election)"
  },
  {
    "instruction": "",
    "input": "Cho thấy các bên có cả đại diện ở bang New York và đại diện tại bang Pennsylvania.",
    "output": "SELECT Party FROM representative WHERE State  =  \"New York\" INTERSECT SELECT Party FROM representative WHERE State  =  \"Pennsylvania\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bên riêng biệt cho đại diện?",
    "output": "SELECT count(DISTINCT Party) FROM representative"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu đặt phòng chung cư trong tổng số?",
    "output": "SELECT count(*) FROM Apartment_Bookings"
  },
  {
    "instruction": "",
    "input": "Đếm tổng số đặt phòng căn hộ.",
    "output": "SELECT count(*) FROM Apartment_Bookings"
  },
  {
    "instruction": "",
    "input": "Hiển thị ngày bắt đầu và ngày kết thúc của tất cả các đặt phòng căn hộ.",
    "output": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings"
  },
  {
    "instruction": "",
    "input": "Ngày bắt đầu và ngày kết thúc của mỗi căn hộ đặt phòng là gì?",
    "output": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các mô tả tòa nhà riêng biệt.",
    "output": "SELECT DISTINCT building_description FROM Apartment_Buildings"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi một danh sách tất cả các mô tả tòa nhà riêng biệt.",
    "output": "SELECT DISTINCT building_description FROM Apartment_Buildings"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên ngắn của các tòa nhà được quản lý bởi \"Emma\".",
    "output": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\""
  },
  {
    "instruction": "",
    "input": "\"Emma\" quản lý những tòa nhà nào?Cho tôi tên ngắn của các tòa nhà.",
    "output": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\""
  },
  {
    "instruction": "",
    "input": "Hiển thị địa chỉ và điện thoại của tất cả các tòa nhà được quản lý bởi \"Brenden\".",
    "output": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\""
  },
  {
    "instruction": "",
    "input": "Địa chỉ và số điện thoại của các tòa nhà được quản lý bởi \"Brenden\" là gì?",
    "output": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\""
  },
  {
    "instruction": "",
    "input": "Các tên đầy đủ của tòa nhà có chứa từ \"tòa án\" là gì?",
    "output": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các tên tòa nhà đầy đủ chứa từ \"tòa án\".",
    "output": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\""
  },
  {
    "instruction": "",
    "input": "Số lượng phòng tắm tối thiểu và tối đa của tất cả các căn hộ là bao nhiêu?",
    "output": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments"
  },
  {
    "instruction": "",
    "input": "Cho tôi số lượng phòng tắm tối thiểu và tối đa trong số tất cả các căn hộ.",
    "output": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments"
  },
  {
    "instruction": "",
    "input": "Số lượng phòng ngủ trung bình của tất cả các căn hộ là bao nhiêu?",
    "output": "SELECT avg(bedroom_count) FROM Apartments"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng trung bình của phòng ngủ của tất cả các căn hộ.",
    "output": "SELECT avg(bedroom_count) FROM Apartments"
  },
  {
    "instruction": "",
    "input": "Trả lại số căn hộ và số lượng phòng cho mỗi căn hộ.",
    "output": "SELECT apt_number ,  room_count FROM Apartments"
  },
  {
    "instruction": "",
    "input": "Số căn hộ và số lượng phòng của mỗi căn hộ là gì?",
    "output": "SELECT apt_number ,  room_count FROM Apartments"
  },
  {
    "instruction": "",
    "input": "Số lượng phòng trung bình của căn hộ có mã \"studio\" là bao nhiêu?",
    "output": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng phòng trung bình của các căn hộ có mã loại \"Studio\".",
    "output": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\""
  },
  {
    "instruction": "",
    "input": "Trả lại số căn hộ của các căn hộ với mã loại \"phẳng\".",
    "output": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\""
  },
  {
    "instruction": "",
    "input": "Căn hộ nào có mã loại \"phẳng\"?Cho tôi số lượng căn hộ của họ.",
    "output": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\""
  },
  {
    "instruction": "",
    "input": "Trả lại tên và họ của tất cả các khách",
    "output": "SELECT guest_first_name ,  guest_last_name FROM Guests"
  },
  {
    "instruction": "",
    "input": "Tên và tên cuối cùng của tất cả các khách là gì?",
    "output": "SELECT guest_first_name ,  guest_last_name FROM Guests"
  },
  {
    "instruction": "",
    "input": "Trả lại ngày sinh cho tất cả các vị khách có mã giới tính là \"nam\".",
    "output": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\""
  },
  {
    "instruction": "",
    "input": "Ngày sinh của tất cả những vị khách có giới tính là \"nam\" là gì?",
    "output": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\""
  },
  {
    "instruction": "",
    "input": "Hiển thị số căn hộ, ngày bắt đầu và ngày kết thúc của tất cả các đặt phòng căn hộ.",
    "output": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id"
  },
  {
    "instruction": "",
    "input": "Số căn hộ, ngày bắt đầu và ngày kết thúc của mỗi căn hộ đặt phòng là gì?",
    "output": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id"
  },
  {
    "instruction": "",
    "input": "Ngày bắt đầu đặt phòng và ngày kết thúc của các căn hộ với mã \"song công\" mã loại là gì?",
    "output": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\""
  },
  {
    "instruction": "",
    "input": "Trả lại ngày bắt đầu đặt phòng và ngày kết thúc cho các căn hộ có mã \"song công\" mã loại.",
    "output": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\""
  },
  {
    "instruction": "",
    "input": "Ngày bắt đầu đặt phòng và ngày kết thúc của các căn hộ với hơn 2 phòng ngủ là gì?",
    "output": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2"
  },
  {
    "instruction": "",
    "input": "Tìm ngày bắt đầu đặt phòng và ngày kết thúc cho các căn hộ có nhiều hơn hai phòng ngủ.",
    "output": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2"
  },
  {
    "instruction": "",
    "input": "Mã trạng thái đặt phòng của căn hộ với số căn hộ \"bộ 634\" là gì?",
    "output": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\""
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết mã trạng thái đặt phòng cho căn hộ có số \"bộ 634\".",
    "output": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\""
  },
  {
    "instruction": "",
    "input": "Hiển thị các số căn hộ riêng biệt của các căn hộ có đặt phòng với mã trạng thái \"được xác nhận\".",
    "output": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\""
  },
  {
    "instruction": "",
    "input": "Căn hộ nào có đặt phòng với mã trạng thái \"được xác nhận\"?Trả lại số căn hộ của họ.",
    "output": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\""
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng phòng trung bình của các căn hộ có mã trạng thái đặt phòng \"tạm thời\".",
    "output": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\""
  },
  {
    "instruction": "",
    "input": "Số lượng phòng trung bình của các căn hộ có mã trạng thái đặt phòng là \"tạm thời\" là gì?",
    "output": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên đầu tiên của khách, ngày bắt đầu và ngày kết thúc của tất cả các đặt phòng căn hộ.",
    "output": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của khách, ngày bắt đầu và ngày kết thúc của mỗi căn hộ đặt phòng là gì?",
    "output": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị ngày bắt đầu và ngày kết thúc của tất cả các đặt phòng căn hộ được thực hiện bởi khách với mã giới tính là \"nữ\".",
    "output": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\""
  },
  {
    "instruction": "",
    "input": "Ngày bắt đầu và ngày kết thúc của các đặt phòng căn hộ được thực hiện bởi các vị khách nữ (mã giới tính \"nữ\") là gì?",
    "output": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và họ của tất cả các khách có đặt phòng căn hộ với mã trạng thái \"được xác nhận\".",
    "output": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\""
  },
  {
    "instruction": "",
    "input": "Những vị khách nào có đặt phòng căn hộ với mã trạng thái \"được xác nhận\"?Trả lại tên và họ của họ.",
    "output": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\""
  },
  {
    "instruction": "",
    "input": "Hiển thị mã cơ sở của căn hộ với hơn 4 phòng ngủ.",
    "output": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4"
  },
  {
    "instruction": "",
    "input": "Các mã cơ sở của các căn hộ với hơn bốn phòng ngủ là gì?",
    "output": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4"
  },
  {
    "instruction": "",
    "input": "Hiển thị tổng số phòng của tất cả các căn hộ có mã cơ sở \"Phòng tập thể dục\".",
    "output": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\""
  },
  {
    "instruction": "",
    "input": "Tìm tổng số phòng trong các căn hộ có mã cơ sở \"Phòng tập thể dục\".",
    "output": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tổng số phòng của các căn hộ trong tòa nhà với tên ngắn \"Columbus Square\".",
    "output": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\""
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu phòng trong các căn hộ trong tòa nhà với tên ngắn \"Columbus Square\"?",
    "output": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\""
  },
  {
    "instruction": "",
    "input": "Hiển thị địa chỉ của các tòa nhà có căn hộ có hơn 2 phòng tắm.",
    "output": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2"
  },
  {
    "instruction": "",
    "input": "Những tòa nhà nào có căn hộ có nhiều hơn hai phòng tắm?Cho tôi địa chỉ của các tòa nhà.",
    "output": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị các mã căn hộ và số căn hộ trong các tòa nhà được quản lý bởi \"Kyle\".",
    "output": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\""
  },
  {
    "instruction": "",
    "input": "Những mã căn hộ và số căn hộ nào mà các tòa nhà được quản lý bởi \"Kyle\" có?",
    "output": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\""
  },
  {
    "instruction": "",
    "input": "Hiển thị mã trạng thái đặt phòng và số lượng đặt phòng tương ứng.",
    "output": "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code"
  },
  {
    "instruction": "",
    "input": "Mỗi trạng thái đặt phòng có bao nhiêu đặt phòng?Liệt kê mã trạng thái đặt phòng và số lượng đặt phòng tương ứng.",
    "output": "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code"
  },
  {
    "instruction": "",
    "input": "Trả lại tất cả các số căn hộ được sắp xếp theo số lượng phòng theo thứ tự tăng dần.",
    "output": "SELECT apt_number FROM Apartments ORDER BY room_count ASC"
  },
  {
    "instruction": "",
    "input": "Sắp xếp các số căn hộ theo thứ tự tăng dần của số lượng phòng.",
    "output": "SELECT apt_number FROM Apartments ORDER BY room_count ASC"
  },
  {
    "instruction": "",
    "input": "Trả lại số căn hộ với số lượng phòng ngủ lớn nhất.",
    "output": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Số căn hộ của căn hộ với nhiều giường nhất là gì?",
    "output": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã loại căn hộ và số lượng căn hộ tương ứng được sắp xếp theo số lượng căn hộ theo thứ tự tăng dần.",
    "output": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC"
  },
  {
    "instruction": "",
    "input": "Trả lại từng mã loại căn hộ với số lượng căn hộ có loại căn hộ đó, theo thứ tự tăng dần của số lượng căn hộ.",
    "output": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC"
  },
  {
    "instruction": "",
    "input": "Hiển thị 3 mã loại căn hộ hàng đầu được sắp xếp theo số lượng trung bình của các phòng theo thứ tự giảm dần.",
    "output": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Ba loại căn hộ hàng đầu về số lượng phòng trung bình là gì?Cho tôi",
    "output": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã loại căn hộ có số lượng lớn nhất trong tổng số phòng, cùng với số lượng phòng tắm và số lượng phòng ngủ.",
    "output": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại căn hộ nào có số lượng lớn nhất trong tổng số phòng?Trả lại mã loại căn hộ, số lượng phòng tắm và số lượng phòng ngủ.",
    "output": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã căn hộ phổ biến nhất.",
    "output": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mã loại căn hộ nào xuất hiện thường xuyên nhất?",
    "output": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã căn hộ phổ biến nhất trong số các căn hộ có hơn 1 phòng tắm.",
    "output": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mã căn hộ nào là phổ biến nhất trong số các căn hộ có nhiều hơn một phòng tắm?",
    "output": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị từng mã loại căn hộ, và số lượng phòng tối đa và tối thiểu cho mỗi loại.",
    "output": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code"
  },
  {
    "instruction": "",
    "input": "Trả lại từng mã loại căn hộ cùng với số lượng phòng tối đa và tối thiểu trong mỗi loại.",
    "output": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code"
  },
  {
    "instruction": "",
    "input": "Hiển thị từng mã giới tính và số lượng khách tương ứng được sắp xếp theo số lượng theo thứ tự giảm dần.",
    "output": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC"
  },
  {
    "instruction": "",
    "input": "Sắp xếp các mã giới theo thứ tự giảm dần của số lượng khách tương ứng của họ.Trả về cả mã giới và số lượng.",
    "output": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu căn hộ không có bất kỳ cơ sở?",
    "output": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng căn hộ không có cơ sở.",
    "output": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)"
  },
  {
    "instruction": "",
    "input": "Hiển thị số căn hộ của căn hộ với các đặt phòng có mã trạng thái cả \"tạm thời\" và \"được xác nhận\"",
    "output": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\""
  },
  {
    "instruction": "",
    "input": "Căn hộ nào có đặt phòng với cả mã trạng thái \"tạm thời\" và \"được xác nhận\"?Cho tôi số căn hộ.",
    "output": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\""
  },
  {
    "instruction": "",
    "input": "Hiển thị số căn hộ của căn hộ với tình trạng đơn vị có sẵn cả 0 và 1.",
    "output": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1"
  },
  {
    "instruction": "",
    "input": "Căn hộ nào có trạng thái đơn vị có sẵn cả 0 và 1?Trả lại số căn hộ của họ.",
    "output": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trò chơi được tổ chức sau mùa 2007?",
    "output": "SELECT count(*) FROM game WHERE season  >  2007"
  },
  {
    "instruction": "",
    "input": "Liệt kê các ngày của các trò chơi theo tên nhóm nhà theo thứ tự giảm dần.",
    "output": "SELECT Date FROM game ORDER BY home_team DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê mùa giải, đội chủ nhà, đội của tất cả các trò chơi.",
    "output": "SELECT season ,  home_team ,  away_team FROM game"
  },
  {
    "instruction": "",
    "input": "Các trò chơi gia đình tối đa, tối thiểu và trung bình mỗi sân vận động được tổ chức là gì?",
    "output": "SELECT max(home_games) ,  min(home_games) ,  avg(home_games) FROM stadium"
  },
  {
    "instruction": "",
    "input": "Tỷ lệ tham dự trung bình của các sân vận động với tỷ lệ phần trăm công suất cao hơn 100%là bao nhiêu?",
    "output": "SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100"
  },
  {
    "instruction": "",
    "input": "Tên người chơi, số lượng trận đấu và nguồn thông tin cho người chơi không bị chấn thương 'vấn đề đầu gối' là gì?",
    "output": "SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Knee problem'"
  },
  {
    "instruction": "",
    "input": "Mùa giải của trò chơi khiến người chơi 'Walter Samuel' bị thương là gì?",
    "output": "SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id WHERE T2.player  =  'Walter Samuel'"
  },
  {
    "instruction": "",
    "input": "ID, điểm số và ngày của các trò chơi gây ra ít nhất hai vụ tai nạn chấn thương?",
    "output": "SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "ID và tên của sân vận động nơi xảy ra tai nạn thương tích nhiều nhất?",
    "output": "SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID và tên của sân vận động nơi xảy ra số vụ tai nạn thương tích lớn nhất.",
    "output": "SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trong mùa nào và sân vận động nào đã làm bất kỳ người chơi nào bị chấn thương 'chấn thương chân' hoặc 'vấn đề đầu gối'?",
    "output": "SELECT T1.season ,  T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.injury  =  'Foot injury' OR T3.injury  =  'Knee problem'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại nguồn thông tin khác nhau cho tai nạn thương tích?",
    "output": "SELECT count(DISTINCT SOURCE) FROM injury_accident"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trò chơi không có tai nạn chấn thương?",
    "output": "SELECT count(*) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại chấn thương khác biệt đã xảy ra sau mùa 2010?",
    "output": "SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của sân vận động nơi cả người chơi 'Walter Samuel' và cầu thủ 'Thiago Motta' bị thương.",
    "output": "SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Walter Samuel' INTERSECT SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Thiago Motta'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, tham dự trung bình, tổng số người tham dự sân vận động nơi không có tai nạn xảy ra.",
    "output": "SELECT name ,  average_attendance ,  total_attendance FROM stadium EXCEPT SELECT T2.name ,  T2.average_attendance ,  T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id"
  },
  {
    "instruction": "",
    "input": "Tên sân vận động nào chứa \"Ngân hàng\" phụ?",
    "output": "SELECT name FROM stadium WHERE name LIKE \"%Bank%\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trò chơi mỗi sân vận động được tổ chức?",
    "output": "SELECT T1.id ,  count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi tai nạn chấn thương, hãy tìm ngày của trò chơi và tên của người chơi bị thương trong trò chơi, và sắp xếp kết quả theo thứ tự giảm dần của mùa trò chơi.",
    "output": "SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên quốc gia và giải đấu.",
    "output": "SELECT T1.name ,  T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giải đấu ở Anh?",
    "output": "SELECT count(*) FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id WHERE T1.name  =  \"England\""
  },
  {
    "instruction": "",
    "input": "Trọng lượng trung bình của tất cả người chơi là bao nhiêu?",
    "output": "SELECT avg(weight) FROM Player"
  },
  {
    "instruction": "",
    "input": "Chiều cao tối đa và tối thiểu của tất cả người chơi là bao nhiêu?",
    "output": "SELECT max(weight) ,  min(weight) FROM Player"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên người chơi có xếp hạng tổng thể cao hơn mức trung bình.",
    "output": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )"
  },
  {
    "instruction": "",
    "input": "Tên của những người chơi có cách rê bóng tốt nhất là gì?",
    "output": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling  =  ( SELECT max(overall_rating) FROM Player_Attributes)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả những người chơi có điểm số cao hơn 90 và thích bàn chân phải của họ.",
    "output": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing  >  90 AND T2.preferred_foot  =  \"right\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả những người chơi chân trái có xếp hạng tổng thể từ 85 đến 90.",
    "output": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot  =  \"left\" AND T2.overall_rating  >=  85 AND T2.overall_rating  <=  90"
  },
  {
    "instruction": "",
    "input": "Xếp hạng trung bình cho người chơi chân phải và người chơi chân trái là gì?",
    "output": "SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot"
  },
  {
    "instruction": "",
    "input": "Trong tất cả những người chơi có xếp hạng tổng thể lớn hơn 80, có bao nhiêu người được chân phải và chân trái?",
    "output": "SELECT preferred_foot ,  count(*) FROM Player_Attributes WHERE overall_rating  >  80 GROUP BY preferred_foot"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các ID người chơi có chiều cao ít nhất 180cm và xếp hạng tổng thể cao hơn 85.",
    "output": "SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các ID cho người chơi chân trái có chiều cao từ 180cm đến 190cm.",
    "output": "SELECT player_api_id FROM Player WHERE height  >=  180 AND height  <=  190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot  =  \"left\""
  },
  {
    "instruction": "",
    "input": "3 người chơi hàng đầu về xếp hạng tổng thể là ai?",
    "output": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY overall_rating DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên và sinh nhật của năm người chơi hàng đầu về tiềm năng.",
    "output": "SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu buổi biểu diễn?",
    "output": "SELECT count(*) FROM performance"
  },
  {
    "instruction": "",
    "input": "Liệt kê các máy chủ của các buổi biểu diễn theo thứ tự tăng dần của sự tham dự.",
    "output": "SELECT HOST FROM performance ORDER BY Attendance ASC"
  },
  {
    "instruction": "",
    "input": "Ngày và địa điểm của các buổi biểu diễn là gì?",
    "output": "SELECT Date ,  LOCATION FROM performance"
  },
  {
    "instruction": "",
    "input": "Hiển thị sự tham dự của các buổi biểu diễn tại địa điểm \"TD Garden\" hoặc \"Trung tâm Bell\"",
    "output": "SELECT Attendance FROM performance WHERE LOCATION  =  \"TD Garden\" OR LOCATION  =  \"Bell Centre\""
  },
  {
    "instruction": "",
    "input": "Số lượng người tham dự trung bình cho các buổi biểu diễn là gì?",
    "output": "SELECT avg(Attendance) FROM performance"
  },
  {
    "instruction": "",
    "input": "Ngày của buổi biểu diễn với số lượng người tham dự cao nhất là bao nhiêu?",
    "output": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các vị trí khác nhau và số lượng biểu diễn tại mỗi địa điểm.",
    "output": "SELECT LOCATION ,  COUNT(*) FROM performance GROUP BY LOCATION"
  },
  {
    "instruction": "",
    "input": "Hiển thị vị trí phổ biến nhất của các buổi biểu diễn.",
    "output": "SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các vị trí có ít nhất hai buổi biểu diễn.",
    "output": "SELECT LOCATION FROM performance GROUP BY LOCATION HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị các địa điểm có cả hai màn trình diễn với hơn 2000 người tham dự và biểu diễn với ít hơn 1000 người tham dự.",
    "output": "SELECT LOCATION FROM performance WHERE Attendance  >  2000 INTERSECT SELECT LOCATION FROM performance WHERE Attendance  <  1000"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các thành viên và vị trí của các buổi biểu diễn họ tham dự.",
    "output": "SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các thành viên và vị trí của các buổi biểu diễn mà họ tham dự theo thứ tự theo thứ tự bảng chữ cái của họ.",
    "output": "SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T2.Name ASC"
  },
  {
    "instruction": "",
    "input": "Hiển thị ngày biểu diễn với việc tham dự các thành viên có vai trò là \"violin\".",
    "output": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID WHERE T2.Role  =  \"Violin\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các thành viên và ngày biểu diễn mà họ tham dự theo thứ tự giảm dần của các buổi biểu diễn.",
    "output": "SELECT T2.Name ,  T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T3.Attendance DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các thành viên không tham dự bất kỳ hiệu suất nào.",
    "output": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM member_attendance)"
  },
  {
    "instruction": "",
    "input": "Tìm các tòa nhà có phòng có công suất hơn 50.",
    "output": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"
  },
  {
    "instruction": "",
    "input": "Các tòa nhà riêng biệt với năng lực lớn hơn 50 là gì?",
    "output": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng phòng không có trong tòa nhà Lamberton.",
    "output": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phòng học không có ở Lamberton?",
    "output": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'"
  },
  {
    "instruction": "",
    "input": "Tên và việc xây dựng các bộ phận có ngân sách nhiều hơn ngân sách trung bình là gì?",
    "output": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
  },
  {
    "instruction": "",
    "input": "Đặt tên và xây dựng các bộ phận với ngân sách trung bình lớn hơn.",
    "output": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
  },
  {
    "instruction": "",
    "input": "Tìm số phòng của các phòng có thể ngồi 50 đến 100 sinh viên và các tòa nhà của họ.",
    "output": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100"
  },
  {
    "instruction": "",
    "input": "Các số phòng và các tòa nhà tương ứng cho các lớp học có thể chứa từ 50 đến 100 học sinh là gì?",
    "output": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100"
  },
  {
    "instruction": "",
    "input": "Tìm tên và tòa nhà của bộ phận với ngân sách cao nhất.",
    "output": "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên bộ phận và tòa nhà tương ứng cho bộ phận có ngân sách lớn nhất là gì?",
    "output": "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của học sinh có tổng số tín dụng cao nhất trong bộ phận lịch sử.",
    "output": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đặt tên của học sinh trong khoa lịch sử với nhiều tín dụng nhất.",
    "output": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tòa nhà Lamberton có bao nhiêu phòng?",
    "output": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng lớp học ở Lamberton.",
    "output": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên có cố vấn?",
    "output": "SELECT count(DISTINCT s_id) FROM advisor"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng sinh viên có cố vấn.",
    "output": "SELECT count(DISTINCT s_id) FROM advisor"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bộ phận cung cấp các khóa học?",
    "output": "SELECT count(DISTINCT dept_name) FROM course"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng phòng ban cung cấp các khóa học.",
    "output": "SELECT count(DISTINCT dept_name) FROM course"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khóa học khác nhau được cung cấp bởi bộ phận vật lý?",
    "output": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các khóa học trong bộ phận vật lý.",
    "output": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề của các khóa học có hai điều kiện tiên quyết?",
    "output": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề cho các khóa học với hai điều kiện tiên quyết là gì?",
    "output": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề, tín dụng và tên bộ phận của các khóa học có nhiều hơn một điều kiện tiên quyết?",
    "output": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tiêu đề, giá trị tín dụng và tên bộ phận cho các khóa học có nhiều hơn một điều kiện tiên quyết?",
    "output": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khóa học không có điều kiện tiên quyết?",
    "output": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các khóa học mà không có điều kiện tiên quyết.",
    "output": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các khóa học không có điều kiện tiên quyết?",
    "output": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của các khóa học không có điều kiện tiên quyết là gì?",
    "output": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người hướng dẫn khác nhau đã dạy một số khóa học?",
    "output": "SELECT COUNT (DISTINCT id) FROM teaches"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng người hướng dẫn riêng biệt đã dạy một khóa học.",
    "output": "SELECT COUNT (DISTINCT id) FROM teaches"
  },
  {
    "instruction": "",
    "input": "Tìm tổng ngân sách của bộ phận tiếp thị hoặc tài chính.",
    "output": "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'"
  },
  {
    "instruction": "",
    "input": "Tổng ngân sách của các bộ phận tiếp thị và tài chính là bao nhiêu?",
    "output": "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'"
  },
  {
    "instruction": "",
    "input": "Tìm tên bộ phận của người hướng dẫn có tên chứa 'soialon'.",
    "output": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận với một hướng dẫn có tên như 'soialon' là gì?",
    "output": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phòng có công suất dưới 50 tòa nhà Lamberton có?",
    "output": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng phòng ở Lamberton có công suất thấp hơn 50.",
    "output": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50"
  },
  {
    "instruction": "",
    "input": "Tìm tên và ngân sách của các bộ phận có ngân sách nhiều hơn ngân sách trung bình.",
    "output": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
  },
  {
    "instruction": "",
    "input": "Tên và ngân sách của các bộ phận có ngân sách lớn hơn mức trung bình là gì?",
    "output": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
  },
  {
    "instruction": "",
    "input": "Tên của người hướng dẫn trong bộ phận thống kê và kiếm được mức lương thấp nhất là gì?",
    "output": "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đặt tên của người hướng dẫn thu nhập thấp nhất trong bộ phận thống kê.",
    "output": "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề tất nhiên được cung cấp bởi cả các bộ phận thống kê và tâm lý học.",
    "output": "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'"
  },
  {
    "instruction": "",
    "input": "Tiêu đề của một khóa học được liệt kê trong cả hai bộ phận thống kê và tâm lý học là gì?",
    "output": "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề tất nhiên được cung cấp bởi các bộ phận thống kê nhưng không phải là tâm lý học.",
    "output": "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của các khóa học trong bộ phận thống kê nhưng không phải là bộ phận tâm lý?",
    "output": "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'"
  },
  {
    "instruction": "",
    "input": "Tìm ID của người hướng dẫn đã dạy một lớp vào mùa thu năm 2009 nhưng không phải vào mùa xuân năm 2010.",
    "output": "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "ID của các giảng viên đã dạy vào mùa thu năm 2009 nhưng không phải vào mùa xuân năm 2010?",
    "output": "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sinh viên đã tham gia bất kỳ lớp học nào trong những năm 2009 và 2010.",
    "output": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "Tên của các sinh viên đã tham gia các lớp học trong năm 2009 hoặc 2010 là gì?",
    "output": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "Tìm tên của 3 bộ phận hàng đầu cung cấp số lượng khóa học lớn nhất?",
    "output": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tên của 3 bộ phận với các khóa học nhất là gì?",
    "output": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tìm tên của bộ phận cung cấp tổng số tín dụng cao nhất?",
    "output": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận có nhiều tín dụng nhất là gì?",
    "output": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các khóa học được đặt hàng theo tiêu đề và tín dụng của họ.",
    "output": "SELECT title FROM course ORDER BY title ,  credits"
  },
  {
    "instruction": "",
    "input": "Đưa ra các tiêu đề của tất cả các khóa học, theo thứ tự các tiêu đề và tín dụng.",
    "output": "SELECT title FROM course ORDER BY title ,  credits"
  },
  {
    "instruction": "",
    "input": "Bộ phận nào có ngân sách thấp nhất?",
    "output": "SELECT dept_name FROM department ORDER BY budget LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đặt tên của bộ phận với ngân sách thấp nhất.",
    "output": "SELECT dept_name FROM department ORDER BY budget LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên và tòa nhà của tất cả các bộ phận được sắp xếp theo ngân sách từ lớn đến nhỏ.",
    "output": "SELECT dept_name ,  building FROM department ORDER BY budget DESC"
  },
  {
    "instruction": "",
    "input": "Tên và tòa nhà của các Deparments là gì, được sắp xếp theo ngân sách giảm dần?",
    "output": "SELECT dept_name ,  building FROM department ORDER BY budget DESC"
  },
  {
    "instruction": "",
    "input": "Ai là người hướng dẫn với mức lương cao nhất?",
    "output": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đặt tên của người hướng dẫn được trả lương cao nhất.",
    "output": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê thông tin của tất cả các giảng viên được đặt hàng theo mức lương của họ theo thứ tự tăng dần.",
    "output": "SELECT * FROM instructor ORDER BY salary"
  },
  {
    "instruction": "",
    "input": "Cung cấp tất cả thông tin liên quan đến người hướng dẫn, theo thứ tự tiền lương từ ít nhất đến lớn nhất.",
    "output": "SELECT * FROM instructor ORDER BY salary"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sinh viên và tên khoa của họ được sắp xếp theo tổng số tín dụng của họ theo thứ tự tăng dần.",
    "output": "SELECT name ,  dept_name FROM student ORDER BY tot_cred"
  },
  {
    "instruction": "",
    "input": "Tên của sinh viên và các khoa tương ứng của họ, được đặt hàng theo số lượng tín dụng từ ít nhất là lớn nhất?",
    "output": "SELECT name ,  dept_name FROM student ORDER BY tot_cred"
  },
  {
    "instruction": "",
    "input": "Liệt kê theo thứ tự chữ cái tất cả các tên khóa học và tên của người hướng dẫn của họ trong năm 2008.",
    "output": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tiêu đề và tên của người hướng dẫn của họ cho các khóa học trong năm 2008, theo thứ tự bảng chữ cái theo tiêu đề.",
    "output": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các giảng viên đang tư vấn nhiều hơn một sinh viên.",
    "output": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tên của các giảng viên tư vấn nhiều hơn một sinh viên là gì?",
    "output": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sinh viên có nhiều hơn một cố vấn?",
    "output": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tên của các sinh viên có nhiều hơn một cố vấn là gì?",
    "output": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng phòng có hơn 50 công suất cho mỗi tòa nhà.",
    "output": "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phòng trong mỗi tòa nhà có công suất trên 50?",
    "output": "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building"
  },
  {
    "instruction": "",
    "input": "Tìm công suất tối đa và trung bình giữa các phòng trong mỗi tòa nhà.",
    "output": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building"
  },
  {
    "instruction": "",
    "input": "Công suất lớn nhất và trung bình cho các phòng trong mỗi tòa nhà là gì?",
    "output": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề của khóa học được cung cấp bởi nhiều bộ phận.",
    "output": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của các khóa học được cung cấp trong nhiều bộ phận là gì?",
    "output": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số tín dụng của các khóa học được cung cấp bởi bộ phận khác nhau.",
    "output": "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khoản tín dụng được cung cấp bởi mỗi bộ phận?",
    "output": "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name"
  },
  {
    "instruction": "",
    "input": "Tìm mức lương tối thiểu cho các bộ phận có mức lương trung bình cao hơn mức thanh toán trung bình của tất cả các giảng viên.",
    "output": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)"
  },
  {
    "instruction": "",
    "input": "Mức lương thấp nhất trong các phòng ban có mức lương trung bình lớn hơn mức trung bình chung.",
    "output": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các khóa học được cung cấp trong mỗi học kỳ và năm.",
    "output": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khóa học được cung cấp trong mỗi học kỳ và năm?",
    "output": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR"
  },
  {
    "instruction": "",
    "input": "Tìm năm cung cấp số lượng khóa học lớn nhất.",
    "output": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Năm nào có số lượng khóa học lớn nhất?",
    "output": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm năm và học kỳ khi cung cấp số lượng lớn nhất các khóa học.",
    "output": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Năm và học kỳ với các khóa học nhất là gì?",
    "output": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khoa có số lượng sinh viên cao nhất?",
    "output": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận với số lượng đăng ký cao nhất là gì?",
    "output": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số sinh viên trong mỗi khoa.",
    "output": "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên trong mỗi khoa?",
    "output": "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name"
  },
  {
    "instruction": "",
    "input": "Tìm học kỳ và năm có số lượng sinh viên ít nhất tham gia bất kỳ lớp học nào.",
    "output": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Học kỳ và năm nào có ít sinh viên nhất?",
    "output": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của người hướng dẫn tư vấn của tất cả các sinh viên từ Khoa Lịch sử là gì?",
    "output": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'"
  },
  {
    "instruction": "",
    "input": "Đưa ra ID của người hướng dẫn tư vấn cho sinh viên trong khoa lịch sử.",
    "output": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'"
  },
  {
    "instruction": "",
    "input": "Tìm tên và tiền lương của các giảng viên là cố vấn của bất kỳ sinh viên nào từ Khoa Lịch sử?",
    "output": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'"
  },
  {
    "instruction": "",
    "input": "Tên và tiền lương của người hướng dẫn tư vấn cho sinh viên trong khoa lịch sử là gì?",
    "output": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'"
  },
  {
    "instruction": "",
    "input": "Tìm ID của các khóa học không có điều kiện tiên quyết?",
    "output": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"
  },
  {
    "instruction": "",
    "input": "ID của các khóa học không có điều kiện tiên quyết là gì?",
    "output": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các khóa học không có điều kiện tiên quyết?",
    "output": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
  },
  {
    "instruction": "",
    "input": "Tên của các khóa học không có điều kiện tiên quyết là gì?",
    "output": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
  },
  {
    "instruction": "",
    "input": "Tiêu đề của lớp học tiên quyết của khóa học tài chính quốc tế là gì?",
    "output": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')"
  },
  {
    "instruction": "",
    "input": "Đưa ra tiêu đề của điều kiện tiên quyết cho khóa học Tài chính quốc tế.",
    "output": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề tất nhiên là điều kiện tiên quyết là hình học khác biệt khóa học.",
    "output": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')"
  },
  {
    "instruction": "",
    "input": "Tiêu đề của khóa học với hình học khác biệt là điều kiện tiên quyết là gì?",
    "output": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những sinh viên đã tham gia bất kỳ khóa học nào trong học kỳ mùa thu năm 2003.",
    "output": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)"
  },
  {
    "instruction": "",
    "input": "Tên của các sinh viên đã tham gia một khóa học vào mùa thu năm 2003 là gì?",
    "output": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)"
  },
  {
    "instruction": "",
    "input": "Tiêu đề của khóa học được cung cấp tại Building Chandler trong học kỳ mùa thu năm 2010 là gì?",
    "output": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "Đưa ra tiêu đề của khóa học được cung cấp trong Chandler trong mùa thu năm 2010.",
    "output": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các giảng viên đã dạy khóa học lập trình C trước đây.",
    "output": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'"
  },
  {
    "instruction": "",
    "input": "Tên của các giảng viên đã dạy các khóa học lập trình C là gì?",
    "output": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'"
  },
  {
    "instruction": "",
    "input": "Tìm tên và tiền lương của các giảng viên là cố vấn của các sinh viên từ khoa toán.",
    "output": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'"
  },
  {
    "instruction": "",
    "input": "Tên và tiền lương của các giảng viên tư vấn cho học sinh trong khoa toán?",
    "output": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các giảng viên là cố vấn của các sinh viên từ khoa toán, và sắp xếp kết quả theo tổng số tín dụng của sinh viên.",
    "output": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các giảng viên tư vấn cho học sinh trong việc khởi hành toán được sắp xếp theo tổng số tín dụng của học sinh.",
    "output": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred"
  },
  {
    "instruction": "",
    "input": "Tiêu đề khóa học của điều kiện tiên quyết tất nhiên là điện toán di động là gì?",
    "output": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')"
  },
  {
    "instruction": "",
    "input": "Tiêu đề của khóa học là điều kiện tiên quyết cho điện toán di động là gì?",
    "output": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người hướng dẫn là cố vấn của học sinh có số lượng tín dụng cao nhất.",
    "output": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của người hướng dẫn tư vấn cho sinh viên với số lượng lớn nhất trong tổng số tín dụng là gì?",
    "output": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những người hướng dẫn không dạy bất kỳ khóa học nào?",
    "output": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)"
  },
  {
    "instruction": "",
    "input": "Tên của những người hướng dẫn không dạy là gì?",
    "output": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)"
  },
  {
    "instruction": "",
    "input": "Tìm ID của các giảng viên không dạy bất kỳ khóa học nào?",
    "output": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches"
  },
  {
    "instruction": "",
    "input": "ID của các giảng viên không dạy là gì?",
    "output": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các giảng viên, những người không có bất kỳ khóa học nào trong bất kỳ học kỳ mùa xuân nào.",
    "output": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')"
  },
  {
    "instruction": "",
    "input": "Tên của các giảng viên không dạy các khóa học vào mùa xuân là gì?",
    "output": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')"
  },
  {
    "instruction": "",
    "input": "Tìm tên của bộ phận có mức lương trung bình cao nhất của các giáo sư.",
    "output": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Bộ phận nào có mức lương hướng dẫn trung bình cao nhất?",
    "output": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng và mức lương trung bình của tất cả các giảng viên trong bộ phận có ngân sách cao nhất.",
    "output": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người hướng dẫn trong bộ phận có ngân sách cao nhất, và mức lương trung bình của họ là bao nhiêu?",
    "output": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tiêu đề và tín dụng của khóa học được dạy trong lớp học lớn nhất (với công suất cao nhất) là gì?",
    "output": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)"
  },
  {
    "instruction": "",
    "input": "Đưa ra tiêu đề và tín dụng cho khóa học được dạy trong lớp học với khả năng lớn nhất.",
    "output": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những sinh viên không học bất kỳ khóa học nào từ khoa sinh học.",
    "output": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')"
  },
  {
    "instruction": "",
    "input": "Tên của những sinh viên chưa tham gia các khóa học sinh học là gì?",
    "output": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số sinh viên và tổng số người hướng dẫn cho mỗi bộ phận.",
    "output": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên và người hướng dẫn trong mỗi khoa?",
    "output": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sinh viên đã tham gia khóa học tiên quyết của khóa học với tiêu đề Tài chính quốc tế.",
    "output": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance')"
  },
  {
    "instruction": "",
    "input": "Tên của những sinh viên đã lấy điều kiện tiên quyết cho khóa học tài chính quốc tế là gì?",
    "output": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance')"
  },
  {
    "instruction": "",
    "input": "Tìm tên và tiền lương của người hướng dẫn có mức lương dưới mức lương trung bình của các giảng viên trong khoa vật lý.",
    "output": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')"
  },
  {
    "instruction": "",
    "input": "Tên và tiền lương cho người hướng dẫn kiếm được ít hơn mức lương trung bình của người hướng dẫn trong bộ phận vật lý?",
    "output": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sinh viên đã tham gia một số khóa học được cung cấp bởi bộ phận thống kê.",
    "output": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'"
  },
  {
    "instruction": "",
    "input": "Tên của các sinh viên đã tham gia các khóa học thống kê là gì?",
    "output": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'"
  },
  {
    "instruction": "",
    "input": "Tìm tòa nhà, số phòng, học kỳ và năm của tất cả các khóa học được cung cấp bởi bộ phận tâm lý được sắp xếp theo tiêu đề khóa học.",
    "output": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title"
  },
  {
    "instruction": "",
    "input": "Tòa nhà, số phòng, học kỳ và năm của các khóa học trong khoa tâm lý học, được sắp xếp bằng tiêu đề khóa học?",
    "output": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các giảng viên trong Khoa Khoa học Máy tính",
    "output": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các giảng viên trong comp.Sci.phòng?",
    "output": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các giảng viên trong máy tính.Khoa học.Bộ phận có lương> 80000.",
    "output": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000"
  },
  {
    "instruction": "",
    "input": "Tên của những người hướng dẫn trong comp.Sci.Bộ phận kiếm được hơn 80000?",
    "output": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các giảng viên đã dạy một số khóa học và khóa học_id.",
    "output": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các giảng viên đã dạy một khóa học, cũng như ID khóa học tương ứng là gì?",
    "output": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các giảng viên trong bộ phận nghệ thuật đã dạy một số khóa học và khóa học_id.",
    "output": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'"
  },
  {
    "instruction": "",
    "input": "Tên của các giảng viên nghệ thuật đã dạy một khóa học là gì và ID khóa học tương ứng là gì?",
    "output": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các giáo viên hướng dẫn có tên bao gồm cả con Dar Dar.",
    "output": "SELECT name FROM instructor WHERE name LIKE '%dar%'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các giảng viên có tên bao gồm \"DAR\" là gì?",
    "output": "SELECT name FROM instructor WHERE name LIKE '%dar%'"
  },
  {
    "instruction": "",
    "input": "Liệt kê theo thứ tự chữ cái tên của tất cả các giảng viên riêng biệt.",
    "output": "SELECT DISTINCT name FROM  instructor ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên riêng biệt của người hướng dẫn, được đặt hàng theo tên.",
    "output": "SELECT DISTINCT name FROM  instructor ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Tìm các khóa học diễn ra vào mùa thu năm 2009 hoặc vào mùa xuân năm 2010.",
    "output": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "ID ID cho các khóa học vào mùa thu năm 2009 hoặc mùa xuân năm 2010 là gì?",
    "output": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "Tìm các khóa học diễn ra vào mùa thu năm 2009 và vào mùa xuân năm 2010.",
    "output": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "ID ID cho các khóa học được cung cấp trong cả mùa thu năm 2009 và mùa xuân năm 2010 là gì?",
    "output": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "Tìm các khóa học diễn ra vào mùa thu năm 2009 nhưng không phải vào mùa xuân năm 2010.",
    "output": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "ID của các khóa học được cung cấp vào mùa thu năm 2009 nhưng không phải vào mùa xuân năm 2010?",
    "output": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "Tìm mức lương của tất cả các giảng viên riêng biệt ít hơn mức lương lớn nhất.",
    "output": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)"
  },
  {
    "instruction": "",
    "input": "Mức lương riêng biệt của tất cả các giảng viên kiếm được ít hơn mức lương tối đa là gì?",
    "output": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số người hướng dẫn dạy một khóa học trong học kỳ mùa xuân 2010.",
    "output": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người hướng dẫn dạy một khóa học vào mùa xuân năm 2010?",
    "output": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "Tìm tên và mức lương trung bình của tất cả các bộ phận có mức lương trung bình lớn hơn 42000.",
    "output": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000"
  },
  {
    "instruction": "",
    "input": "Tên và mức lương trung bình cho các phòng ban có mức lương trung bình cao hơn 42000 là gì?",
    "output": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người hướng dẫn với mức lương lớn hơn một số (ít nhất một) người hướng dẫn trong khoa sinh học.",
    "output": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')"
  },
  {
    "instruction": "",
    "input": "Tên của các giảng viên kiếm được nhiều hơn ít nhất một người hướng dẫn từ khoa sinh học là gì?",
    "output": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các giảng viên có mức lương lớn hơn mức lương của tất cả các giảng viên trong Khoa Sinh học.",
    "output": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các giảng viên có mức lương cao hơn bất kỳ người hướng dẫn nào trong khoa sinh học là gì?",
    "output": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cuộc tranh luận?",
    "output": "SELECT count(*) FROM debate"
  },
  {
    "instruction": "",
    "input": "Liệt kê các địa điểm của các cuộc tranh luận theo thứ tự tăng dần của số lượng khán giả.",
    "output": "SELECT Venue FROM debate ORDER BY Num_of_Audience ASC"
  },
  {
    "instruction": "",
    "input": "Ngày và địa điểm của mỗi cuộc tranh luận là gì?",
    "output": "SELECT Date ,  Venue FROM debate"
  },
  {
    "instruction": "",
    "input": "Liệt kê các ngày tranh luận với số lượng khán giả lớn hơn 150",
    "output": "SELECT Date FROM debate WHERE Num_of_Audience  >  150"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của những người ở độ tuổi 35 hoặc 36.",
    "output": "SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36"
  },
  {
    "instruction": "",
    "input": "Bữa tiệc của những người trẻ nhất là gì?",
    "output": "SELECT Party FROM people ORDER BY Age ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các bên khác nhau của mọi người cùng với số người trong mỗi bên.",
    "output": "SELECT Party ,  COUNT(*) FROM people GROUP BY Party"
  },
  {
    "instruction": "",
    "input": "Hiển thị bữa tiệc có nhiều người nhất.",
    "output": "SELECT Party FROM people GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các địa điểm khác biệt của các cuộc tranh luận",
    "output": "SELECT DISTINCT Venue FROM debate"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của con người, ngày và địa điểm của các cuộc tranh luận mà họ đang ở phía khẳng định.",
    "output": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của con người, ngày và địa điểm của các cuộc tranh luận mà họ đang ở phía tiêu cực, được đặt hàng theo thứ tự theo thứ tự chữ cái.",
    "output": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Negative  =  T3.People_ID ORDER BY T3.Name ASC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của những người đứng về khía cạnh khẳng định của các cuộc tranh luận với số lượng khán giả lớn hơn 200.",
    "output": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của mọi người và số lần họ đã ở khía cạnh khẳng định của các cuộc tranh luận.",
    "output": "SELECT T2.Name ,  COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của những người đã ở khía cạnh tiêu cực của các cuộc tranh luận ít nhất hai lần.",
    "output": "SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative  =  T2.People_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của những người chưa từng ở khía cạnh khẳng định của các cuộc tranh luận.",
    "output": "SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các khách hàng theo thứ tự bảng chữ cái.",
    "output": "SELECT customer_details FROM customers ORDER BY customer_details"
  },
  {
    "instruction": "",
    "input": "Sắp xếp tên khách hàng theo thứ tự bảng chữ cái.",
    "output": "SELECT customer_details FROM customers ORDER BY customer_details"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các mã loại chính sách được liên kết với khách hàng \"Dayana Robel\"",
    "output": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"Dayana Robel\""
  },
  {
    "instruction": "",
    "input": "Các mã loại của các chính sách được sử dụng bởi khách hàng \"Dayana Robel\" là gì?",
    "output": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"Dayana Robel\""
  },
  {
    "instruction": "",
    "input": "Loại chính sách nào được sử dụng thường xuyên nhất?Cho tôi mã loại chính sách.",
    "output": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm loại mã của chính sách được sử dụng thường xuyên nhất.",
    "output": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các loại chính sách được sử dụng bởi hơn 2 khách hàng.",
    "output": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Những loại chính sách nào được chọn bởi hơn 2 khách hàng?Cho tôi mã loại chính sách.",
    "output": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số tiền và số tiền trung bình được trả trong các tiêu đề yêu cầu bồi thường.",
    "output": "SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền và số tiền trung bình được trả trong các tiêu đề yêu cầu bồi thường là bao nhiêu?",
    "output": "SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số tiền được yêu cầu trong tài liệu được tạo gần đây nhất.",
    "output": "SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền đã được yêu cầu trong tài liệu được tạo gần đây nhất?",
    "output": "SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng đã đưa ra số lượng yêu cầu lớn nhất trong một yêu cầu duy nhất là gì?",
    "output": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)"
  },
  {
    "instruction": "",
    "input": "Khách hàng nào đã đưa ra số lượng yêu cầu lớn nhất trong một yêu cầu duy nhất?Trả lại chi tiết khách hàng.",
    "output": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng đã thực hiện số tiền thanh toán tối thiểu trong một yêu cầu?",
    "output": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)"
  },
  {
    "instruction": "",
    "input": "Khách hàng nào đã đưa ra số lượng yêu cầu nhỏ nhất trong một yêu cầu?Trả lại chi tiết khách hàng.",
    "output": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng không có chính sách liên quan.",
    "output": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id"
  },
  {
    "instruction": "",
    "input": "Tên của những khách hàng không có chính sách nào là gì?",
    "output": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu giai đoạn xử lý yêu cầu?",
    "output": "SELECT count(*) FROM claims_processing_stages"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các giai đoạn riêng biệt trong xử lý yêu cầu.",
    "output": "SELECT count(*) FROM claims_processing_stages"
  },
  {
    "instruction": "",
    "input": "Tên của giai đoạn xử lý yêu cầu mà hầu hết các khiếu nại đều được thực hiện là gì?",
    "output": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Giai đoạn xử lý yêu cầu nào có nhiều yêu cầu nhất?Hiển thị tên trạng thái yêu cầu.",
    "output": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng có tên chứa \"Diana\".",
    "output": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\""
  },
  {
    "instruction": "",
    "input": "Những khách hàng nào có \"Diana\" trong tên của họ?Trả lại chi tiết khách hàng.",
    "output": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các khách hàng có chính sách phó.",
    "output": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\""
  },
  {
    "instruction": "",
    "input": "Những khách hàng nào có chính sách bảo hiểm với mã loại \"phó\"?Cung cấp cho tôi chi tiết khách hàng.",
    "output": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng có chính sách phó hoặc chính sách đồng phục.",
    "output": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\" OR t1.policy_type_code  =  \"Uniform\""
  },
  {
    "instruction": "",
    "input": "Khách hàng nào có chính sách bảo hiểm với mã loại \"Phó\" hoặc \"Đồng phục\"?Trả lại chi tiết khách hàng.",
    "output": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\" OR t1.policy_type_code  =  \"Uniform\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các khách hàng và nhân viên.",
    "output": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng và nhân viên là gì?",
    "output": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng hồ sơ của từng loại chính sách và mã loại của nó.",
    "output": "SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi loại chính sách, hãy trả lại mã loại và số lượng của nó trong hồ sơ.",
    "output": "SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng đã tham gia vào các chính sách nhất.",
    "output": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Khách hàng nào có nhiều chính sách nhất?Cung cấp cho tôi chi tiết khách hàng.",
    "output": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mô tả về trạng thái yêu cầu \"Mở\" là gì?",
    "output": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\""
  },
  {
    "instruction": "",
    "input": "Tìm mô tả về trạng thái yêu cầu \"Mở\".",
    "output": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mã kết quả yêu cầu riêng biệt?",
    "output": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng mã kết quả yêu cầu riêng biệt.",
    "output": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing"
  },
  {
    "instruction": "",
    "input": "Khách hàng nào được liên kết với chính sách mới nhất?",
    "output": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)"
  },
  {
    "instruction": "",
    "input": "Tìm khách hàng đã bắt đầu một chính sách gần đây nhất.",
    "output": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng tài khoản.",
    "output": "SELECT count(*) FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài khoản?",
    "output": "SELECT count(*) FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng đã mở một tài khoản?",
    "output": "SELECT count(DISTINCT customer_id) FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng khách hàng có tài khoản.",
    "output": "SELECT count(DISTINCT customer_id) FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID, ngày tài khoản được mở, tên tài khoản và chi tiết tài khoản khác cho tất cả các tài khoản.",
    "output": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts"
  },
  {
    "instruction": "",
    "input": "ID, ngày được mở, tên và các chi tiết khác cho tất cả các tài khoản là gì?",
    "output": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID, tên tài khoản và các chi tiết tài khoản khác cho tất cả các tài khoản của khách hàng có tên 'Meaghan'.",
    "output": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'"
  },
  {
    "instruction": "",
    "input": "ID, tên, ngày mở và các chi tiết khác cho các tài khoản tương ứng với khách hàng có tên \"Meaghan\" là gì?",
    "output": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên tài khoản và chi tiết tài khoản khác cho tất cả các tài khoản của khách hàng có tên đầu tiên Meaghan và họ Keeling.",
    "output": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\""
  },
  {
    "instruction": "",
    "input": "Tên và các chi tiết khác cho các tài khoản tương ứng với khách hàng tên là Mea Afghanistan Keeling là gì?",
    "output": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và họ cho khách hàng có tên tài khoản 900.",
    "output": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\""
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của khách hàng với tên tài khoản 900 là gì?",
    "output": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng không có tài khoản?",
    "output": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng khách hàng không có tài khoản.",
    "output": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, họ và số điện thoại duy nhất cho tất cả khách hàng với bất kỳ tài khoản nào.",
    "output": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên, tên và số điện thoại riêng biệt cho khách hàng có tài khoản là gì?",
    "output": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID khách hàng không có tài khoản.",
    "output": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts"
  },
  {
    "instruction": "",
    "input": "ID khách hàng cho khách hàng không có tài khoản là gì?",
    "output": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Mỗi khách hàng có bao nhiêu tài khoản?Liệt kê số và ID khách hàng.",
    "output": "SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng tài khoản tương ứng với mỗi ID khách hàng.",
    "output": "SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id"
  },
  {
    "instruction": "",
    "input": "ID khách hàng là gì, tên đầu tiên và tên cuối cùng với hầu hết các tài khoản.",
    "output": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về ID và tên đầy đủ của khách hàng với nhiều tài khoản nhất.",
    "output": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID, họ và họ cho tất cả khách hàng và số lượng tài khoản.",
    "output": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id"
  },
  {
    "instruction": "",
    "input": "Các tên và ID đầy đủ cho tất cả khách hàng là gì và mỗi tài khoản có bao nhiêu tài khoản?",
    "output": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và ID cho tất cả khách hàng có ít nhất 2 tài khoản.",
    "output": "SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tên và ID đầu tiên cho khách hàng có hai hoặc nhiều tài khoản là gì?",
    "output": "SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng khách hàng.",
    "output": "SELECT count(*) FROM Customers"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng khách hàng.",
    "output": "SELECT count(*) FROM Customers"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng khách hàng cho mỗi giới tính.",
    "output": "SELECT gender ,  count(*) FROM Customers GROUP BY gender"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng ở mỗi giới tính?",
    "output": "SELECT gender ,  count(*) FROM Customers GROUP BY gender"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu giao dịch?",
    "output": "SELECT count(*) FROM Financial_transactions"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng giao dịch.",
    "output": "SELECT count(*) FROM Financial_transactions"
  },
  {
    "instruction": "",
    "input": "Mỗi tài khoản có bao nhiêu giao dịch?Hiển thị số và ID tài khoản.",
    "output": "SELECT count(*) ,  account_id FROM Financial_transactions"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng giao dịch tài chính tương ứng với mỗi ID tài khoản.",
    "output": "SELECT count(*) ,  account_id FROM Financial_transactions"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giao dịch mà tài khoản có tên 337 có?",
    "output": "SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  \"337\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng giao dịch tài chính mà tài khoản có tên 337 có.",
    "output": "SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  \"337\""
  },
  {
    "instruction": "",
    "input": "Trung bình, tối thiểu, tối đa và tổng số tiền giao dịch là bao nhiêu?",
    "output": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions"
  },
  {
    "instruction": "",
    "input": "Trả lại trung bình, tối thiểu, tối đa và tổng số tiền giao dịch.",
    "output": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID cho tất cả các giao dịch có số tiền lớn hơn mức trung bình.",
    "output": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)"
  },
  {
    "instruction": "",
    "input": "ID cho các giao dịch có số tiền lớn hơn số lượng giao dịch trung bình là gì?",
    "output": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các loại giao dịch và tổng số lượng giao dịch.",
    "output": "SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền giao dịch cho mỗi loại giao dịch là gì?",
    "output": "SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên tài khoản, ID và số lượng giao dịch cho mỗi tài khoản.",
    "output": "SELECT T2.account_name ,  T1.account_id ,  count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id"
  },
  {
    "instruction": "",
    "input": "Trả về tên và ID của mỗi tài khoản, cũng như số lượng giao dịch.",
    "output": "SELECT T2.account_name ,  T1.account_id ,  count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID tài khoản với hầu hết các giao dịch.",
    "output": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của tài khoản với nhiều giao dịch nhất là gì?",
    "output": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID tài khoản và tên với ít nhất 4 giao dịch.",
    "output": "SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4"
  },
  {
    "instruction": "",
    "input": "ID và tên của tài khoản có 4 giao dịch trở lên là gì?",
    "output": "SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các kích cỡ sản phẩm.",
    "output": "SELECT DISTINCT product_size FROM Products"
  },
  {
    "instruction": "",
    "input": "Các kích thước sản phẩm khác nhau là gì?",
    "output": "SELECT DISTINCT product_size FROM Products"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các màu sản phẩm.",
    "output": "SELECT DISTINCT product_color FROM Products"
  },
  {
    "instruction": "",
    "input": "Các màu sản phẩm khác nhau là gì?",
    "output": "SELECT DISTINCT product_color FROM Products"
  },
  {
    "instruction": "",
    "input": "Hiển thị số hóa đơn và số lượng giao dịch cho mỗi hóa đơn.",
    "output": "SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giao dịch tương ứng với mỗi số hóa đơn?",
    "output": "SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number"
  },
  {
    "instruction": "",
    "input": "Số hóa đơn và ngày hóa đơn cho hóa đơn với hầu hết các giao dịch là gì?",
    "output": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Số hóa đơn và ngày hóa đơn tương ứng với hóa đơn với số lượng giao dịch lớn nhất là gì?",
    "output": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu hóa đơn?",
    "output": "SELECT count(*) FROM Invoices"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng hóa đơn.",
    "output": "SELECT count(*) FROM Invoices"
  },
  {
    "instruction": "",
    "input": "Hiển thị ngày hóa đơn và đặt hàng ID và chi tiết cho tất cả các hóa đơn.",
    "output": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id"
  },
  {
    "instruction": "",
    "input": "Các ngày hóa đơn, ID đặt hàng và chi tiết đặt hàng cho tất cả các hóa đơn là gì?",
    "output": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID thứ tự và số lượng hóa đơn cho mỗi đơn hàng.",
    "output": "SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu hóa đơn tương ứng với mỗi ID đơn hàng?",
    "output": "SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id"
  },
  {
    "instruction": "",
    "input": "ID đặt hàng và chi tiết đơn hàng cho đơn hàng là gì hơn hai hóa đơn.",
    "output": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Trả về ID đặt hàng và chi tiết cho đơn đặt hàng với hai hoặc nhiều hóa đơn.",
    "output": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Họ, ID và số điện thoại của khách hàng với hầu hết các đơn đặt hàng là gì?",
    "output": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại họ, ID và số điện thoại của khách hàng đã thực hiện số lượng đơn đặt hàng lớn nhất.",
    "output": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên sản phẩm mà không cần đặt hàng.",
    "output": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id"
  },
  {
    "instruction": "",
    "input": "Tên của các sản phẩm chưa bao giờ được đặt hàng là gì?",
    "output": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên sản phẩm và tổng số lượng được đặt hàng cho mỗi tên sản phẩm.",
    "output": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name"
  },
  {
    "instruction": "",
    "input": "Các tên sản phẩm khác nhau là gì và tổng số lượng được đặt hàng cho mỗi sản phẩm là gì?",
    "output": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID thứ tự và số lượng mục trong mỗi đơn hàng.",
    "output": "SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mục đặt hàng tương ứng với mỗi ID đặt hàng?",
    "output": "SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID sản phẩm và số lượng đơn đặt hàng duy nhất có chứa mỗi sản phẩm.",
    "output": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ID đơn hàng riêng biệt tương ứng với mỗi sản phẩm?",
    "output": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả tên sản phẩm và số lượng khách hàng có đơn đặt hàng trên mỗi sản phẩm.",
    "output": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name"
  },
  {
    "instruction": "",
    "input": "Tên của các sản phẩm khác nhau, cũng như số lượng khách hàng đã đặt hàng mỗi sản phẩm.",
    "output": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID đặt hàng và số lượng sản phẩm trong mỗi đơn hàng.",
    "output": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm khác nhau tương ứng với mỗi ID đơn hàng?",
    "output": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID thứ tự và tổng số lượng trong mỗi đơn hàng.",
    "output": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id"
  },
  {
    "instruction": "",
    "input": "Cung cấp ID đặt hàng cho tất cả các đơn đặt hàng, cũng như tổng số lượng sản phẩm trong mỗi đơn vị.",
    "output": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm không được bao gồm trong bất kỳ đơn đặt hàng?",
    "output": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng sản phẩm không bao giờ được đặt hàng.",
    "output": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhà thờ được mở trước năm 1850?",
    "output": "SELECT count(*) FROM Church WHERE Open_Date  <  1850"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, ngày mở và người tổ chức cho tất cả các nhà thờ.",
    "output": "SELECT name ,  open_date ,  organized_by FROM Church"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên nhà thờ theo thứ tự giảm dần của ngày mở cửa.",
    "output": "SELECT name FROM church ORDER BY open_date DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị năm khai mạc trong đó ít nhất hai nhà thờ mở.",
    "output": "SELECT open_date FROM church GROUP BY open_date HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị nhà tổ chức và tên cho các nhà thờ mở từ năm 1830 đến 1840.",
    "output": "SELECT organized_by ,  name FROM church WHERE open_date BETWEEN 1830 AND 1840"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các năm khai mạc và số lượng các nhà thờ đã mở trong năm đó.",
    "output": "SELECT open_date ,  count(*) FROM church GROUP BY open_date"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và năm mở cửa cho ba nhà thờ đã mở gần đây nhất.",
    "output": "SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người nữ trên 30 tuổi trong hồ sơ của chúng tôi?",
    "output": "SELECT count(*) FROM people WHERE is_male  =  'F' AND age  >  30"
  },
  {
    "instruction": "",
    "input": "Hiển thị đất nước nơi những người trên 30 tuổi và dưới 25 tuổi đến từ.",
    "output": "SELECT country FROM people WHERE age  <  25 INTERSECT SELECT country FROM people WHERE age  >  30"
  },
  {
    "instruction": "",
    "input": "Hiển thị độ tuổi tối thiểu, tối đa và trung bình cho tất cả mọi người.",
    "output": "SELECT min(age) ,  max(age) ,  avg(age) FROM people"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và quốc gia cho tất cả những người có tuổi nhỏ hơn mức trung bình.",
    "output": "SELECT name ,  country FROM people WHERE age  <  (SELECT avg(age) FROM people)"
  },
  {
    "instruction": "",
    "input": "Hiển thị cặp tên nam và nữ trong tất cả các đám cưới sau năm 2014",
    "output": "SELECT T2.name ,  T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id WHERE T1.year  >  2014"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và tuổi cho tất cả những người nam không có đám cưới.",
    "output": "SELECT name ,  age FROM people WHERE is_male  =  'T' AND people_id NOT IN (SELECT male_id FROM wedding)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên nhà thờ ngoại trừ những người đã có một đám cưới vào năm 2015.",
    "output": "SELECT name FROM church EXCEPT SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id WHERE T2.year  =  2015"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên nhà thờ đã tổ chức ít nhất hai đám cưới.",
    "output": "SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id GROUP BY T1.church_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên cho tất cả phụ nữ từ Canada có một đám cưới vào năm 2016.",
    "output": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id  =  T2.people_id WHERE T1.year  =  2016 AND T2.is_male  =  'F' AND T2.country  =  'Canada'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu đám cưới trong năm 2016?",
    "output": "SELECT count(*) FROM wedding WHERE YEAR  =  2016"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên nhà thờ cho đám cưới của tất cả những người trên 30 tuổi.",
    "output": "SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id JOIN church AS T4 ON T4.church_id  =  T1.church_id WHERE T2.age  >  30 OR T3.age  >  30"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các quốc gia và số người từ mỗi quốc gia.",
    "output": "SELECT country ,  count(*) FROM people GROUP BY country"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhà thờ có một đám cưới trong năm 2016?",
    "output": "SELECT COUNT (DISTINCT church_id) FROM wedding WHERE YEAR  =  2016"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu nghệ sĩ?",
    "output": "SELECT count(*) FROM artist"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng nghệ sĩ.",
    "output": "SELECT count(*) FROM artist"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả tên nghệ sĩ, tuổi và quốc gia được đặt hàng bởi họ đã tham gia.",
    "output": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join"
  },
  {
    "instruction": "",
    "input": "Tên, lứa tuổi và các quốc gia của các nghệ sĩ, được sắp xếp theo năm họ tham gia là gì?",
    "output": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join"
  },
  {
    "instruction": "",
    "input": "Tất cả các quốc gia riêng biệt cho các nghệ sĩ là gì?",
    "output": "SELECT DISTINCT country FROM artist"
  },
  {
    "instruction": "",
    "input": "Trả lại các quốc gia khác nhau cho các nghệ sĩ.",
    "output": "SELECT DISTINCT country FROM artist"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên nghệ sĩ và năm tham gia, những người không đến từ Hoa Kỳ.",
    "output": "SELECT name ,  year_join FROM artist WHERE country != 'United States'"
  },
  {
    "instruction": "",
    "input": "Những cái tên và năm tham gia cho các nghệ sĩ không có đất nước \"Hoa Kỳ\" là gì?",
    "output": "SELECT name ,  year_join FROM artist WHERE country != 'United States'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nghệ sĩ trên 46 tuổi và tham gia sau năm 1990?",
    "output": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng nghệ sĩ lớn tuổi hơn 46 và tham gia sau năm 1990.",
    "output": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình và tối thiểu của tất cả các nghệ sĩ từ Hoa Kỳ là gì.",
    "output": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'"
  },
  {
    "instruction": "",
    "input": "Trả lại độ tuổi trung bình và tối thiểu trên các nghệ sĩ từ Hoa Kỳ.",
    "output": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'"
  },
  {
    "instruction": "",
    "input": "Tên của nghệ sĩ đã tham gia mới nhất là gì?",
    "output": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của nghệ sĩ có năm tham gia mới nhất.",
    "output": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu triển lãm trong năm 2005 hoặc sau đó?",
    "output": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng triển lãm xảy ra trong hoặc sau năm 2005.",
    "output": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005"
  },
  {
    "instruction": "",
    "input": "Hiển thị chủ đề và năm cho tất cả các triển lãm với giá vé thấp hơn 15.",
    "output": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15"
  },
  {
    "instruction": "",
    "input": "Chủ đề và năm cho tất cả các triển lãm có giá vé dưới 15 là gì?",
    "output": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên nghệ sĩ và số lượng triển lãm cho mỗi nghệ sĩ.",
    "output": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id"
  },
  {
    "instruction": "",
    "input": "Mỗi nghệ sĩ đã có bao nhiêu triển lãm?",
    "output": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id"
  },
  {
    "instruction": "",
    "input": "Tên và quốc gia cho nghệ sĩ có số lượng triển lãm là gì?",
    "output": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên và đất nước tương ứng với nghệ sĩ đã có nhiều triển lãm nhất.",
    "output": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên cho các nghệ sĩ mà không có bất kỳ triển lãm.",
    "output": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)"
  },
  {
    "instruction": "",
    "input": "Tên của các nghệ sĩ chưa có triển lãm là gì?",
    "output": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)"
  },
  {
    "instruction": "",
    "input": "Chủ đề và tên nghệ sĩ cho triển lãm với giá vé cao hơn mức trung bình là gì?",
    "output": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các nghệ sĩ và các chủ đề của triển lãm của họ có giá vé cao hơn mức trung bình.",
    "output": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)"
  },
  {
    "instruction": "",
    "input": "Hiển thị giá vé trung bình, tối thiểu và tối đa cho triển lãm cho tất cả các năm trước năm 2009.",
    "output": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009"
  },
  {
    "instruction": "",
    "input": "Giá vé trung bình, tối thiểu và tối đa cho các triển lãm đã xảy ra trước năm 2009 là bao nhiêu?",
    "output": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009"
  },
  {
    "instruction": "",
    "input": "Hiển thị chủ đề và năm cho tất cả các triển lãm theo thứ tự giảm giá vé.",
    "output": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC"
  },
  {
    "instruction": "",
    "input": "Các chủ đề và năm cho triển lãm, được sắp xếp theo giá vé giảm dần?",
    "output": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC"
  },
  {
    "instruction": "",
    "input": "Chủ đề, ngày tháng và sự tham dự cho triển lãm vào năm 2004 là gì?",
    "output": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004"
  },
  {
    "instruction": "",
    "input": "Trả lại các chủ đề, ngày tháng và tham dự các triển lãm xảy ra vào năm 2004.",
    "output": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên nghệ sĩ không có triển lãm vào năm 2004.",
    "output": "SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.year  =  2004"
  },
  {
    "instruction": "",
    "input": "Tên của các nghệ sĩ không có triển lãm vào năm 2004 là gì?",
    "output": "SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.year  =  2004"
  },
  {
    "instruction": "",
    "input": "Hiển thị chủ đề cho các triển lãm với cả hai hồ sơ của một người tham dự dưới 100 trở lên 500.",
    "output": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500"
  },
  {
    "instruction": "",
    "input": "Những chủ đề nào đã có các triển lãm tương ứng đã có sự tham dự cả dưới 100 trở lên?",
    "output": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu triển lãm có hơn 100 hoặc có giá vé dưới 10?",
    "output": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng triển lãm đã có sự tham dự hơn 100 hoặc giá vé dưới 10.",
    "output": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên nghệ sĩ với sự tham dự triển lãm trung bình trên 200.",
    "output": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200"
  },
  {
    "instruction": "",
    "input": "Tên của nghệ sĩ có triển lãm trung bình hơn 200 người tham dự là gì?",
    "output": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200"
  },
  {
    "instruction": "",
    "input": "Tìm id của mục có tiêu đề là \"màu cam\".",
    "output": "SELECT i_id FROM item WHERE title  =  \"orange\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả thông tin trong bảng vật phẩm.",
    "output": "SELECT * FROM item"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng đánh giá.",
    "output": "SELECT count(*) FROM review"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người dùng?",
    "output": "SELECT count(*) FROM useracct"
  },
  {
    "instruction": "",
    "input": "Tìm xếp hạng trung bình và tối đa của tất cả các đánh giá.",
    "output": "SELECT avg(rating) ,  max(rating) FROM review"
  },
  {
    "instruction": "",
    "input": "Tìm thứ hạng cao nhất của tất cả các đánh giá.",
    "output": "SELECT min(rank) FROM review"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người dùng khác nhau đã viết một số đánh giá?",
    "output": "SELECT count(DISTINCT u_id) FROM review"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mục khác nhau đã được một số người dùng xem xét?",
    "output": "SELECT count(DISTINCT i_id) FROM review"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các mặt hàng không nhận được bất kỳ đánh giá.",
    "output": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người dùng không để lại bất kỳ đánh giá nào.",
    "output": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)"
  },
  {
    "instruction": "",
    "input": "Tìm tên hàng hóa nhận được xếp hạng 10.",
    "output": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  =  10"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề của các mục có xếp hạng cao hơn đánh giá trung bình của tất cả các mục.",
    "output": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  (SELECT avg(rating) FROM review)"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề của các mặt hàng nhận được bất kỳ xếp hạng dưới 5.",
    "output": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề của các mặt hàng nhận được cả xếp hạng cao hơn 8 và xếp hạng dưới 5.",
    "output": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  8 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các mục có thứ hạng cao hơn 3 và có xếp hạng trung bình trên 5.",
    "output": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rank  >  3 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id HAVING avg(T2.rating)  >  5"
  },
  {
    "instruction": "",
    "input": "Tìm tên của mặt hàng với xếp hạng trung bình thấp nhất.",
    "output": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tiêu đề của tất cả các mục theo thứ tự chữ cái.",
    "output": "SELECT title FROM item ORDER BY title"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người dùng đưa ra nhiều đánh giá nhất.",
    "output": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên và ID của mục với xếp hạng trung bình cao nhất.",
    "output": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên và ID của hàng hóa với thứ hạng trung bình cao nhất.",
    "output": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rank) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi người dùng, hãy trả lại tên và xếp hạng trung bình của các đánh giá được đưa ra bởi họ.",
    "output": "SELECT T1.name ,  avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi người dùng, hãy tìm tên của họ và số lượng đánh giá được viết bởi họ.",
    "output": "SELECT T1.name ,  count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người dùng đã xếp hạng cao nhất.",
    "output": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id ORDER BY T2.rating DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người dùng nguồn với điểm tin cậy trung bình cao nhất.",
    "output": "SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.source_u_id GROUP BY T2.source_u_id ORDER BY avg(trust) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên người dùng mục tiêu và điểm tin cậy trung bình.",
    "output": "SELECT T1.name ,  avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id GROUP BY T2.target_u_id"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người dùng mục tiêu với điểm tin cậy thấp nhất.",
    "output": "SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id ORDER BY trust LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các mục không nhận được bất kỳ đánh giá.",
    "output": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người dùng không để lại bất kỳ đánh giá nào.",
    "output": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng người dùng không viết bất kỳ đánh giá.",
    "output": "SELECT count(*) FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các mặt hàng mà không cần xem xét.",
    "output": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người chơi?",
    "output": "SELECT count(*) FROM player"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của người chơi theo thứ tự tăng dần của phiếu bầu.",
    "output": "SELECT Player_name FROM player ORDER BY Votes ASC"
  },
  {
    "instruction": "",
    "input": "Giới tính và nghề nghiệp của người chơi là gì?",
    "output": "SELECT Gender ,  Occupation FROM player"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và nơi cư trú cho những người chơi có nghề nghiệp không phải là \"nhà nghiên cứu\".",
    "output": "SELECT Player_name ,  residence FROM player WHERE Occupation != \"Researcher\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các nhà tài trợ của những người chơi có nơi cư trú là \"Brandon\" hoặc \"Birtle\".",
    "output": "SELECT Sponsor_name FROM player WHERE Residence  =  \"Brandon\" OR Residence  =  \"Birtle\""
  },
  {
    "instruction": "",
    "input": "Tên của người chơi có số phiếu bầu lớn nhất là gì?",
    "output": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các nghề nghiệp khác nhau cùng với số lượng người chơi trong mỗi nghề nghiệp.",
    "output": "SELECT Occupation ,  COUNT(*) FROM player GROUP BY Occupation"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị nghề nghiệp phổ biến nhất của người chơi.",
    "output": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cho thấy các khu dân cư có ít nhất hai người chơi.",
    "output": "SELECT Residence FROM player GROUP BY Residence HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của người chơi và tên của huấn luyện viên của họ.",
    "output": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các cầu thủ được huấn luyện bởi huấn luyện viên cấp 1.",
    "output": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T2.Rank  =  1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và giới tính của người chơi với một huấn luyện viên bắt đầu sau năm 2011.",
    "output": "SELECT T3.Player_name ,  T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T1.Starting_year  >  2011"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của người chơi và tên của huấn luyện viên của họ theo thứ tự giảm dần phiếu bầu của người chơi.",
    "output": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của những người chơi không có huấn luyện viên.",
    "output": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM player_coach)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các khu dân cư có cả người chơi \"M\" và người chơi giới tính \"F\".",
    "output": "SELECT Residence FROM player WHERE gender  =  \"M\" INTERSECT SELECT Residence FROM player WHERE gender  =  \"F\""
  },
  {
    "instruction": "",
    "input": "Mỗi câu lạc bộ có bao nhiêu huấn luyện viên?Liệt kê ID câu lạc bộ, tên và số lượng huấn luyện viên.",
    "output": "SELECT T1.club_id ,  T1.club_name, count(*) FROM club AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu huy chương vàng có câu lạc bộ với nhiều huấn luyện viên nhất giành được?",
    "output": "SELECT T1.club_id ,  T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu vận động viên thể dục?",
    "output": "SELECT count(*) FROM gymnast"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng vận động viên thể dục.",
    "output": "SELECT count(*) FROM gymnast"
  },
  {
    "instruction": "",
    "input": "Liệt kê tổng số điểm của vận động viên thể dục theo thứ tự giảm dần.",
    "output": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC"
  },
  {
    "instruction": "",
    "input": "Tổng số điểm cho tất cả các vận động viên thể dục, được đặt hàng bởi tổng số điểm giảm dần là gì?",
    "output": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tổng số điểm của các vận động viên thể dục theo thứ tự giảm dần điểm tập thể dục sàn.",
    "output": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC"
  },
  {
    "instruction": "",
    "input": "Tổng số điểm của các vận động viên thể dục, được đặt hàng bởi các điểm tập thể dục sàn của họ giảm dần?",
    "output": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC"
  },
  {
    "instruction": "",
    "input": "Các điểm thanh ngang trung bình cho tất cả các vận động viên thể dục là gì?",
    "output": "SELECT avg(Horizontal_Bar_Points) FROM gymnast"
  },
  {
    "instruction": "",
    "input": "Trả lại các điểm thanh ngang trung bình trên tất cả các vận động viên thể dục.",
    "output": "SELECT avg(Horizontal_Bar_Points) FROM gymnast"
  },
  {
    "instruction": "",
    "input": "Tên của những người theo thứ tự bảng chữ cái tăng dần là gì?",
    "output": "SELECT Name FROM People ORDER BY Name ASC"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của mọi người, đặt hàng theo thứ tự bảng chữ cái.",
    "output": "SELECT Name FROM People ORDER BY Name ASC"
  },
  {
    "instruction": "",
    "input": "Tên của các vận động viên thể dục là gì?",
    "output": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các vận động viên thể dục.",
    "output": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
  },
  {
    "instruction": "",
    "input": "Tên của các vận động viên thể dục có quê hương không phải là \"Santo Domingo\" là gì?",
    "output": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\""
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các vận động viên thể dục dụng cụ không lớn lên ở Santo Domingo.",
    "output": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\""
  },
  {
    "instruction": "",
    "input": "Tuổi của người cao nhất là gì?",
    "output": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tuổi của người có chiều cao lớn nhất.",
    "output": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của 5 người lâu đời nhất.",
    "output": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Tên của năm người già nhất là gì?",
    "output": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Tổng số điểm của vận động viên thể dục trẻ nhất là gì?",
    "output": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tổng số điểm của vận động viên thể dục với độ tuổi thấp nhất.",
    "output": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình của tất cả các vận động viên thể dục là bao nhiêu?",
    "output": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
  },
  {
    "instruction": "",
    "input": "Trả lại độ tuổi trung bình trên tất cả các vận động viên thể dục.",
    "output": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
  },
  {
    "instruction": "",
    "input": "Quê hương riêng biệt của các vận động viên thể dục với tổng số điểm hơn 57,5 ​​là gì?",
    "output": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho các quê hương khác nhau của các vận động viên thể dục có tổng số điểm trên 57,5.",
    "output": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5"
  },
  {
    "instruction": "",
    "input": "Hometowns của vận động viên thể dục và số lượng vận động viên thể dục tương ứng là gì?",
    "output": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thể dục dụng cụ từ mỗi quê hương?",
    "output": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown"
  },
  {
    "instruction": "",
    "input": "Quê hương phổ biến nhất của thể dục dụng cụ là gì?",
    "output": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại quê hương phổ biến nhất trong số các vận động viên thể dục.",
    "output": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Quê hương được chia sẻ bởi ít nhất hai vận động viên thể dục dụng cụ là gì?",
    "output": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho quê hương từ đó hai hoặc nhiều vận động viên thể dục.",
    "output": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các vận động viên thể dục theo thứ tự tăng dần theo độ cao của họ.",
    "output": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC"
  },
  {
    "instruction": "",
    "input": "Tên của các vận động viên thể dục, được đặt hàng bởi độ cao của họ tăng lên?",
    "output": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê các quê hương riêng biệt không liên quan đến bất kỳ vận động viên thể dục dụng cụ.",
    "output": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
  },
  {
    "instruction": "",
    "input": "Những người ở quê nhà không thể dục dụng cụ nào đến từ?",
    "output": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị quê hương được chia sẻ bởi những người lớn hơn 23 tuổi và dưới 20 tuổi.",
    "output": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20"
  },
  {
    "instruction": "",
    "input": "Những người quê hương nào mà cả hai người trên 23 tuổi và dưới 20 tuổi đến từ?",
    "output": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20"
  },
  {
    "instruction": "",
    "input": "Những người này đã có bao nhiêu quê hương khác nhau?",
    "output": "SELECT count(DISTINCT Hometown) FROM people"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng quê hương khác nhau của những người này.",
    "output": "SELECT count(DISTINCT Hometown) FROM people"
  },
  {
    "instruction": "",
    "input": "Hiển thị độ tuổi của các vận động viên thể dục theo thứ tự giảm dần của tổng số điểm.",
    "output": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC"
  },
  {
    "instruction": "",
    "input": "Độ tuổi của các vận động viên thể dục, được đặt hàng giảm dần bởi tổng số điểm của họ là gì?",
    "output": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số dư tiết kiệm của tất cả các tài khoản ngoại trừ tài khoản có tên ‘Brown.",
    "output": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown'"
  },
  {
    "instruction": "",
    "input": "Tổng số dư của các tài khoản tiết kiệm không thuộc về người có tên Brown là gì?",
    "output": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown'"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu tài khoản?",
    "output": "SELECT count(*) FROM accounts"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng tài khoản.",
    "output": "SELECT count(*) FROM accounts"
  },
  {
    "instruction": "",
    "input": "Tổng số dư kiểm tra trong tất cả các tài khoản là gì?",
    "output": "SELECT sum(balance) FROM checking"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số dư trên các tài khoản kiểm tra.",
    "output": "SELECT sum(balance) FROM checking"
  },
  {
    "instruction": "",
    "input": "Tìm số dư kiểm tra trung bình.",
    "output": "SELECT avg(balance) FROM checking"
  },
  {
    "instruction": "",
    "input": "Số dư trung bình trong kiểm tra tài khoản là gì?",
    "output": "SELECT avg(balance) FROM checking"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài khoản có số dư tiết kiệm trên số dư tiết kiệm trung bình?",
    "output": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tài khoản với số dư tiết kiệm cao hơn số dư tiết kiệm trung bình.",
    "output": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)"
  },
  {
    "instruction": "",
    "input": "Tìm tên và ID của các tài khoản có số dư kiểm tra dưới số dư kiểm tra tối đa.",
    "output": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)"
  },
  {
    "instruction": "",
    "input": "ID khách hàng và tên tương ứng với các tài khoản có số dư kiểm tra ít hơn số dư kiểm tra lớn nhất là gì?",
    "output": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)"
  },
  {
    "instruction": "",
    "input": "Số dư kiểm tra của tài khoản có tên chủ sở hữu có chứa phần phụ ‘ee?",
    "output": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%'"
  },
  {
    "instruction": "",
    "input": "Tìm số dư của tài khoản kiểm tra thuộc về chủ sở hữu có tên chứa 'ee'.",
    "output": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%'"
  },
  {
    "instruction": "",
    "input": "Tìm số dư kiểm tra và số dư tiết kiệm trong tài khoản Brown.",
    "output": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'"
  },
  {
    "instruction": "",
    "input": "Số dư kiểm tra và tiết kiệm trong các tài khoản thuộc về Brown là gì?",
    "output": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các tài khoản có số dư kiểm tra cao hơn số dư kiểm tra trung bình, nhưng số dư tiết kiệm nằm dưới số dư tiết kiệm trung bình.",
    "output": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)"
  },
  {
    "instruction": "",
    "input": "Tên của các tài khoản với số dư kiểm tra lớn hơn số dư kiểm tra trung bình và số dư tiết kiệm dưới số dư tiết kiệm trung bình là gì?",
    "output": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)"
  },
  {
    "instruction": "",
    "input": "Tìm số dư kiểm tra của các tài khoản có số dư tiết kiệm cao hơn số dư tiết kiệm trung bình.",
    "output": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))"
  },
  {
    "instruction": "",
    "input": "Số dư của việc kiểm tra tài khoản thuộc về những người có số dư tiết kiệm lớn hơn số dư tiết kiệm trung bình là gì?",
    "output": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các khách hàng Tên tên theo thứ tự bảng chữ cái.",
    "output": "SELECT name FROM accounts ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các khách hàng theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT name FROM accounts ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tài khoản có tổng số dư kiểm tra và lưu thấp nhất.",
    "output": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên tương ứng với tài khoản với số lượng số dư kiểm tra và tiết kiệm thấp nhất là gì?",
    "output": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên và tổng số dư kiểm tra và tiết kiệm của các tài khoản có số dư tiết kiệm cao hơn số dư tiết kiệm trung bình.",
    "output": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)"
  },
  {
    "instruction": "",
    "input": "Tên và tổng số dư kiểm tra và tiết kiệm cho các tài khoản với số dư tiết kiệm cao hơn số dư tiết kiệm trung bình là gì?",
    "output": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)"
  },
  {
    "instruction": "",
    "input": "Tìm tên và kiểm tra số dư của tài khoản với số dư tiết kiệm thấp nhất.",
    "output": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và số dư của việc kiểm tra tài khoản thuộc về khách hàng với số dư tiết kiệm thấp nhất là gì?",
    "output": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tài khoản kiểm tra cho mỗi tên tài khoản.",
    "output": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng có tài khoản là gì và mỗi người trong số họ có bao nhiêu tài khoản kiểm tra?",
    "output": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số dư tiết kiệm cho mỗi tên tài khoản.",
    "output": "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng có tài khoản là gì và tổng số dư tiết kiệm cho mỗi là gì?",
    "output": "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các tài khoản có số dư kiểm tra dưới số dư kiểm tra trung bình.",
    "output": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng với số dư kiểm tra thấp hơn số dư kiểm tra trung bình là gì?",
    "output": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)"
  },
  {
    "instruction": "",
    "input": "Tìm số dư tiết kiệm của tài khoản với số dư kiểm tra cao nhất.",
    "output": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Số dư tiết kiệm của tài khoản thuộc về khách hàng với số dư kiểm tra cao nhất là gì?",
    "output": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số dư kiểm tra và lưu của tất cả các tài khoản được sắp xếp theo tổng số dư theo thứ tự tăng dần.",
    "output": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance"
  },
  {
    "instruction": "",
    "input": "Tổng số dư kiểm tra và tiết kiệm cho tất cả khách hàng, được đặt hàng bởi tổng số dư là bao nhiêu?",
    "output": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance"
  },
  {
    "instruction": "",
    "input": "Tìm tên và kiểm tra số dư của tài khoản với số dư tiết kiệm thấp nhất.",
    "output": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và số dư kiểm tra của tài khoản có số dư tiết kiệm thấp nhất là gì?",
    "output": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên, kiểm tra số dư và lưu số dư của tất cả các tài khoản trong ngân hàng.",
    "output": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid"
  },
  {
    "instruction": "",
    "input": "Tên, kiểm tra số dư và số dư tiết kiệm cho tất cả khách hàng là gì?",
    "output": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid"
  },
  {
    "instruction": "",
    "input": "Tìm tên, kiểm tra số dư và số dư tiết kiệm của tất cả các tài khoản trong ngân hàng được sắp xếp theo tổng số dư kiểm tra và số dư của họ theo thứ tự giảm dần.",
    "output": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC"
  },
  {
    "instruction": "",
    "input": "Tên, số dư kiểm tra và số dư tiết kiệm của khách hàng là gì, được đặt hàng bởi tổng số cân bằng kiểm tra và tiết kiệm giảm dần?",
    "output": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các tài khoản có số dư kiểm tra cao hơn số dư tiết kiệm tương ứng.",
    "output": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng với số dư kiểm tra cao hơn số dư tiết kiệm là gì?",
    "output": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance"
  },
  {
    "instruction": "",
    "input": "Tìm tên và tổng số dư kiểm tra và tiết kiệm của các tài khoản có số dư tiết kiệm thấp hơn số dư kiểm tra tương ứng.",
    "output": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng có số dư tiết kiệm thấp hơn số dư kiểm tra của họ là gì và tổng số dư tiết kiệm và kiểm tra của họ là bao nhiêu?",
    "output": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance"
  },
  {
    "instruction": "",
    "input": "Tìm số dư và số dư tiết kiệm của 3 tài khoản hàng đầu với số dư tiết kiệm cao nhất được sắp xếp theo số dư tiết kiệm theo thứ tự giảm dần.",
    "output": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tên và số dư tiết kiệm của ba tài khoản với số dư tiết kiệm cao nhất là gì?",
    "output": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trình duyệt luồng chính có thị phần ít nhất là 5 tồn tại?",
    "output": "SELECT count(*) FROM browser WHERE market_share  >=  5"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các trình duyệt theo thứ tự giảm dần theo thị phần.",
    "output": "SELECT name FROM browser ORDER BY market_share DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID, tên và thị phần của tất cả các trình duyệt.",
    "output": "SELECT id ,  name ,  market_share FROM browser"
  },
  {
    "instruction": "",
    "input": "Thị phần tối đa, tối thiểu và trung bình của các trình duyệt được liệt kê là bao nhiêu?",
    "output": "SELECT max(market_share) ,  min(market_share) ,  avg(market_share) FROM browser"
  },
  {
    "instruction": "",
    "input": "ID và thị phần của trình duyệt Safari là gì?",
    "output": "SELECT id ,  market_share FROM browser WHERE name  =  'Safari'"
  },
  {
    "instruction": "",
    "input": "Tên và hệ điều hành của máy gia tốc máy khách web không hoạt động chỉ với kết nối loại 'băng thông rộng' là gì?",
    "output": "SELECT name ,  operating_system FROM web_client_accelerator WHERE CONNECTION != 'Broadband'"
  },
  {
    "instruction": "",
    "input": "Tên của trình duyệt đã trở nên tương thích với máy gia tốc 'CPROXY' sau năm 1998 là gì?",
    "output": "SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id  =  T3.id WHERE T3.name  =  'CProxy' AND T2.compatible_since_year  >  1998"
  },
  {
    "instruction": "",
    "input": "ID và tên của các máy gia tốc web tương thích với hai hoặc nhiều trình duyệt là gì?",
    "output": "SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "ID và tên của trình duyệt tương thích với các máy gia tốc web nhất là gì?",
    "output": "SELECT T1.id ,  T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Khi nào thì bộ tăng tốc web 'bộ đệm' và trình duyệt 'Internet Explorer' trở nên tương thích?",
    "output": "SELECT T1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id WHERE T3.name  =  'CACHEbox' AND T2.name  =  'Internet Explorer'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại khách hàng khác nhau được hỗ trợ bởi các máy gia tốc máy khách web?",
    "output": "SELECT count(DISTINCT client) FROM web_client_accelerator"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu máy gia tốc không tương thích với các trình duyệt được liệt kê?",
    "output": "SELECT count(*) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser );"
  },
  {
    "instruction": "",
    "input": "Tên máy gia tốc khác biệt nào tương thích với các bộ đệm có thị phần cao hơn 15?",
    "output": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.market_share  >  15;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của trình duyệt tương thích với cả 'bộ đệm' và 'fasterfox'.",
    "output": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên máy gia tốc và các hệ điều hành hỗ trợ không tương thích với trình duyệt có tên 'Opera'.",
    "output": "SELECT name ,  operating_system FROM web_client_accelerator EXCEPT SELECT T1.name ,  T1.operating_system FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.name  =  'Opera'"
  },
  {
    "instruction": "",
    "input": "Tên gia tốc nào chứa \"opera\" con?",
    "output": "SELECT name FROM web_client_accelerator WHERE name LIKE \"%Opera%\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng máy gia tốc web được sử dụng cho mỗi hệ điều hành.",
    "output": "SELECT Operating_system ,  count(*) FROM web_client_accelerator GROUP BY Operating_system"
  },
  {
    "instruction": "",
    "input": "Cho tôi tên của tất cả các trình duyệt và máy gia tốc tương thích theo thứ tự giảm dần của năm tương thích",
    "output": "SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id ORDER BY T1.compatible_since_year DESC"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu đô vật?",
    "output": "SELECT count(*) FROM wrestler"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng đô vật.",
    "output": "SELECT count(*) FROM wrestler"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các đô vật theo thứ tự giảm dần của ngày được tổ chức.",
    "output": "SELECT Name FROM wrestler ORDER BY Days_held DESC"
  },
  {
    "instruction": "",
    "input": "Tên của các đô vật, được đặt hàng giảm dần bởi những ngày được tổ chức là gì?",
    "output": "SELECT Name FROM wrestler ORDER BY Days_held DESC"
  },
  {
    "instruction": "",
    "input": "Tên của đô vật với ít ngày nhất được tổ chức là gì?",
    "output": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của đô vật có số ngày thấp nhất được tổ chức.",
    "output": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các triều đại riêng biệt của các đô vật có vị trí không phải là \"Tokyo, Nhật Bản\" là gì?",
    "output": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"Tokyo , Japan\""
  },
  {
    "instruction": "",
    "input": "Đưa ra các triều đại khác nhau của các đô vật không ở Tokyo, Nhật Bản.",
    "output": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"Tokyo , Japan\""
  },
  {
    "instruction": "",
    "input": "Tên và vị trí của các đô vật là gì?",
    "output": "SELECT Name ,  LOCATION FROM wrestler"
  },
  {
    "instruction": "",
    "input": "Đặt tên và vị trí của tất cả các đô vật.",
    "output": "SELECT Name ,  LOCATION FROM wrestler"
  },
  {
    "instruction": "",
    "input": "Các động thái loại bỏ của các đô vật có đội là \"Đội Orton\" là gì?",
    "output": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\""
  },
  {
    "instruction": "",
    "input": "Trả lại các bộ phim loại bỏ của các đô vật trên Đội Orton.",
    "output": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\""
  },
  {
    "instruction": "",
    "input": "Tên của các đô vật và các động tác loại bỏ là gì?",
    "output": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID"
  },
  {
    "instruction": "",
    "input": "Đặt tên của các đô vật và các động tác loại bỏ của họ.",
    "output": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các đô vật và các đội trong việc loại bỏ theo thứ tự giảm dần của những ngày được tổ chức.",
    "output": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC"
  },
  {
    "instruction": "",
    "input": "Tên của các đô vật và các đội của họ trong việc loại bỏ, được đặt hàng giảm dần theo nhiều ngày?",
    "output": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê thời gian loại bỏ các đô vật với những ngày lớn nhất được tổ chức.",
    "output": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Thời gian loại bỏ cho đô vật với nhiều ngày nhất được tổ chức?",
    "output": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị thời gian loại bỏ các đô vật với những ngày được tổ chức hơn 50.",
    "output": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50"
  },
  {
    "instruction": "",
    "input": "Thời gian loại bỏ cho các đô vật với hơn 50 ngày được tổ chức là gì?",
    "output": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50"
  },
  {
    "instruction": "",
    "input": "Hiển thị các đội khác nhau trong việc loại bỏ và số lượng loại bỏ khỏi mỗi đội.",
    "output": "SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team"
  },
  {
    "instruction": "",
    "input": "Mỗi đội đã loại bỏ bao nhiêu lần?",
    "output": "SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team"
  },
  {
    "instruction": "",
    "input": "Các đội thể hiện đã phải chịu nhiều hơn ba lần loại bỏ.",
    "output": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3"
  },
  {
    "instruction": "",
    "input": "Những đội nào đã loại bỏ hơn 3 lần?",
    "output": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3"
  },
  {
    "instruction": "",
    "input": "Hiển thị triều đại và ngày tổ chức của các đô vật.",
    "output": "SELECT Reign ,  Days_held FROM wrestler"
  },
  {
    "instruction": "",
    "input": "Các triều đại và ngày của tất cả các đô vật là gì?",
    "output": "SELECT Reign ,  Days_held FROM wrestler"
  },
  {
    "instruction": "",
    "input": "Tên của những ngày đô vật được tổ chức dưới 100 là gì?",
    "output": "SELECT Name FROM wrestler WHERE Days_held  <  100"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các đô vật với ít hơn 100 ngày.",
    "output": "SELECT Name FROM wrestler WHERE Days_held  <  100"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các triều đại phổ biến nhất của các đô vật.",
    "output": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Triều đại nào là phổ biến nhất trong số các đô vật?",
    "output": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các vị trí được chia sẻ bởi nhiều hơn hai đô vật.",
    "output": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Những địa điểm nào được chia sẻ bởi nhiều hơn hai đô vật?",
    "output": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các đô vật chưa được loại bỏ.",
    "output": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)"
  },
  {
    "instruction": "",
    "input": "Tên của các đô vật chưa bao giờ bị loại bỏ là gì?",
    "output": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các đội đã loại bỏ cả hai đô vật bởi \"Orton\" và các đô vật bị loại bởi \"Benjamin\".",
    "output": "SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Orton\" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Benjamin\""
  },
  {
    "instruction": "",
    "input": "Các đội có cả hai đô vật bị loại bởi Orton và các đô vật bị loại bởi Benjamin là gì?",
    "output": "SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Orton\" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Benjamin\""
  },
  {
    "instruction": "",
    "input": "Số lượng các đội khác biệt bị loại bỏ là bao nhiêu?",
    "output": "SELECT COUNT (DISTINCT team) FROM elimination"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu đội khác nhau đã loại bỏ các đô vật?",
    "output": "SELECT COUNT (DISTINCT team) FROM elimination"
  },
  {
    "instruction": "",
    "input": "Hiển thị thời gian loại bỏ bằng \"punk\" hoặc \"Orton\".",
    "output": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\""
  },
  {
    "instruction": "",
    "input": "Thời gian loại bỏ cho bất kỳ trường hợp nào trong đó việc loại bỏ được thực hiện bởi Punk hoặc Orton là gì?",
    "output": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường học?",
    "output": "SELECT count(*) FROM school"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng trường học.",
    "output": "SELECT count(*) FROM school"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên trường theo thứ tự bảng chữ cái.",
    "output": "SELECT school_name FROM school ORDER BY school_name"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên, vị trí, linh vật cho tất cả các trường.",
    "output": "SELECT school_name ,  LOCATION ,  mascot FROM school"
  },
  {
    "instruction": "",
    "input": "Tổng số đăng ký và trung bình của tất cả các trường là bao nhiêu?",
    "output": "SELECT sum(enrollment) ,  avg(enrollment) FROM school"
  },
  {
    "instruction": "",
    "input": "Các linh vật cho các trường học có số lượng đăng ký trên mức trung bình là gì?",
    "output": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của trường với tuyển sinh nhỏ nhất.",
    "output": "SELECT school_name FROM school ORDER BY enrollment LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị trung bình, tối đa, ghi danh tối thiểu của tất cả các trường.",
    "output": "SELECT avg(enrollment) ,  max(enrollment) ,  min(enrollment) FROM school"
  },
  {
    "instruction": "",
    "input": "Hiển thị mỗi quận cùng với số lượng trường học và tổng số tuyển sinh ở mỗi quận.",
    "output": "SELECT county ,  count(*) ,  sum(enrollment) FROM school GROUP BY county"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhà tài trợ có tài trợ cho trường học có tên là \"Glenn\"?",
    "output": "SELECT count(DISTINCT T1.donator_name) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  \"Glenn\""
  },
  {
    "instruction": "",
    "input": "Liệt kê từng tên người quyên góp và số tiền tài trợ theo thứ tự giảm dần số tiền tài trợ.",
    "output": "SELECT donator_name ,  sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các trường mà không có bất kỳ tài trợ nào.",
    "output": "SELECT school_name FROM school WHERE school_id NOT IN (SELECT school_id FROM endowment)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên của các trường có số tiền tài trợ nhỏ hơn hoặc bằng 10.",
    "output": "SELECT T2.school_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T1.school_id HAVING sum(T1.amount)  <=  10"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các nhà tài trợ đã quyên góp cho cả hai trường \"Glenn\" và \"Triton\".",
    "output": "SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Glenn' INTERSECT SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Triton'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của tất cả các nhà tài trợ ngoại trừ những người có số tiền quyên góp dưới 9.",
    "output": "SELECT donator_name FROM endowment EXCEPT SELECT donator_name FROM endowment WHERE amount  <  9"
  },
  {
    "instruction": "",
    "input": "Liệt kê số tiền và tên nhà tài trợ cho số tiền quyên góp lớn nhất.",
    "output": "SELECT amount ,  donator_name FROM endowment ORDER BY amount DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ngân sách trên 3000 trong năm 2001 trở lên?",
    "output": "SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng ngân sách trong năm 2001 hoặc trước đó có số tiền ngân sách lớn hơn 3000",
    "output": "SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001"
  },
  {
    "instruction": "",
    "input": "Hiển thị mỗi tên trường, số tiền ngân sách của nó và số tiền đầu tư vào năm 2002 hoặc sau đó.",
    "output": "SELECT T2.school_name ,  T1.budgeted ,  T1.invested FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.year  >=  2002"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên của nhà tài trợ.",
    "output": "SELECT DISTINCT donator_name FROM endowment"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu hồ sơ ngân sách có số tiền ngân sách nhỏ hơn số tiền đầu tư?",
    "output": "SELECT count(*) FROM budget WHERE budgeted  <  invested"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền ngân sách cho trường học \"Glenn\" trong tất cả các năm là bao nhiêu?",
    "output": "SELECT sum(T1.budgeted) FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Glenn'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các trường với tổng số tiền ngân sách lớn hơn 100 hoặc tổng tài trợ lớn hơn 10.",
    "output": "SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN endowment AS T3 ON T2.school_id  =  T3.school_id GROUP BY T2.school_name HAVING sum(T1.budgeted)  >  100 OR sum(T3.amount)  >  10"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các trường có nhiều hơn một người quyên góp với số tiền quyên góp trên 8,5.",
    "output": "SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng trường có nhiều hơn một người quyên góp có số tiền quyên góp dưới 8,5.",
    "output": "SELECT count(*) FROM (SELECT * FROM endowment WHERE amount  >  8.5 GROUP BY school_id HAVING count(*)  >  1)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên, lớp bóng đá IHSAA và linh vật của các trường có hơn 6000 số tiền ngân sách hoặc được thành lập trước năm 2003, theo thứ tự phần trăm tổng ngân sách đầu tư và tổng ngân sách.",
    "output": "SELECT T1.School_name ,  T1.Mascot ,  T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id  =  T2.school_id WHERE Budgeted  >  6000 OR YEAR  <  2003 ORDER BY T2.total_budget_percent_invested ,  T2.total_budget_percent_budgeted"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tòa nhà?",
    "output": "SELECT count(*) FROM building"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, địa chỉ đường phố và số lượng sàn cho tất cả các tòa nhà được đặt hàng theo số lượng sàn.",
    "output": "SELECT name ,  street_address ,  floors FROM building ORDER BY floors"
  },
  {
    "instruction": "",
    "input": "Tên của tòa nhà cao nhất là gì?",
    "output": "SELECT name FROM building ORDER BY height_feet DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Số lượng sàn trung bình, tối đa và tối thiểu cho tất cả các tòa nhà là bao nhiêu?",
    "output": "SELECT avg(floors) ,  max(floors) ,  min(floors) FROM building"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng các tòa nhà có chiều cao trên mức trung bình hoặc một số tầng trên mức trung bình.",
    "output": "SELECT count(*) FROM building WHERE height_feet  >  (SELECT avg(height_feet) FROM building) OR floors  >  (SELECT avg(floors) FROM building)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các tòa nhà có chiều cao ít nhất 200 feet và với ít nhất 20 tầng.",
    "output": "SELECT name FROM building WHERE height_feet  >=  200 AND floors  >=  20"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và địa điểm của các tổ chức được thành lập sau năm 1990 và có loại \"riêng tư\".",
    "output": "SELECT institution ,  LOCATION FROM institution WHERE founded  >  1990 AND TYPE  =  'Private'"
  },
  {
    "instruction": "",
    "input": "Hiển thị các loại tổ chức, cùng với số lượng tổ chức và tổng số ghi danh cho từng loại.",
    "output": "SELECT TYPE ,  count(*) ,  sum(enrollment) FROM institution GROUP BY TYPE"
  },
  {
    "instruction": "",
    "input": "Hiển thị loại tổ chức với số lượng lớn nhất của các tổ chức.",
    "output": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị loại tổ chức với một tổ chức được thành lập sau năm 1990 và một tổ chức có ít nhất 1000 tuyển sinh.",
    "output": "SELECT TYPE FROM institution WHERE founded  >  1990 AND enrollment  >=  1000"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các tòa nhà không có bất kỳ tổ chức nào.",
    "output": "SELECT name FROM building WHERE building_id NOT IN (SELECT building_id FROM institution)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các tòa nhà ngoại trừ những người có một tổ chức được thành lập vào năm 2003.",
    "output": "SELECT name FROM building EXCEPT SELECT T1.name FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  =  2003"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi tòa nhà, hãy hiển thị tên của tòa nhà và số lượng các tổ chức trong đó.",
    "output": "SELECT T1.name ,  count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id GROUP BY T1.building_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và chiều cao của các tòa nhà với ít nhất hai tổ chức được thành lập sau năm 1880.",
    "output": "SELECT T1.name ,  T1.height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  >  1880 GROUP BY T1.building_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các loại tổ chức riêng biệt.",
    "output": "SELECT DISTINCT TYPE FROM institution"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên tổ chức cùng với số lượng protein cho mỗi tổ chức.",
    "output": "SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu protein được liên kết với một tổ chức được thành lập sau năm 1880 hoặc một tổ chức có loại \"tư nhân\"?",
    "output": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1880 OR T1.type  =  'Private'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên protein và tên tổ chức.",
    "output": "SELECT T2.protein_name ,  T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu protein được liên kết với một tổ chức trong một tòa nhà có ít nhất 20 tầng?",
    "output": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id JOIN building AS T3 ON T3.building_id  =  T1.building_id WHERE T3.floors  >=  20"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tổ chức không có protein liên quan trong hồ sơ của chúng tôi?",
    "output": "SELECT count(*) FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM protein)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các địa điểm mà không có rạp chiếu phim nào có công suất trên 800.",
    "output": "SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity  >  800"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các địa điểm nơi một số rạp chiếu phim được mở trong cả năm 2010 và năm 2011.",
    "output": "SELECT LOCATION FROM cinema WHERE openning_year  =  2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year  =  2011"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu rạp chiếu phim?",
    "output": "SELECT count(*) FROM cinema"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng rạp chiếu phim.",
    "output": "SELECT count(*) FROM cinema"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, năm mở cửa và năng lực cho mỗi rạp chiếu phim.",
    "output": "SELECT name ,  openning_year ,  capacity FROM cinema"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên rạp chiếu phim và địa điểm cho các rạp chiếu phim có công suất trên trung bình.",
    "output": "SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)"
  },
  {
    "instruction": "",
    "input": "Tất cả các địa điểm với một rạp chiếu phim là gì?",
    "output": "SELECT DISTINCT LOCATION FROM cinema"
  },
  {
    "instruction": "",
    "input": "Tìm các địa điểm riêng biệt có một rạp chiếu phim.",
    "output": "SELECT DISTINCT LOCATION FROM cinema"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên rạp chiếu phim và năm khai mạc theo thứ tự giảm dần của năm khai mạc.",
    "output": "SELECT name ,  openning_year FROM cinema ORDER BY openning_year DESC"
  },
  {
    "instruction": "",
    "input": "Tên và vị trí của rạp chiếu phim với công suất lớn nhất là gì?",
    "output": "SELECT name ,  LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị công suất trung bình, tối thiểu và tối đa cho tất cả các rạp chiếu phim được mở vào năm 2011 hoặc muộn hơn.",
    "output": "SELECT avg(capacity) ,  min(capacity) ,  max(capacity) FROM cinema WHERE openning_year  >=  2011"
  },
  {
    "instruction": "",
    "input": "Hiển thị từng địa điểm và số lượng rạp chiếu phim ở đó.",
    "output": "SELECT LOCATION ,  count(*) FROM cinema GROUP BY LOCATION"
  },
  {
    "instruction": "",
    "input": "Vị trí với các rạp chiếu phim nhất được mở trong năm 2010 hoặc muộn hơn là gì?",
    "output": "SELECT LOCATION FROM cinema WHERE openning_year  >=  2010 GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các địa điểm có ít nhất hai rạp chiếu phim có công suất trên 300.",
    "output": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Những địa điểm nào có 2 rạp chiếu phim trở lên với công suất trên 300?",
    "output": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tiêu đề và đạo diễn cho tất cả các bộ phim.",
    "output": "SELECT title ,  directed_by FROM film"
  },
  {
    "instruction": "",
    "input": "Tiêu đề và đạo diễn của mỗi bộ phim là gì?",
    "output": "SELECT title ,  directed_by FROM film"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các giám đốc.",
    "output": "SELECT DISTINCT directed_by FROM film"
  },
  {
    "instruction": "",
    "input": "Tất cả các giám đốc là ai?",
    "output": "SELECT DISTINCT directed_by FROM film"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các đạo diễn cùng với số lượng phim do mỗi đạo diễn đạo diễn.",
    "output": "SELECT directed_by ,  count(*) FROM film GROUP BY directed_by"
  },
  {
    "instruction": "",
    "input": "Tổng số lần hiển thị mỗi ngày cho mỗi rạp chiếu phim là bao nhiêu?",
    "output": "SELECT T2.name ,  sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id"
  },
  {
    "instruction": "",
    "input": "Tiêu đề và giá tối đa của mỗi bộ phim là gì?",
    "output": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi tiêu đề và giá cao nhất cho mỗi bộ phim.",
    "output": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên rạp chiếu phim, tiêu đề phim, ngày và giá cho mỗi bản ghi trong lịch trình.",
    "output": "SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id"
  },
  {
    "instruction": "",
    "input": "Tiêu đề và đạo diễn của các bộ phim mà không có lịch trình là gì?",
    "output": "SELECT title ,  directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule)"
  },
  {
    "instruction": "",
    "input": "Tổng giám đốc chương trình với số lượng lớn nhất thời gian hiển thị trong tổng số.",
    "output": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.directed_by ORDER BY sum(T1.show_times_per_day) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm các địa điểm có nhiều hơn một rạp chiếu phim với công suất trên 300.",
    "output": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Có nhiều hơn một rạp chiếu phim có công suất trên 300?",
    "output": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bộ phim có từ 'giả' trong tựa đề của họ?",
    "output": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng phim có tiêu đề chứa từ 'giả'.",
    "output": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\""
  },
  {
    "instruction": "",
    "input": "Các khách hàng giữ phiếu giảm giá với số tiền 500 xấu hay tốt?",
    "output": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500"
  },
  {
    "instruction": "",
    "input": "Mỗi khách hàng đã đặt chỗ bao nhiêu lần?Liệt kê ID khách hàng, tên đầu tiên và số đếm.",
    "output": "SELECT T1.customer_id ,  T1.first_name ,  count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền tối đa được trả bởi một khách hàng là bao nhiêu?Liệt kê ID khách hàng và số tiền.",
    "output": "SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID và số tiền hoàn trả của việc đặt phòng phải chịu nhiều lần thanh toán nhất là gì?",
    "output": "SELECT T1.booking_id ,  T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id  =  T2.booking_id GROUP BY T1.booking_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của sản phẩm được đặt trong 3 lần là gì?",
    "output": "SELECT product_id FROM products_booked GROUP BY product_id HAVING count(*)  =  3"
  },
  {
    "instruction": "",
    "input": "Mô tả sản phẩm của sản phẩm được đặt với số lượng 102,76 là gì?",
    "output": "SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76"
  },
  {
    "instruction": "",
    "input": "Ngày bắt đầu và ngày kết thúc của việc đặt phòng đã đặt sản phẩm có tên là 'Bộ sưu tập sách A' là gì?",
    "output": "SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id  =  T2.product_id JOIN bookings AS T3 ON T2.booking_id  =  T3.booking_id WHERE T1.product_name  =  'Book collection A'"
  },
  {
    "instruction": "",
    "input": "Tên của các sản phẩm có tính khả dụng tương đương với 1 là gì?",
    "output": "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.available_yn  =  1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại sản phẩm khác nhau?",
    "output": "SELECT count(DISTINCT product_type_code) FROM products_for_hire"
  },
  {
    "instruction": "",
    "input": "Tên, họ và giới tính của tất cả các khách hàng tốt là gì?Đặt hàng theo họ của họ.",
    "output": "SELECT first_name ,  last_name ,  gender_mf FROM customers WHERE good_or_bad_customer  =  'good' ORDER BY last_name"
  },
  {
    "instruction": "",
    "input": "Số tiền trung bình cho tất cả các khoản thanh toán là bao nhiêu?",
    "output": "SELECT avg(amount_due) FROM payments"
  },
  {
    "instruction": "",
    "input": "Số lượng đã đặt tối đa, tối thiểu và trung bình cho các sản phẩm được đặt trước là gì?",
    "output": "SELECT max(booked_count) ,  min(booked_count) ,  avg(booked_count) FROM products_booked"
  },
  {
    "instruction": "",
    "input": "Tất cả các loại thanh toán riêng biệt là gì?",
    "output": "SELECT DISTINCT payment_type_code FROM payments"
  },
  {
    "instruction": "",
    "input": "Chi phí thuê hàng ngày cho các sản phẩm với \"cuốn sách\" trong tên của nó là bao nhiêu?",
    "output": "SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm không bao giờ được đặt với số tiền cao hơn 200?",
    "output": "SELECT count(*) FROM Products_for_hire WHERE product_id NOT IN ( SELECT product_id FROM products_booked WHERE booked_amount  >  200 )"
  },
  {
    "instruction": "",
    "input": "Số tiền phiếu giảm giá của các phiếu giảm giá thuộc sở hữu của cả khách hàng tốt và xấu là gì?",
    "output": "SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'bad'"
  },
  {
    "instruction": "",
    "input": "Ngày thanh toán của khoản thanh toán với số tiền được trả cao hơn 300 hoặc với loại thanh toán là 'kiểm tra'",
    "output": "SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  'Check'"
  },
  {
    "instruction": "",
    "input": "Tên và mô tả của các sản phẩm thuộc loại 'dao kéo' và có chi phí thuê hàng ngày thấp hơn 20?",
    "output": "SELECT product_name ,  product_description FROM products_for_hire WHERE product_type_code  =  'Cutlery' AND daily_hire_cost  <  20"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu điện thoại?",
    "output": "SELECT count(*) FROM phone"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của điện thoại theo thứ tự tăng dần của giá.",
    "output": "SELECT Name FROM phone ORDER BY Price ASC"
  },
  {
    "instruction": "",
    "input": "Những kỷ niệm và người vận chuyển điện thoại là gì?",
    "output": "SELECT Memory_in_G ,  Carrier FROM phone"
  },
  {
    "instruction": "",
    "input": "Liệt kê các chất mang điện thoại riêng biệt với ký ức lớn hơn 32.",
    "output": "SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của điện thoại với nhà mạng \"Sprint\" hoặc \"Tmobile\".",
    "output": "SELECT Name FROM phone WHERE Carrier  =  \"Sprint\" OR Carrier  =  \"TMobile\""
  },
  {
    "instruction": "",
    "input": "Người vận chuyển của điện thoại đắt nhất là gì?",
    "output": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các chất mang điện thoại khác nhau cùng với số lượng điện thoại với mỗi nhà mạng.",
    "output": "SELECT Carrier ,  COUNT(*) FROM phone GROUP BY Carrier"
  },
  {
    "instruction": "",
    "input": "Hiển thị chất mang được sử dụng thường xuyên nhất của điện thoại.",
    "output": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các nhà mạng có cả hai điện thoại có bộ nhớ nhỏ hơn 32 và điện thoại có bộ nhớ lớn hơn 64.",
    "output": "SELECT Carrier FROM phone WHERE Memory_in_G  <  32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G  >  64"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của điện thoại và các quận của thị trường họ đang ở.",
    "output": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của điện thoại và các quận của thị trường họ đang ở, theo thứ tự tăng dần của bảng xếp hạng của thị trường.",
    "output": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của điện thoại có mặt trên thị trường với số lượng cửa hàng lớn hơn 50.",
    "output": "SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID WHERE T2.Num_of_shops  >  50"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi điện thoại, hiển thị tên và tổng số cổ phiếu của nó.",
    "output": "SELECT T2.Name ,  sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của điện thoại có tổng số cổ phiếu lớn hơn 2000, theo thứ tự giảm dần của tổng số cổ phiếu.",
    "output": "SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name HAVING sum(T1.Num_of_stock)  >=  2000 ORDER BY sum(T1.Num_of_stock) DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của điện thoại không có trên bất kỳ thị trường nào.",
    "output": "SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market)"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu công ty khí đốt?",
    "output": "SELECT count(*) FROM company"
  },
  {
    "instruction": "",
    "input": "Tổng số công ty là bao nhiêu?",
    "output": "SELECT count(*) FROM company"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên công ty và thứ hạng cho tất cả các công ty theo thứ tự giảm doanh số của họ.",
    "output": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC"
  },
  {
    "instruction": "",
    "input": "Tên và cấp bậc của mỗi công ty được đặt hàng bởi số lượng bán hàng là gì?",
    "output": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên công ty và ngành công nghiệp chính cho tất cả các công ty có trụ sở chính không đến từ Hoa Kỳ.",
    "output": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'"
  },
  {
    "instruction": "",
    "input": "Các công ty và ngành công nghiệp chính của tất cả các công ty không có trụ sở tại Hoa Kỳ là gì?",
    "output": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả tên công ty và trụ sở theo thứ tự giảm dần giá trị thị trường.",
    "output": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC"
  },
  {
    "instruction": "",
    "input": "Tên và trụ sở của tất cả các công ty được đặt hàng theo giá trị thị trường giảm dần là gì?",
    "output": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị giá trị thị trường tối thiểu, tối đa và trung bình cho tất cả các công ty.",
    "output": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company"
  },
  {
    "instruction": "",
    "input": "Giá trị thị trường tối thiểu, tối đa và trung bình cho mỗi công ty là bao nhiêu?",
    "output": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các ngành công nghiệp chính cho tất cả các công ty.",
    "output": "SELECT DISTINCT main_industry FROM company"
  },
  {
    "instruction": "",
    "input": "Các ngành công nghiệp chính khác nhau cho tất cả các công ty là gì?",
    "output": "SELECT DISTINCT main_industry FROM company"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các trụ sở chính và số lượng các công ty trong mỗi trụ sở chính.",
    "output": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi trụ sở, trụ sở chính là gì và có bao nhiêu công ty tập trung ở đó?",
    "output": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các ngành công nghiệp chính và tổng giá trị thị trường trong mỗi ngành.",
    "output": "SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry"
  },
  {
    "instruction": "",
    "input": "Các ngành công nghiệp chính và tổng giá trị thị trường cho mỗi ngành là gì?",
    "output": "SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry"
  },
  {
    "instruction": "",
    "input": "Liệt kê ngành công nghiệp chính với tổng giá trị thị trường cao nhất và số lượng công ty của nó.",
    "output": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ngành công nghiệp chính, tổng số công ty cho ngành có tổng giá trị thị trường cao nhất là bao nhiêu?",
    "output": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị trụ sở với ít nhất hai công ty trong ngành ngân hàng.",
    "output": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Trụ sở chính với ít nhất hai công ty trong ngành ngân hàng là gì?",
    "output": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID trạm xăng, vị trí và người quản lý_name cho tất cả các trạm xăng được đặt hàng vào năm mở.",
    "output": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year"
  },
  {
    "instruction": "",
    "input": "ID trạm xăng, địa điểm và tên quản lý cho các trạm xăng được đặt hàng trước năm khai trương là gì?",
    "output": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trạm xăng được mở từ năm 2000 đến 2005?",
    "output": "SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005"
  },
  {
    "instruction": "",
    "input": "Tổng số trạm khí được mở từ năm 2000 đến 2005 là bao nhiêu?",
    "output": "SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các vị trí và số lượng trạm khí trong mỗi vị trí được đặt hàng theo số lượng.",
    "output": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi địa điểm, có bao nhiêu trạm xăng theo thứ tự?",
    "output": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các trụ sở với cả một công ty trong ngành ngân hàng và một công ty về dầu khí.",
    "output": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'"
  },
  {
    "instruction": "",
    "input": "Trụ sở có cả một công ty trong ngành ngân hàng và 'dầu khí' là gì?",
    "output": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các trụ sở mà không có một công ty trong ngành ngân hàng.",
    "output": "SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Banking'"
  },
  {
    "instruction": "",
    "input": "Trụ sở không có công ty trong ngành ngân hàng là gì?",
    "output": "SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Banking'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên công ty với số lượng trạm xăng.",
    "output": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ID công ty, các công ty là bao nhiêu và mỗi trạm vận hành là bao nhiêu trạm xăng?",
    "output": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên công ty và ngành công nghiệp chính mà không có trạm xăng.",
    "output": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)"
  },
  {
    "instruction": "",
    "input": "Các ngành công nghiệp chính của các công ty không có trạm xăng là gì và các công ty là gì?",
    "output": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên người quản lý cho các trạm xăng thuộc công ty ExxonMobil.",
    "output": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'"
  },
  {
    "instruction": "",
    "input": "Tên của các nhà quản lý cho các trạm xăng được vận hành bởi Công ty ExxonMobil là gì?",
    "output": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các địa điểm nơi đặt một trạm xăng cho công ty có giá trị thị trường lớn hơn 100.",
    "output": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100"
  },
  {
    "instruction": "",
    "input": "Các địa điểm có các trạm xăng thuộc sở hữu của một công ty có giá trị thị trường lớn hơn 100 là gì?",
    "output": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên người quản lý với hầu hết các trạm xăng được mở sau năm 2000.",
    "output": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của người quản lý với nhiều trạm xăng nhất được mở sau năm 2000 là gì?",
    "output": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đặt hàng tất cả các vị trí trạm xăng vào năm khai mạc.",
    "output": "SELECT LOCATION FROM gas_station ORDER BY open_year"
  },
  {
    "instruction": "",
    "input": "Các vị trí của tất cả các trạm xăng được đặt hàng trước năm mở cửa là gì?",
    "output": "SELECT LOCATION FROM gas_station ORDER BY open_year"
  },
  {
    "instruction": "",
    "input": "Tìm cấp bậc, tên công ty, giá trị thị trường của các công ty trong đơn đặt hàng của ngành ngân hàng theo doanh số và lợi nhuận của họ hàng tỷ người.",
    "output": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion"
  },
  {
    "instruction": "",
    "input": "Thứ hạng, công ty và giá trị thị trường của mọi công ty trong ngành ngân hàng được đặt hàng theo doanh số và lợi nhuận là gì?",
    "output": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion"
  },
  {
    "instruction": "",
    "input": "Tìm vị trí và tên đại diện của các trạm xăng thuộc sở hữu của các công ty có 3 số tiền tài sản hàng đầu.",
    "output": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Các địa điểm và tên của đại diện của các trạm xăng thuộc sở hữu của các công ty với 3 lượng tài sản lớn nhất là gì?",
    "output": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu khu vực?",
    "output": "SELECT count(*) FROM region"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng khu vực.",
    "output": "SELECT count(*) FROM region"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên khu vực riêng biệt được đặt hàng bởi nhãn của họ.",
    "output": "SELECT DISTINCT region_name FROM region ORDER BY Label"
  },
  {
    "instruction": "",
    "input": "Các tên khu vực khác nhau, được đặt hàng bởi các nhãn là gì?",
    "output": "SELECT DISTINCT region_name FROM region ORDER BY Label"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu bên?",
    "output": "SELECT count(DISTINCT party_name) FROM party"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các bên khác nhau.",
    "output": "SELECT count(DISTINCT party_name) FROM party"
  },
  {
    "instruction": "",
    "input": "Hiển thị các bộ trưởng và thời gian họ lấy và rời văn phòng, được liệt kê vào thời điểm họ rời văn phòng.",
    "output": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office"
  },
  {
    "instruction": "",
    "input": "Ai là bộ trưởng, họ nhậm chức khi nào, và khi nào họ rời văn phòng, được đặt hàng khi họ rời văn phòng?",
    "output": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office"
  },
  {
    "instruction": "",
    "input": "Cho thấy Bộ trưởng nhậm chức sau năm 1961 hoặc trước năm 1959.",
    "output": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959"
  },
  {
    "instruction": "",
    "input": "Ai là bộ trưởng nhậm chức sau năm 1961 hoặc trước năm 1959?",
    "output": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959"
  },
  {
    "instruction": "",
    "input": "Cho thấy tất cả các bộ trưởng không thuộc về Đảng Tiến bộ.",
    "output": "SELECT minister FROM party WHERE party_name != 'Progress Party'"
  },
  {
    "instruction": "",
    "input": "Những bộ trưởng nào không phải là một phần của Đảng Tiến bộ?",
    "output": "SELECT minister FROM party WHERE party_name != 'Progress Party'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các bộ trưởng và các đảng mà họ thuộc về trật tự giảm dần thời gian họ nhậm chức.",
    "output": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC"
  },
  {
    "instruction": "",
    "input": "Các bộ trưởng là ai và họ thuộc về những bên nào, được liệt kê giảm dần bởi những lần họ nhậm chức?",
    "output": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC"
  },
  {
    "instruction": "",
    "input": "Trả lại bộ trưởng đã rời văn phòng vào thời điểm mới nhất.",
    "output": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Bộ trưởng nào rời văn phòng mới nhất?",
    "output": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên thành viên và tên đảng của họ.",
    "output": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id"
  },
  {
    "instruction": "",
    "input": "Tên của các thành viên và các bên tương ứng của họ là gì?",
    "output": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên bên và số lượng thành viên trong mỗi bên.",
    "output": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành viên trong mỗi bên?",
    "output": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
  },
  {
    "instruction": "",
    "input": "Tên của bữa tiệc với hầu hết các thành viên là gì?",
    "output": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của bữa tiệc với nhiều thành viên nhất.",
    "output": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả tên bên và tên khu vực của họ.",
    "output": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id"
  },
  {
    "instruction": "",
    "input": "Tên của các bên và các khu vực tương ứng của họ là gì?",
    "output": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các bên không có bất kỳ thành viên nào.",
    "output": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)"
  },
  {
    "instruction": "",
    "input": "Tên của các bên không có thành viên là gì?",
    "output": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các tên thành viên trong cả bên có ID 3 và bên có ID 1.",
    "output": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1"
  },
  {
    "instruction": "",
    "input": "Tên thành viên nào được chia sẻ giữa các thành viên trong bữa tiệc với ID 3 và bên có ID 1?",
    "output": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên thành viên không có trong bên tiến bộ.",
    "output": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\""
  },
  {
    "instruction": "",
    "input": "Tên thành viên nào tương ứng với các thành viên không có trong bên tiến bộ?",
    "output": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\""
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu sự kiện của đảng?",
    "output": "SELECT count(*) FROM party_events"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các sự kiện của đảng.",
    "output": "SELECT count(*) FROM party_events"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên bên và số lượng sự kiện cho mỗi bên.",
    "output": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sự kiện cho mỗi bên?",
    "output": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên thành viên không phụ trách bất kỳ sự kiện nào.",
    "output": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id"
  },
  {
    "instruction": "",
    "input": "Tên của các thành viên không phụ trách bất kỳ sự kiện nào là gì?",
    "output": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id"
  },
  {
    "instruction": "",
    "input": "Tên của các bên có ít nhất 2 sự kiện là gì?",
    "output": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Trả về tên của các bên có hai hoặc nhiều sự kiện.",
    "output": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tên thành viên phụ trách số lượng sự kiện lớn nhất là gì?",
    "output": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của thành viên phụ trách các sự kiện nhất.",
    "output": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm các tên sự kiện có nhiều hơn 2 bản ghi.",
    "output": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Tên sự kiện nào đã được sử dụng nhiều hơn hai lần cho các sự kiện bên?",
    "output": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sự kiện họp thường niên đã xảy ra ở khu vực Vương quốc Anh?",
    "output": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các sự kiện họp thường niên diễn ra trong khu vực của Vương quốc Anh.",
    "output": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phi công?",
    "output": "SELECT count(*) FROM pilot"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các phi công theo thứ tự tăng dần của cấp bậc.",
    "output": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC"
  },
  {
    "instruction": "",
    "input": "Các vị trí và đội của phi công là gì?",
    "output": "SELECT POSITION ,  Team FROM pilot"
  },
  {
    "instruction": "",
    "input": "Liệt kê các vị trí riêng biệt của các phi công lớn hơn 30.",
    "output": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các phi công từ Đội \"Bradley\" hoặc \"Fordham\".",
    "output": "SELECT Pilot_name FROM pilot WHERE Team  =  \"Bradley\" OR Team  =  \"Fordham\""
  },
  {
    "instruction": "",
    "input": "Năm tham gia của phi công của cấp bậc cao nhất là gì?",
    "output": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các quốc tịch khác nhau của phi công là gì?Hiển thị mỗi quốc tịch và số lượng phi công của mỗi quốc tịch.",
    "output": "SELECT Nationality ,  COUNT(*) FROM pilot GROUP BY Nationality"
  },
  {
    "instruction": "",
    "input": "Hiển thị quốc tịch phổ biến nhất của phi công.",
    "output": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các vị trí thí điểm có cả hai phi công tham gia sau năm 2005 và phi công tham gia trước năm 2000.",
    "output": "SELECT POSITION FROM pilot WHERE Join_Year\t <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year\t >  2005"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các phi công và mô hình máy bay mà họ đã bay cùng.",
    "output": "SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các phi công và hàng loạt hạm đội của các máy bay mà họ đã bay theo thứ tự tăng dần của cấp bậc của phi công.",
    "output": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank"
  },
  {
    "instruction": "",
    "input": "Hiển thị loạt hạm đội của các máy bay bay qua các phi công dưới 34 tuổi",
    "output": "SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID WHERE T3.Age  <  34"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các phi công và số lượng hồ sơ họ có.",
    "output": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các phi công có nhiều hơn một bản ghi.",
    "output": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các phi công không có hồ sơ.",
    "output": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)"
  },
  {
    "instruction": "",
    "input": "Chúng ta có mã trạng thái tài liệu nào?",
    "output": "SELECT document_status_code FROM Ref_Document_Status;"
  },
  {
    "instruction": "",
    "input": "Mô tả của mã trạng thái tài liệu 'làm việc' là gì?",
    "output": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = \"working\";"
  },
  {
    "instruction": "",
    "input": "Chúng ta có mã loại tài liệu nào?",
    "output": "SELECT document_type_code FROM Ref_Document_Types;"
  },
  {
    "instruction": "",
    "input": "Mô tả của loại tài liệu 'giấy' là gì?",
    "output": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = \"Paper\";"
  },
  {
    "instruction": "",
    "input": "Tên đại lý vận chuyển là gì?",
    "output": "SELECT shipping_agent_name FROM Ref_Shipping_Agents;"
  },
  {
    "instruction": "",
    "input": "Mã đại lý vận chuyển của đại lý vận chuyển lên là gì?",
    "output": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = \"UPS\";"
  },
  {
    "instruction": "",
    "input": "Tất cả các mã vai trò là gì?",
    "output": "SELECT role_code FROM ROLES;"
  },
  {
    "instruction": "",
    "input": "Mô tả của Code Code ed là gì?",
    "output": "SELECT role_description FROM ROLES WHERE role_code = \"ED\";"
  },
  {
    "instruction": "",
    "input": "Chúng tôi có bao nhiêu nhân viên?",
    "output": "SELECT count(*) FROM Employees;"
  },
  {
    "instruction": "",
    "input": "Vai trò của nhân viên tên là Koby là gì?",
    "output": "SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = \"Koby\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả ID tài liệu và ngày nhận của tài liệu.",
    "output": "SELECT document_id ,  receipt_date FROM Documents;"
  },
  {
    "instruction": "",
    "input": "Mỗi vai trò có bao nhiêu nhân viên?Liệt kê mô tả vai trò, ID và số lượng nhân viên.",
    "output": "SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code;"
  },
  {
    "instruction": "",
    "input": "Danh sách vai trò có nhiều hơn một nhân viên.Liệt kê các mô tả vai trò và số lượng nhân viên.",
    "output": "SELECT Roles.role_description , count(Employees.employee_id) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count(Employees.employee_id)  >  1;"
  },
  {
    "instruction": "",
    "input": "Mô tả trạng thái tài liệu của tài liệu với ID 1 là gì?",
    "output": "SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài liệu có mã trạng thái được thực hiện?",
    "output": "SELECT count(*) FROM Documents WHERE document_status_code = \"done\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê mã loại tài liệu cho tài liệu với ID 2.",
    "output": "SELECT document_type_code FROM Documents WHERE document_id = 2;"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID tài liệu cho bất kỳ tài liệu nào có mã trạng thái được thực hiện và giấy mã.",
    "output": "SELECT document_id FROM Documents WHERE document_status_code = \"done\" AND document_type_code = \"Paper\";"
  },
  {
    "instruction": "",
    "input": "Tên của tác nhân vận chuyển của tài liệu với ID 2 là gì?",
    "output": "SELECT Ref_Shipping_Agents.shipping_agent_name FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Documents.document_id = 2;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài liệu đã được USPS vận chuyển?",
    "output": "SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";"
  },
  {
    "instruction": "",
    "input": "Đại lý vận chuyển nào vận chuyển nhiều tài liệu nhất?Liệt kê tên đại lý vận chuyển và số lượng tài liệu.",
    "output": "SELECT Ref_Shipping_Agents.shipping_agent_name , count(Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count(Documents.document_id) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Ngày nhận của tài liệu với ID 3 là gì?",
    "output": "SELECT receipt_date FROM Documents WHERE document_id = 3;"
  },
  {
    "instruction": "",
    "input": "Địa chỉ nào là tài liệu với ID 4 được gửi đến?",
    "output": "SELECT Addresses.address_details FROM Addresses JOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE document_id = 4;"
  },
  {
    "instruction": "",
    "input": "Ngày thư của tài liệu với ID 7 là gì?",
    "output": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID tài liệu của các tài liệu với trạng thái được thực hiện và loại giấy, không được vận chuyển bởi đại lý vận chuyển có tên USPS.",
    "output": "SELECT document_id FROM Documents WHERE document_status_code  =  \"done\" AND document_type_code = \"Paper\" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";"
  },
  {
    "instruction": "",
    "input": "Danh sách ID tài liệu của trạng thái tài liệu được thực hiện và loại tài liệu là giấy và tài liệu được vận chuyển bởi tác nhân vận chuyển có tên USPS.",
    "output": "SELECT document_id FROM Documents WHERE document_status_code  =  \"done\" AND document_type_code = \"Paper\" INTERSECT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";"
  },
  {
    "instruction": "",
    "input": "Dự thảo chi tiết của tài liệu với ID 7 là gì?",
    "output": "SELECT draft_details FROM Document_Drafts WHERE document_id = 7;"
  },
  {
    "instruction": "",
    "input": "Tài liệu với ID 2 có bao nhiêu bản sao?",
    "output": "SELECT count(*) FROM Draft_Copies WHERE document_id = 2;"
  },
  {
    "instruction": "",
    "input": "Tài liệu nào có bản nháp nhiều nhất?Liệt kê ID tài liệu và số lượng bản sao của nó.",
    "output": "SELECT document_id , count(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(copy_number) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Những tài liệu nào có nhiều hơn 1 bản nháp?Liệt kê ID tài liệu và số lượng bản sao bản nháp.",
    "output": "SELECT document_id , count(*) FROM Draft_Copies GROUP BY document_id HAVING count(*)  >  1;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả nhân viên trong lịch sử lưu hành của tài liệu với ID 1. Liệt kê tên của nhân viên.",
    "output": "SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id WHERE Circulation_History.document_id = 1;"
  },
  {
    "instruction": "",
    "input": "Liệt kê các nhân viên chưa xuất hiện trong bất kỳ lịch sử lưu hành của tài liệu.Liệt kê tên của nhân viên.",
    "output": "SELECT employee_name FROM Employees EXCEPT SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id"
  },
  {
    "instruction": "",
    "input": "Nhân viên nào đã xuất hiện trong hầu hết các tài liệu lịch sử lưu hành.Liệt kê tên của nhân viên và số lượng bản nháp và bản sao.",
    "output": "SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi tài liệu, hãy liệt kê số lượng nhân viên đã xuất hiện trong lịch sử lưu hành của tài liệu đó.Liệt kê ID tài liệu và số lượng nhân viên.",
    "output": "SELECT document_id ,  count(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên bộ phận được đặt hàng theo ngày bắt đầu của họ.",
    "output": "SELECT dname FROM department ORDER BY mgr_start_date"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các tên phụ thuộc có mối quan hệ vợ / chồng với một số nhân viên.",
    "output": "SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phụ nữ phụ thuộc?",
    "output": "SELECT count(*) FROM dependent WHERE sex  =  'F'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các phòng ban được đặt tại Houston.",
    "output": "SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber  =  t2.dnumber WHERE t2.dlocation  =  'Houston'"
  },
  {
    "instruction": "",
    "input": "Trả lại tên và họ của nhân viên kiếm được hơn 30000 tiền lương.",
    "output": "SELECT fname ,  lname FROM employee WHERE salary  >  30000"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng nhân viên của mỗi giới có mức lương thấp hơn 50000.",
    "output": "SELECT count(*) ,  sex FROM employee WHERE salary  <  50000 GROUP BY sex"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên đầu tiên và cuối cùng, và địa chỉ của tất cả nhân viên theo thứ tự tăng dần của ngày sinh của họ.",
    "output": "SELECT fname ,  lname ,  address FROM employee ORDER BY Bdate"
  },
  {
    "instruction": "",
    "input": "Các chi tiết sự kiện của các dịch vụ có mã 'hôn nhân' là gì?",
    "output": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID  =  T2.Service_ID WHERE T2.Service_Type_Code  =  'Marriage'"
  },
  {
    "instruction": "",
    "input": "ID và chi tiết của các sự kiện có nhiều hơn một người tham gia là gì?",
    "output": "SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Mỗi người tham gia có bao nhiêu sự kiện?Liệt kê ID người tham gia, loại và số.",
    "output": "SELECT T1.Participant_ID ,  T1.Participant_Type_Code ,  count(*) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID GROUP BY T1.Participant_ID"
  },
  {
    "instruction": "",
    "input": "Tất cả các ID người tham gia, mã loại và chi tiết là gì?",
    "output": "SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người tham gia thuộc loại 'nhà tổ chức'?",
    "output": "SELECT count(*) FROM participants WHERE participant_type_code  =  'Organizer'"
  },
  {
    "instruction": "",
    "input": "Liệt kê loại dịch vụ theo thứ tự bảng chữ cái.",
    "output": "SELECT service_type_code FROM services ORDER BY service_type_code"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID dịch vụ và chi tiết cho các sự kiện.",
    "output": "SELECT service_id ,  event_details FROM EVENTS"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sự kiện đã có những người tham gia có chi tiết có \"Tiến sĩ '",
    "output": "SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'"
  },
  {
    "instruction": "",
    "input": "Loại người tham gia phổ biến nhất là gì?",
    "output": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID dịch vụ và loại có số lượng người tham gia ít nhất?",
    "output": "SELECT T3.service_id ,  T4.Service_Type_Code FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID JOIN EVENTS AS T3 ON T2.Event_ID   =  T3.Event_ID JOIN services AS T4 ON T3.service_id  =  T4.service_id GROUP BY T3.service_id ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của sự kiện với nhiều người tham gia nhất là gì?",
    "output": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID sự kiện nào không có người tham gia với chi tiết 'Kenyatta Kuhn'?",
    "output": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Kenyatta Kuhn'"
  },
  {
    "instruction": "",
    "input": "Loại dịch vụ nào có cả chi tiết sự kiện thành công và thất bại?",
    "output": "SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Success' INTERSECT SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Fail'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sự kiện không có bất kỳ người tham gia?",
    "output": "SELECT count(*) FROM EVENTS WHERE event_id NOT IN (SELECT event_id FROM Participants_in_Events)"
  },
  {
    "instruction": "",
    "input": "Tất cả các ID người tham gia khác biệt đã tham dự bất kỳ sự kiện nào là gì?",
    "output": "SELECT count(DISTINCT participant_id) FROM participants_in_Events"
  },
  {
    "instruction": "",
    "input": "Tên của cuộc đua được tổ chức gần đây nhất là gì?",
    "output": "SELECT name FROM races ORDER BY date DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của cuộc đua xảy ra gần đây nhất là gì?",
    "output": "SELECT name FROM races ORDER BY date DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và ngày của cuộc đua gần đây nhất là gì?",
    "output": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và ngày của cuộc đua xảy ra gần đây nhất là gì?",
    "output": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các chủng tộc được tổ chức trong năm 2017.",
    "output": "SELECT name FROM races WHERE YEAR = 2017"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các cuộc đua xảy ra trong năm 2017 là gì?",
    "output": "SELECT name FROM races WHERE YEAR = 2017"
  },
  {
    "instruction": "",
    "input": "Tìm tên riêng biệt của tất cả các chủng tộc được tổ chức từ năm 2014 đến 2017?",
    "output": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017"
  },
  {
    "instruction": "",
    "input": "Những cái tên duy nhất của tất cả các chủng tộc được tổ chức từ năm 2014 đến 2017 là gì?",
    "output": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên tuổi và họ của tất cả các trình điều khiển riêng biệt đã từng có máy tính xách tay dưới 93000 mili giây?",
    "output": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000"
  },
  {
    "instruction": "",
    "input": "Các tên tuổi và họ của tất cả các tài xế độc đáo có thời gian vòng đua dưới 93000 mili giây là gì?",
    "output": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các ID và quốc tịch riêng biệt của các tài xế đã có máy tính xách tay hơn 100000 mili giây?",
    "output": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000"
  },
  {
    "instruction": "",
    "input": "Các ID lái xe và quốc tịch khác nhau của tất cả các tài xế có máy tính xách tay hơn 100000 mili giây là gì?",
    "output": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000"
  },
  {
    "instruction": "",
    "input": "Tên tuổi và họ của người lái xe có máy tính xách tay nhỏ nhất là gì?",
    "output": "SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên tuổi và họ của người lái xe với máy tính xách tay ngắn nhất là gì?",
    "output": "SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID và tên gia đình của người lái xe có máy tính xách tay dài nhất là gì?",
    "output": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID và tên cuối cùng của người lái xe có máy tính xách tay dài nhất là gì?",
    "output": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID, forename và họ của người lái xe có vị trí đầu tiên về thời gian vòng ít nhất là gì?",
    "output": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "ID, tên đầu tiên và họ của người lái xe ở vị trí đầu tiên cho Laptime ít nhất là gì?",
    "output": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài xế tham gia cuộc đua Grand Prix Úc được tổ chức vào năm 2009?",
    "output": "SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = \"Australian Grand Prix\" AND YEAR = 2009"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài xế trong Grand Prix Úc được tổ chức vào năm 2009?",
    "output": "SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = \"Australian Grand Prix\" AND YEAR = 2009"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài xế không tham gia vào các cuộc đua được tổ chức vào năm 2009?",
    "output": "SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài xế không chạy đua trong năm 2009?",
    "output": "SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )"
  },
  {
    "instruction": "",
    "input": "Cho tôi một danh sách các tên và năm của các cuộc đua có bất kỳ tài xế nào có tên tuổi của họ là Lewis?",
    "output": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\""
  },
  {
    "instruction": "",
    "input": "Tên và năm của tất cả các chủng tộc có tài xế với họ Lewis là gì?",
    "output": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\""
  },
  {
    "instruction": "",
    "input": "Tìm tên tuổi và họ của những người lái xe có quốc tịch là người Đức?",
    "output": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tất cả các tài xế Đức là gì?",
    "output": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\""
  },
  {
    "instruction": "",
    "input": "Tìm ID và tên tuổi của các tài xế đã tham gia cả hai cuộc đua có tên là Grand Prix Úc và các cuộc đua với tên Trung Quốc Grand Prix?",
    "output": "SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Chinese Grand Prix\""
  },
  {
    "instruction": "",
    "input": "ID và tên đầu tiên của tất cả các tài xế đã tham gia Grand Prix và Grand Prix của Úc là gì?",
    "output": "SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Chinese Grand Prix\""
  },
  {
    "instruction": "",
    "input": "Các tên tuổi và họ của các tài xế đã tham gia vào các cuộc đua tên là Grand Prix của Úc nhưng không phải là các chủng tộc tên là Trung Quốc Grand Prix?",
    "output": "SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tất cả các tài xế đã tham gia Grand Prix của Úc nhưng không phải là Grand Prix Trung Quốc là gì?",
    "output": "SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các tên tuổi của những người lái xe khác biệt, những người ở vị trí 1 là đứng và giành chiến thắng?",
    "output": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1"
  },
  {
    "instruction": "",
    "input": "Tất cả các tên đầu tiên khác nhau của các tài xế đang ở vị trí là đứng và giành chiến thắng là gì?",
    "output": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các tên tuổi của các tài xế khác biệt đã giành được vị trí 1 khi lái xe và có hơn 20 điểm?",
    "output": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của các trình điều khiển khác nhau đã giành được vị trí 1 khi lái xe và có hơn 20 điểm là gì?",
    "output": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20"
  },
  {
    "instruction": "",
    "input": "Số lượng nhà xây dựng cho các quốc tịch khác nhau là gì?",
    "output": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi quốc tịch, có bao nhiêu nhà xây dựng khác nhau?",
    "output": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality"
  },
  {
    "instruction": "",
    "input": "Số lượng chủng tộc cho mỗi ID của hàm tạo là gì?",
    "output": "SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ID nhà xây dựng, có bao nhiêu cuộc đua?",
    "output": "SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid"
  },
  {
    "instruction": "",
    "input": "Tên của các chủng tộc được tổ chức sau năm 2017 và các mạch là ở đất nước Tây Ban Nha là gì?",
    "output": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017"
  },
  {
    "instruction": "",
    "input": "Tên của các chủng tộc được tổ chức sau năm 2017 ở Tây Ban Nha là gì?",
    "output": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017"
  },
  {
    "instruction": "",
    "input": "Những tên độc đáo của các chủng tộc được tổ chức sau năm 2000 và các mạch ở Tây Ban Nha là gì?",
    "output": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2000"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các chủng tộc được tổ chức sau năm 2000 ở Tây Ban Nha là gì?",
    "output": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2000"
  },
  {
    "instruction": "",
    "input": "Tìm ID trình điều khiển riêng biệt và số điểm dừng của tất cả các trình điều khiển có thời gian dừng hố ngắn hơn so với một số trình điều khiển trong cuộc đua với ID 841.",
    "output": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)"
  },
  {
    "instruction": "",
    "input": "ID và số dừng cho mỗi trình điều khiển có điểm dừng hố ngắn hơn so với trình điều khiển trong cuộc đua với ID 841?",
    "output": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)"
  },
  {
    "instruction": "",
    "input": "Tìm ID trình điều khiển riêng biệt của tất cả các trình điều khiển có thời gian dừng dài hơn một số trình điều khiển trong cuộc đua có ID là 841?",
    "output": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)"
  },
  {
    "instruction": "",
    "input": "Các ID khác nhau và thời lượng dừng của tất cả các trình điều khiển có điểm dừng kéo dài hơn so với người lái xe trong cuộc đua với ID 841 là gì?",
    "output": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên tuổi của tất cả các trình điều khiển riêng biệt theo thứ tự bảng chữ cái?",
    "output": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các trình điều khiển khác nhau theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các chủng tộc riêng biệt theo thứ tự từ vựng đảo ngược?",
    "output": "SELECT DISTINCT name FROM races ORDER BY name DESC"
  },
  {
    "instruction": "",
    "input": "Tên khác nhau của tất cả các chủng tộc theo thứ tự bảng chữ cái ngược là gì?",
    "output": "SELECT DISTINCT name FROM races ORDER BY name DESC"
  },
  {
    "instruction": "",
    "input": "Tên của các chủng tộc được tổ chức từ năm 2009 đến 2011 là gì?",
    "output": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các chủng tộc được tổ chức từ năm 2009 đến 2011 là gì?",
    "output": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011"
  },
  {
    "instruction": "",
    "input": "Tên của các chủng tộc được tổ chức sau 12:00:00 hoặc trước 09:00:00 là gì?",
    "output": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các chủng tộc xảy ra sau 12:00:00 hoặc trước 09:00:00 là gì?",
    "output": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\""
  },
  {
    "instruction": "",
    "input": "Những người lái xe đầu tiên, họ và ID đã có hơn 8 điểm dừng hoặc tham gia vào hơn 5 kết quả cuộc đua là gì?",
    "output": "SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của trình điều khiển, họ và ID cho tất cả những người có hơn 8 điểm dừng hoặc tham gia vào hơn 5 cuộc đua là gì?",
    "output": "SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"
  },
  {
    "instruction": "",
    "input": "Họ và ID của người lái xe đã có 11 điểm dừng chân và tham gia vào hơn 5 kết quả cuộc đua là gì?",
    "output": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"
  },
  {
    "instruction": "",
    "input": "Tên và ID cuối cùng của tất cả các tài xế đã có 11 điểm dừng chân và tham gia hơn 5 cuộc đua là gì?",
    "output": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"
  },
  {
    "instruction": "",
    "input": "ID và họ của tài xế đã tham gia vào các cuộc đua nhất sau năm 2010 là gì?",
    "output": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID và họ của tài xế đã tham gia vào các cuộc đua nhất sau năm 2010 là gì?",
    "output": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của các mạch thuộc về Vương quốc Anh hoặc Malaysia là gì?",
    "output": "SELECT name FROM circuits WHERE country = \"UK\" OR country = \"Malaysia\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các mạch ở Anh hoặc Malaysia là gì?",
    "output": "SELECT name FROM circuits WHERE country = \"UK\" OR country = \"Malaysia\""
  },
  {
    "instruction": "",
    "input": "Tìm ID và vị trí của các mạch thuộc về Pháp hoặc Bỉ?",
    "output": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\""
  },
  {
    "instruction": "",
    "input": "ID và vị trí của tất cả các mạch ở Pháp hoặc Bỉ là gì?",
    "output": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các nhà xây dựng Nhật Bản đã từng kiếm được hơn 5 điểm?",
    "output": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các nhà xây dựng Nhật Bản đã kiếm được hơn 5 điểm là gì?",
    "output": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5"
  },
  {
    "instruction": "",
    "input": "Tốc độ vòng đua nhanh nhất trung bình trong cuộc đua có tên là 'Monaco Grand Prix' vào năm 2008 là bao nhiêu?",
    "output": "SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\""
  },
  {
    "instruction": "",
    "input": "Tốc độ vòng đua nhanh nhất trung bình cho Monaco Grand Prix năm 2008 là bao nhiêu?",
    "output": "SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\""
  },
  {
    "instruction": "",
    "input": "Tốc độ vòng đua nhanh nhất tối đa trong cuộc đua có tên là 'Monaco Grand Prix' vào năm 2008 là bao nhiêu?",
    "output": "SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\""
  },
  {
    "instruction": "",
    "input": "Tốc độ vòng đua nhanh nhất tối đa trong Monaco Grand Prix năm 2008 là bao nhiêu?",
    "output": "SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\""
  },
  {
    "instruction": "",
    "input": "Tốc độ vòng đua nhanh nhất tối đa trong các cuộc đua được tổ chức sau năm 2004 được nhóm theo tên chủng tộc và được đặt hàng theo năm là gì?",
    "output": "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi tên cuộc đua, tốc độ vòng đua nhanh nhất tối đa cho các cuộc đua sau năm 2004 được đặt hàng theo năm là bao nhiêu?",
    "output": "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year"
  },
  {
    "instruction": "",
    "input": "Tốc độ vòng đua nhanh nhất trung bình trong các cuộc đua được tổ chức sau năm 2004 được nhóm theo tên cuộc đua và được đặt hàng theo năm là gì?",
    "output": "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year"
  },
  {
    "instruction": "",
    "input": "Tốc độ vòng đua nhanh nhất trung bình cho các cuộc đua được tổ chức sau năm 2004, cho mỗi cuộc đua, được đặt hàng theo năm là bao nhiêu?",
    "output": "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year"
  },
  {
    "instruction": "",
    "input": "Tìm ID, Forename và số lượng cuộc đua của tất cả các tài xế ít nhất đã tham gia vào hai cuộc đua?",
    "output": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "ID, Forename và số lượng cuộc đua cho tất cả các tài xế đã tham gia vào ít nhất 2 chủng tộc?",
    "output": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tìm ID lái xe và số lượng cuộc đua của tất cả các tài xế đã tham gia nhiều nhất trong 30 cuộc đua?",
    "output": "SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ID của một tài xế tham gia nhiều nhất là 30 cuộc đua, họ đã tham gia bao nhiêu cuộc đua?",
    "output": "SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30"
  },
  {
    "instruction": "",
    "input": "Tìm ID và họ của người lái xe đã tham gia số lượng cuộc đua nhất?",
    "output": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID và tên cuối cùng của tất cả các trình điều khiển đã tham gia vào các cuộc đua nhất là gì?",
    "output": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu kỹ thuật viên?",
    "output": "SELECT count(*) FROM technician"
  },
  {
    "instruction": "",
    "input": "Số lượng kỹ thuật viên là gì?",
    "output": "SELECT count(*) FROM technician"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các kỹ thuật viên theo thứ tự tăng dần của tuổi.",
    "output": "SELECT Name FROM technician ORDER BY Age ASC"
  },
  {
    "instruction": "",
    "input": "Tên của các kỹ thuật viên theo thứ tự tăng dần của tuổi là gì?",
    "output": "SELECT Name FROM technician ORDER BY Age ASC"
  },
  {
    "instruction": "",
    "input": "Đội ngũ và năm bắt đầu của các kỹ thuật viên là gì?",
    "output": "SELECT Team ,  Starting_Year FROM technician"
  },
  {
    "instruction": "",
    "input": "Nhóm và năm bắt đầu cho mỗi kỹ thuật viên là gì?",
    "output": "SELECT Team ,  Starting_Year FROM technician"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các kỹ thuật viên có đội không phải là \"NYY\".",
    "output": "SELECT Name FROM technician WHERE Team != \"NYY\""
  },
  {
    "instruction": "",
    "input": "Tên của kỹ thuật viên có đội không 'NYY' là gì?",
    "output": "SELECT Name FROM technician WHERE Team != \"NYY\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các kỹ thuật viên ở độ tuổi 36 hoặc 37",
    "output": "SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37"
  },
  {
    "instruction": "",
    "input": "Tên của các kỹ thuật viên ở độ tuổi 36 hoặc 37 là gì?",
    "output": "SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37"
  },
  {
    "instruction": "",
    "input": "Năm bắt đầu của các kỹ thuật viên lâu đời nhất là gì?",
    "output": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Năm bắt đầu cho kỹ thuật viên lâu đời nhất là gì?",
    "output": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các nhóm kỹ thuật viên khác nhau và số lượng kỹ thuật viên trong mỗi đội.",
    "output": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi đội, có bao nhiêu kỹ thuật viên?",
    "output": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị nhóm có số lượng kỹ thuật viên nhiều nhất.",
    "output": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các đội có nhiều kỹ thuật viên nhất là gì?",
    "output": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị nhóm có ít nhất hai kỹ thuật viên.",
    "output": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Nhóm có ít nhất 2 kỹ thuật viên là gì?",
    "output": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các kỹ thuật viên và loạt máy mà họ được chỉ định sửa chữa.",
    "output": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID"
  },
  {
    "instruction": "",
    "input": "Tên của các kỹ thuật viên và loạt máy mà họ sửa chữa là gì?",
    "output": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các kỹ thuật viên theo thứ tự tăng dần của thứ hạng chất lượng của máy mà họ được chỉ định.",
    "output": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank"
  },
  {
    "instruction": "",
    "input": "Tên của các kỹ thuật viên theo thứ tự tăng dần của thứ hạng chất lượng cho máy mà họ được chỉ định là gì?",
    "output": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các kỹ thuật viên được chỉ định để sửa chữa máy có giá trị hơn 70.",
    "output": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID WHERE T2.value_points  >  70"
  },
  {
    "instruction": "",
    "input": "Tên của các kỹ thuật viên được gán cho các máy sửa chữa với nhiều giá trị điểm hơn 70 là gì?",
    "output": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID WHERE T2.value_points  >  70"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các kỹ thuật viên và số lượng máy móc họ được chỉ định để sửa chữa.",
    "output": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name"
  },
  {
    "instruction": "",
    "input": "Tên của các kỹ thuật viên là gì và họ được chỉ định bao nhiêu máy để sửa chữa?",
    "output": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các kỹ thuật viên chưa được chỉ định để sửa chữa máy.",
    "output": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)"
  },
  {
    "instruction": "",
    "input": "Tên của các kỹ thuật viên chưa được chỉ định cho máy sửa chữa là gì?",
    "output": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)"
  },
  {
    "instruction": "",
    "input": "Hiển thị những năm bắt đầu được chia sẻ bởi các kỹ thuật viên từ nhóm \"CLE\" và \"CWS\".",
    "output": "SELECT Starting_Year FROM technician WHERE Team  =  \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"CWS\""
  },
  {
    "instruction": "",
    "input": "Những năm bắt đầu được chia sẻ bởi các kỹ thuật viên từ nhóm \"CLE\" hoặc \"CWS\" là gì?",
    "output": "SELECT Starting_Year FROM technician WHERE Team  =  \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"CWS\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu doanh nhân?",
    "output": "SELECT count(*) FROM entrepreneur"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng doanh nhân.",
    "output": "SELECT count(*) FROM entrepreneur"
  },
  {
    "instruction": "",
    "input": "Liệt kê các công ty của các doanh nhân theo thứ tự giảm giá tiền được yêu cầu.",
    "output": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC"
  },
  {
    "instruction": "",
    "input": "Các công ty của các doanh nhân, được đặt hàng giảm dần theo số tiền được yêu cầu là gì?",
    "output": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê các công ty và các nhà đầu tư của các doanh nhân.",
    "output": "SELECT Company ,  Investor FROM entrepreneur"
  },
  {
    "instruction": "",
    "input": "Các công ty và nhà đầu tư tương ứng với mỗi doanh nhân là gì?",
    "output": "SELECT Company ,  Investor FROM entrepreneur"
  },
  {
    "instruction": "",
    "input": "Tiền trung bình được yêu cầu bởi tất cả các doanh nhân là gì?",
    "output": "SELECT avg(Money_Requested) FROM entrepreneur"
  },
  {
    "instruction": "",
    "input": "Trả lại tiền trung bình được yêu cầu trên tất cả các doanh nhân.",
    "output": "SELECT avg(Money_Requested) FROM entrepreneur"
  },
  {
    "instruction": "",
    "input": "Tên của những người theo thứ tự tăng dần của cân nặng là gì?",
    "output": "SELECT Name FROM People ORDER BY Weight ASC"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của mọi người, được đặt hàng theo trọng lượng tăng dần.",
    "output": "SELECT Name FROM People ORDER BY Weight ASC"
  },
  {
    "instruction": "",
    "input": "Tên của các doanh nhân là gì?",
    "output": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các doanh nhân.",
    "output": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID"
  },
  {
    "instruction": "",
    "input": "Tên của các doanh nhân có nhà đầu tư không phải là \"Rachel Elnaugh\" là gì?",
    "output": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\""
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các doanh nhân không có nhà đầu tư Rachel Elnaugh.",
    "output": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\""
  },
  {
    "instruction": "",
    "input": "Trọng lượng của người ngắn nhất là bao nhiêu?",
    "output": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại trọng lượng của người ngắn nhất.",
    "output": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của doanh nhân với trọng lượng lớn nhất là gì?",
    "output": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của doanh nhân nặng nhất.",
    "output": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền được yêu cầu bởi các doanh nhân có chiều cao hơn 1,85 là bao nhiêu?",
    "output": "SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85"
  },
  {
    "instruction": "",
    "input": "Cho tổng số tiền được yêu cầu bởi các doanh nhân cao hơn 1,85.",
    "output": "SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85"
  },
  {
    "instruction": "",
    "input": "Ngày sinh của các doanh nhân với nhà đầu tư \"Simon Woodroffe\" hay \"Peter Jones\" là gì?",
    "output": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\""
  },
  {
    "instruction": "",
    "input": "Trả lại ngày sinh cho các doanh nhân có nhà đầu tư Simon Woodroffe hoặc Peter Jones.",
    "output": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\""
  },
  {
    "instruction": "",
    "input": "Trọng lượng của các doanh nhân theo thứ tự giảm giá được yêu cầu là gì?",
    "output": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC"
  },
  {
    "instruction": "",
    "input": "Trả lại trọng số của các doanh nhân, được yêu cầu giảm dần theo số tiền được yêu cầu.",
    "output": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC"
  },
  {
    "instruction": "",
    "input": "Các nhà đầu tư của các doanh nhân và số lượng doanh nhân tương ứng được đầu tư bởi mỗi nhà đầu tư là gì?",
    "output": "SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu doanh nhân tương ứng với mỗi nhà đầu tư?",
    "output": "SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor"
  },
  {
    "instruction": "",
    "input": "Nhà đầu tư đã đầu tư vào số lượng doanh nhân nhất là gì?",
    "output": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại nhà đầu tư đã đầu tư vào số lượng doanh nhân lớn nhất.",
    "output": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các nhà đầu tư đã đầu tư vào ít nhất hai doanh nhân là gì?",
    "output": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Trả lại các nhà đầu tư đã đầu tư vào hai hoặc nhiều doanh nhân.",
    "output": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các doanh nhân và các công ty của họ theo thứ tự giảm giá tiền được yêu cầu?",
    "output": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested"
  },
  {
    "instruction": "",
    "input": "Tên của các doanh nhân và các nhà đầu tư tương ứng của họ là gì, được đặt hàng giảm dần bởi số tiền yêu cầu?",
    "output": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của những người không phải là doanh nhân.",
    "output": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)"
  },
  {
    "instruction": "",
    "input": "Tên của những người không phải là doanh nhân là gì?",
    "output": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các nhà đầu tư được chia sẻ bởi các doanh nhân yêu cầu hơn 140000 và các doanh nhân yêu cầu ít hơn 120000.",
    "output": "SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000"
  },
  {
    "instruction": "",
    "input": "Các nhà đầu tư đã đầu tư vào cả hai doanh nhân đã yêu cầu hơn 140000 và các doanh nhân yêu cầu ít hơn 120000?",
    "output": "SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu công ty riêng biệt ở đó?",
    "output": "SELECT count(DISTINCT Company) FROM entrepreneur"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các công ty khác nhau.",
    "output": "SELECT count(DISTINCT Company) FROM entrepreneur"
  },
  {
    "instruction": "",
    "input": "Hiển thị công ty của doanh nhân cao nhất.",
    "output": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Công ty nào được bắt đầu bởi doanh nhân với chiều cao lớn nhất?",
    "output": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thủ phạm?",
    "output": "SELECT count(*) FROM perpetrator"
  },
  {
    "instruction": "",
    "input": "Liệt kê ngày của thủ phạm theo thứ tự giảm dần số người thiệt mạng.",
    "output": "SELECT Date FROM perpetrator ORDER BY Killed DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê số người bị thương bởi thủ phạm theo thứ tự tăng dần.",
    "output": "SELECT Injured FROM perpetrator ORDER BY Injured ASC"
  },
  {
    "instruction": "",
    "input": "Số người trung bình bị thương bởi tất cả các thủ phạm là bao nhiêu?",
    "output": "SELECT avg(Injured) FROM perpetrator"
  },
  {
    "instruction": "",
    "input": "Vị trí của thủ phạm với những vụ giết người lớn nhất là gì.",
    "output": "SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của những người theo thứ tự chiều cao tăng dần là gì?",
    "output": "SELECT Name FROM People ORDER BY Height ASC"
  },
  {
    "instruction": "",
    "input": "Tên của thủ phạm là gì?",
    "output": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID"
  },
  {
    "instruction": "",
    "input": "Tên của thủ phạm có đất nước không phải là \"Trung Quốc\" là gì?",
    "output": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country != \"China\""
  },
  {
    "instruction": "",
    "input": "Tên của thủ phạm với trọng lượng lớn nhất là gì.",
    "output": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Weight DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tổng số giết chết thủ phạm với chiều cao hơn 1,84.",
    "output": "SELECT sum(T2.Killed) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  1.84"
  },
  {
    "instruction": "",
    "input": "Tên của thủ phạm ở quốc gia \"Trung Quốc\" hay \"Nhật Bản\" là gì?",
    "output": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country  =  \"China\" OR T2.Country  =  \"Japan\""
  },
  {
    "instruction": "",
    "input": "Chiều cao của thủ phạm theo thứ tự giảm dần của số người họ bị thương là gì?",
    "output": "SELECT T1.Height FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Injured DESC"
  },
  {
    "instruction": "",
    "input": "Các quốc gia của thủ phạm là gì?Hiển thị mỗi quốc gia và số lượng thủ phạm tương ứng ở đó.",
    "output": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country"
  },
  {
    "instruction": "",
    "input": "Quốc gia có nhiều thủ phạm nhất là gì?",
    "output": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các quốc gia có ít nhất hai thủ phạm là gì?",
    "output": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của thủ phạm theo thứ tự giảm dần của năm.",
    "output": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Year DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của những người không phải là thủ phạm.",
    "output": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)"
  },
  {
    "instruction": "",
    "input": "Cho thấy các quốc gia có cả thủ phạm bị thương hơn 50 và thủ phạm bị thương nhỏ hơn 20.",
    "output": "SELECT Country FROM perpetrator WHERE Injured  >  50 INTERSECT SELECT Country FROM perpetrator WHERE Injured  <  20"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu địa điểm riêng biệt của thủ phạm?",
    "output": "SELECT count(DISTINCT LOCATION) FROM perpetrator"
  },
  {
    "instruction": "",
    "input": "Hiển thị ngày của thủ phạm cao nhất.",
    "output": "SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tội phạm gần đây nhất vào năm nào?",
    "output": "SELECT max(YEAR) FROM perpetrator;"
  },
  {
    "instruction": "",
    "input": "Báo cáo tên của tất cả các cơ sở tại Hạt Los Angeles.",
    "output": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""
  },
  {
    "instruction": "",
    "input": "Những cơ sở nào được đặt tại Quận Los Angeles?",
    "output": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các cơ sở nằm ở Chico là gì?",
    "output": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\""
  },
  {
    "instruction": "",
    "input": "Những khuôn viên nào được đặt tại Chico?",
    "output": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các cơ sở được mở vào năm 1958.",
    "output": "SELECT campus FROM campuses WHERE YEAR  =  1958"
  },
  {
    "instruction": "",
    "input": "Các cơ sở được mở vào năm 1958 là gì?",
    "output": "SELECT campus FROM campuses WHERE YEAR  =  1958"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các trường được mở trước năm 1800.",
    "output": "SELECT campus FROM campuses WHERE YEAR  <  1800"
  },
  {
    "instruction": "",
    "input": "Những trường nào đã mở trước năm 1800?",
    "output": "SELECT campus FROM campuses WHERE YEAR  <  1800"
  },
  {
    "instruction": "",
    "input": "Khuôn viên nào được mở từ năm 1935 đến 1939?",
    "output": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939"
  },
  {
    "instruction": "",
    "input": "Những cơ sở nào mở ra từ năm 1935 đến 1939?",
    "output": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các cơ sở ở Northridge, Los Angeles hoặc ở San Francisco, San Francisco.",
    "output": "SELECT campus FROM campuses WHERE LOCATION  =  \"Northridge\" AND county  =  \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"San Francisco\" AND county  =  \"San Francisco\""
  },
  {
    "instruction": "",
    "input": "Những cơ sở nào được đặt tại Northridge, Los Angeles hoặc ở San Francisco, San Francisco?",
    "output": "SELECT campus FROM campuses WHERE LOCATION  =  \"Northridge\" AND county  =  \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"San Francisco\" AND county  =  \"San Francisco\""
  },
  {
    "instruction": "",
    "input": "Phí trong khuôn viên trường của \"Đại học bang San Jose\" vào năm 1996 là bao nhiêu?",
    "output": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND T2.year  =  1996"
  },
  {
    "instruction": "",
    "input": "Phí trong khuôn viên trường cho Đại học bang San Jose năm 1996 là bao nhiêu?",
    "output": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND T2.year  =  1996"
  },
  {
    "instruction": "",
    "input": "Phí trong khuôn viên trường của \"Đại học bang San Francisco\" vào năm 1996 là bao nhiêu?",
    "output": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND T2.year  =  1996"
  },
  {
    "instruction": "",
    "input": "Phí trong khuôn viên trường cho Đại học bang San Francisco năm 1996 là bao nhiêu?",
    "output": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND T2.year  =  1996"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các trường đại học có phí trường lớn hơn phí trung bình trong khuôn viên trường.",
    "output": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường đại học có một khoản phí trường cao hơn trung bình?",
    "output": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các trường đại học có phí trường lớn hơn phí trung bình trong khuôn viên trường.",
    "output": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường đại học có một khoản phí trường lớn hơn mức trung bình?",
    "output": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)"
  },
  {
    "instruction": "",
    "input": "Trường đại học nào ở Hạt Los Angeles và được mở sau năm 1950?",
    "output": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950"
  },
  {
    "instruction": "",
    "input": "Những cơ sở nào được đặt tại Hạt Los Angeles và mở sau năm 1950?",
    "output": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950"
  },
  {
    "instruction": "",
    "input": "Năm nào có nhiều bằng cấp nhất?",
    "output": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Năm nào được trao nhiều bằng nhiều hơn?",
    "output": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Khuôn viên nào có nhiều bằng cấp nhất mọi lúc?",
    "output": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trường nào có nhiều mức độ nhất được trao cho toàn bộ sự tồn tại của nó?",
    "output": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Khuôn viên nào có nhiều khoa nhất trong năm 2003?",
    "output": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Khuôn viên nào có nhiều khoa nhất trong năm 2003?",
    "output": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm phí trung bình trong khuôn viên CSU vào năm 1996",
    "output": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996"
  },
  {
    "instruction": "",
    "input": "Phí trung bình cho một khuôn viên CSU trong năm 1996 là bao nhiêu?",
    "output": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996"
  },
  {
    "instruction": "",
    "input": "Phí trung bình trong khuôn viên CSU năm 2005 là bao nhiêu?",
    "output": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005"
  },
  {
    "instruction": "",
    "input": "Phí trung bình cho một khuôn viên CSU trong năm 2005 là bao nhiêu?",
    "output": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005"
  },
  {
    "instruction": "",
    "input": "Báo cáo tổng số bằng cấp được cấp từ năm 1998 đến 2002.",
    "output": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu độ được trao từ năm 1998 đến 2002?",
    "output": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi khuôn viên của Quận Cam, báo cáo số lượng bằng cấp được cấp sau năm 2000.",
    "output": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus"
  },
  {
    "instruction": "",
    "input": "Tổng số bằng cấp được cấp sau năm 2000 cho mỗi khuôn viên của Quận Cam là bao nhiêu?",
    "output": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khuôn viên có nhiều khoa vào năm 2002 so với mọi khuôn viên ở Quận Cam.",
    "output": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")"
  },
  {
    "instruction": "",
    "input": "Tên của khuôn viên có nhiều khoa hơn năm 2002 so với số lượng tối đa ở Quận Cam là gì?",
    "output": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")"
  },
  {
    "instruction": "",
    "input": "Khuôn viên nào có hơn 400 tổng số tuyển sinh nhưng hơn 200 tuyển sinh toàn thời gian vào năm 1956?",
    "output": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200"
  },
  {
    "instruction": "",
    "input": "Những gì trường bắt đầu vào năm 1956, có hơn 200 sinh viên toàn thời gian và hơn 400 sinh viên đã đăng ký?",
    "output": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cơ sở ở Hạt Los Angeles?",
    "output": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường tồn tại ở quận LA?",
    "output": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\""
  },
  {
    "instruction": "",
    "input": "Liệt kê các cơ sở ở Hạt Los Angeles.",
    "output": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""
  },
  {
    "instruction": "",
    "input": "Những cơ sở nào ở quận Los Angeles?",
    "output": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu độ đã được trao trong \"Đại học bang San Jose\" vào năm 2000?",
    "output": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu độ đã được trao tại Đại học bang San Jose vào năm 2000?",
    "output": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000"
  },
  {
    "instruction": "",
    "input": "Bằng cấp được trao trong \"Đại học bang San Francisco\" năm 2001.",
    "output": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND t2.year  =  2001"
  },
  {
    "instruction": "",
    "input": "Bằng cấp nào đã được trao tại Đại học bang San Francisco vào năm 2001?",
    "output": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND t2.year  =  2001"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu giảng viên trong năm 2002?",
    "output": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu giảng viên trong năm 2002?",
    "output": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002"
  },
  {
    "instruction": "",
    "input": "Số lượng các dòng giảng viên trong khuôn viên \"Đại học bang Long Beach\" vào năm 2002 là bao nhiêu?",
    "output": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Long Beach State University\""
  },
  {
    "instruction": "",
    "input": "Số lượng giảng viên tại Đại học Long Beach State năm 2002 là bao nhiêu?",
    "output": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Long Beach State University\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu dòng giảng viên trong \"Đại học bang San Francisco\" vào năm 2004?",
    "output": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu dòng giảng viên tại Đại học bang San Francisco vào năm 2004?",
    "output": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\""
  },
  {
    "instruction": "",
    "input": "Liệt kê các trường có từ 600 đến 1000 dòng khoa trong năm 2004.",
    "output": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004"
  },
  {
    "instruction": "",
    "input": "Các cơ sở có từ 600 đến 1000 giảng viên vào năm 2004 là gì?",
    "output": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu dòng giảng viên trong trường đại học trao số lượng bằng cấp nhất trong năm 2002?",
    "output": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đại học đã làm bao nhiêu giảng viên đã trao nhiều bằng cấp nhất trong năm 2002?",
    "output": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu dòng giảng viên trong trường đại học trao số lượng bằng cấp ít nhất trong năm 2001?",
    "output": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giảng viên ở trường đại học đã cho số lượng bằng cấp ít nhất trong năm 2001?",
    "output": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên đại học trong \"Đại học bang San Jose\" vào năm 2004?",
    "output": "SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Jose State University\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên đại học tại bang San Jose",
    "output": "SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Jose State University\""
  },
  {
    "instruction": "",
    "input": "Số lượng sinh viên tốt nghiệp trong \"Đại học bang San Francisco\" vào năm 2004 là bao nhiêu?",
    "output": "SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Francisco State University\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người tốt nghiệp Đại học bang San Francisco năm 2004?",
    "output": "SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Francisco State University\""
  },
  {
    "instruction": "",
    "input": "Phí trong khuôn viên trường của \"Đại học bang San Francisco\" vào năm 2000 là bao nhiêu?",
    "output": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Francisco State University\" AND t1.year  =  2000"
  },
  {
    "instruction": "",
    "input": "Vào năm 2000, phí trường cho Đại học bang San Francisco là bao nhiêu?",
    "output": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Francisco State University\" AND t1.year  =  2000"
  },
  {
    "instruction": "",
    "input": "Tìm phí trường của \"Đại học bang San Jose\" vào năm 2000.",
    "output": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year  =  2000"
  },
  {
    "instruction": "",
    "input": "Phí trong khuôn viên trường năm 2000 cho Đại học bang San Jose là bao nhiêu?",
    "output": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year  =  2000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cơ sở CSU?",
    "output": "SELECT count(*) FROM campuses"
  },
  {
    "instruction": "",
    "input": "Tổng số trường là bao nhiêu?",
    "output": "SELECT count(*) FROM campuses"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ứng cử viên?",
    "output": "SELECT count(*) FROM candidate"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng ứng cử viên.",
    "output": "SELECT count(*) FROM candidate"
  },
  {
    "instruction": "",
    "input": "Tài nguyên thăm dò nào cung cấp số lượng thông tin ứng cử viên nhiều nhất?",
    "output": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tài nguyên thăm dò ý kiến ​​liên quan đến hầu hết các ứng cử viên.",
    "output": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "3 tỷ lệ hỗ trợ cao nhất hàng đầu là bao nhiêu?",
    "output": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Trả lại 3 tỷ lệ hỗ trợ lớn nhất.",
    "output": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tìm ID của ứng cử viên có tỷ lệ phản đối thấp nhất.",
    "output": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của ứng cử viên có tỷ lệ đối lập thấp nhất là gì?",
    "output": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Vui lòng liệt kê hỗ trợ, xem xét và phản đối mức giá cho từng ứng viên theo thứ tự tăng dần theo tỷ lệ không chắc chắn.",
    "output": "SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate"
  },
  {
    "instruction": "",
    "input": "Sự hỗ trợ, xem xét và phản đối tỷ lệ của từng ứng cử viên là gì, được đặt hàng tăng dần bởi tỷ lệ không chắc chắn của họ là gì?",
    "output": "SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate"
  },
  {
    "instruction": "",
    "input": "Nguồn thăm dò ý kiến ​​nào mà tỷ lệ phản đối cao nhất đến từ?",
    "output": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại nguồn thăm dò ý kiến ​​tương ứng với ứng cử viên có tỷ lệ phản đối.",
    "output": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả mọi người tên theo thứ tự ngày sinh từ già đến trẻ.",
    "output": "SELECT name FROM people ORDER BY date_of_birth"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả mọi người, được đặt hàng vào ngày sinh của họ là gì?",
    "output": "SELECT name FROM people ORDER BY date_of_birth"
  },
  {
    "instruction": "",
    "input": "Tìm chiều cao và cân nặng trung bình cho tất cả nam giới (giới tính là M).",
    "output": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'"
  },
  {
    "instruction": "",
    "input": "Chiều cao và cân nặng trung bình trên nam giới (giới tính là M) là bao nhiêu?",
    "output": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những người cao hơn 200 hoặc thấp hơn 190.",
    "output": "SELECT name FROM people WHERE height  >  200 OR height  <  190"
  },
  {
    "instruction": "",
    "input": "Tên của những người có chiều cao lớn hơn 200 hoặc dưới 190 là gì?",
    "output": "SELECT name FROM people WHERE height  >  200 OR height  <  190"
  },
  {
    "instruction": "",
    "input": "Tìm trọng lượng trung bình và tối thiểu cho mỗi giới.",
    "output": "SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex"
  },
  {
    "instruction": "",
    "input": "Trọng lượng trung bình và tối thiểu cho những người của mỗi giới tính là bao nhiêu?",
    "output": "SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex"
  },
  {
    "instruction": "",
    "input": "Tìm tên và giới tính của ứng viên có tỷ lệ hỗ trợ cao nhất.",
    "output": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và giới tính của ứng cử viên có tỷ lệ hỗ trợ cao nhất là gì?",
    "output": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các ứng cử viên có tỷ lệ đối lập là thấp nhất cho mỗi giới tính.",
    "output": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi giới tính, tên và giới tính của ứng cử viên với tỷ lệ phản đối cho giới tính của họ là gì?",
    "output": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex"
  },
  {
    "instruction": "",
    "input": "Giới tính nào có tỷ lệ không chắc chắn trung bình cao nhất.",
    "output": "SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Giới tính của ứng cử viên có tỷ lệ không chắc chắn cao nhất là gì?",
    "output": "SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của những người không tham gia cuộc bầu cử ứng cử viên là gì.",
    "output": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate)"
  },
  {
    "instruction": "",
    "input": "Đặt tên của những người không tham gia cuộc bầu cử ứng cử viên.",
    "output": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các ứng cử viên có tỷ lệ phần trăm hỗ trợ thấp hơn tỷ lệ phản đối của họ.",
    "output": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate"
  },
  {
    "instruction": "",
    "input": "Tên của các ứng cử viên có tỷ lệ hỗ trợ thấp hơn tỷ lệ phản đối là gì?",
    "output": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người có trọng lượng cao hơn 85 cho mỗi giới?",
    "output": "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex"
  },
  {
    "instruction": "",
    "input": "Đếm số người của mỗi giới tính có trọng lượng cao hơn 85.",
    "output": "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex"
  },
  {
    "instruction": "",
    "input": "Tìm tỷ lệ phần trăm hỗ trợ cao nhất, tỷ lệ xem xét thấp nhất và tỷ lệ phản đối của tất cả các ứng cử viên.",
    "output": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate"
  },
  {
    "instruction": "",
    "input": "Trả lại tỷ lệ hỗ trợ tối đa, tỷ lệ xem xét tối thiểu và tỷ lệ phản đối tối thiểu trên tất cả các ứng cử viên?",
    "output": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên ứng cử viên nữ (giới tính là f) theo thứ tự bảng chữ cái.",
    "output": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t1.sex  =  'F' ORDER BY t1.name"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các ứng cử viên nữ theo thứ tự bảng chữ cái (tình dục là F) là gì?",
    "output": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t1.sex  =  'F' ORDER BY t1.name"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những người có chiều cao thấp hơn mức trung bình.",
    "output": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)"
  },
  {
    "instruction": "",
    "input": "Tên của những người ngắn hơn trung bình là gì?",
    "output": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả thông tin về tất cả mọi người.",
    "output": "SELECT * FROM people"
  },
  {
    "instruction": "",
    "input": "Tất cả thông tin về tất cả mọi người là gì?",
    "output": "SELECT * FROM people"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề của tất cả các bộ phim do Steven Spielberg đạo diễn.",
    "output": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bộ phim do Steven Spielberg đạo diễn là gì?",
    "output": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phim được sản xuất sau năm 2000 và đạo diễn James Cameron là gì?",
    "output": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của tất cả các bộ phim mà James Cameron đạo diễn sau năm 2000 là gì?",
    "output": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bộ phim được thực hiện trước năm 2000?",
    "output": "SELECT count(*) FROM Movie WHERE YEAR  <  2000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bộ phim được thực hiện trước năm 2000?",
    "output": "SELECT count(*) FROM Movie WHERE YEAR  <  2000"
  },
  {
    "instruction": "",
    "input": "Ai là đạo diễn của Avatar phim?",
    "output": "SELECT director FROM Movie WHERE title  = 'Avatar'"
  },
  {
    "instruction": "",
    "input": "Ai chỉ đạo Avatar?",
    "output": "SELECT director FROM Movie WHERE title  = 'Avatar'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người đánh giá được liệt kê?",
    "output": "SELECT count(*) FROM Reviewer"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người đánh giá?",
    "output": "SELECT count(*) FROM Reviewer"
  },
  {
    "instruction": "",
    "input": "ID của người đánh giá có tên là bộ nền của Mike Mike là gì?",
    "output": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\""
  },
  {
    "instruction": "",
    "input": "ID của người đánh giá có tên bao gồm từ \"Mike\" là gì?",
    "output": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\""
  },
  {
    "instruction": "",
    "input": "ID người đánh giá của Daniel Lewis là gì?",
    "output": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\""
  },
  {
    "instruction": "",
    "input": "ID của người đánh giá tên là Daniel Lewis là gì?",
    "output": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\""
  },
  {
    "instruction": "",
    "input": "Tổng số xếp hạng có hơn 3 sao là bao nhiêu?",
    "output": "SELECT count(*) FROM Rating WHERE stars  >  3"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu xếp hạng phim có hơn 3 sao?",
    "output": "SELECT count(*) FROM Rating WHERE stars  >  3"
  },
  {
    "instruction": "",
    "input": "Ngôi sao xếp hạng thấp nhất và cao nhất là gì?",
    "output": "SELECT max(stars) ,  min(stars) FROM Rating"
  },
  {
    "instruction": "",
    "input": "Số lượng sao tối đa và tối thiểu mà xếp hạng có thể nhận được là bao nhiêu?",
    "output": "SELECT max(stars) ,  min(stars) FROM Rating"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các năm có một bộ phim nhận được xếp hạng 4 hoặc 5, và sắp xếp chúng theo thứ tự ngày càng tăng của năm.",
    "output": "SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year"
  },
  {
    "instruction": "",
    "input": "Trong những năm nào một bộ phim nhận được xếp hạng 4 hoặc 5 sao, và liệt kê những năm từ lâu đời nhất đến gần đây nhất?",
    "output": "SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year"
  },
  {
    "instruction": "",
    "input": "Tên của các đạo diễn đã chỉ đạo các bộ phim với xếp hạng 5 sao là gì?Cũng trả lại tiêu đề của những bộ phim này.",
    "output": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5"
  },
  {
    "instruction": "",
    "input": "Tên của các đạo diễn đã tạo ra một bộ phim với xếp hạng 5 sao, và tên của những bộ phim đó là gì?",
    "output": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5"
  },
  {
    "instruction": "",
    "input": "Ngôi sao xếp hạng trung bình cho mỗi người đánh giá là gì?",
    "output": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name"
  },
  {
    "instruction": "",
    "input": "Số lượng ngôi sao trung bình mà mỗi người đánh giá trao giải cho một bộ phim là gì?",
    "output": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề của tất cả các bộ phim không có xếp hạng.",
    "output": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của tất cả các bộ phim chưa được đánh giá là gì?",
    "output": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả những người đánh giá có xếp hạng với giá trị null cho ngày.",
    "output": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\""
  },
  {
    "instruction": "",
    "input": "Tên khác nhau của tất cả các nhà phê bình có xếp hạng không có trường ngày là gì?",
    "output": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\""
  },
  {
    "instruction": "",
    "input": "Các ngôi sao xếp hạng trung bình và tiêu đề cho bộ phim lâu đời nhất là gì?",
    "output": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)"
  },
  {
    "instruction": "",
    "input": "Đối với bộ phim lâu đời nhất được liệt kê, xếp hạng và tiêu đề trung bình của nó là gì?",
    "output": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phim gần đây nhất là gì?",
    "output": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)"
  },
  {
    "instruction": "",
    "input": "Tiêu đề của bộ phim mới nhất là gì?",
    "output": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)"
  },
  {
    "instruction": "",
    "input": "Các ngôi sao và năm tối đa cho bộ phim gần đây nhất là gì?",
    "output": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)"
  },
  {
    "instruction": "",
    "input": "Đánh giá cao nhất cho bộ phim gần đây nhất là gì và khi nào nó được phát hành?",
    "output": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)"
  },
  {
    "instruction": "",
    "input": "Tên của những bộ phim có năm được tạo ra là gì sau tất cả các bộ phim do Steven Spielberg đạo diễn là gì?",
    "output": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bộ phim được tạo ra sau bộ phim Steven Spielberg gần đây nhất là gì?",
    "output": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề và đạo diễn của những bộ phim có ngôi sao lớn hơn các ngôi sao trung bình của các bộ phim do James Cameron đạo diễn là gì?",
    "output": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề và đạo diễn của tất cả các bộ phim có xếp hạng cao hơn so với xếp hạng phim James Cameron trung bình là gì?",
    "output": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")"
  },
  {
    "instruction": "",
    "input": "Trả lại tên người đánh giá, tiêu đề phim, sao và xếp hạng.Và sắp xếp dữ liệu đầu tiên theo tên của người đánh giá, sau đó theo tiêu đề phim, và cuối cùng là số ngôi sao.",
    "output": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars"
  },
  {
    "instruction": "",
    "input": "Tên người đánh giá, tiêu đề phim, xếp hạng phim và ngày xếp hạng cho mỗi bộ phim được đặt hàng theo tên của người đánh giá, tiêu đề phim, cuối cùng là xếp hạng?",
    "output": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các nhà phê bình đã đóng góp ba hoặc nhiều xếp hạng.",
    "output": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các nhà phê bình đã đánh giá 3 bộ phim trở lên là gì?",
    "output": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các nhà phê bình được đánh giá với gió.",
    "output": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các nhà phê bình khác nhau đã vượt qua gió là gì?",
    "output": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các đạo diễn có phim được đánh giá bởi Sarah Martinez.",
    "output": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các đạo diễn có phim đã được Sarah Martinez xem xét là gì?",
    "output": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'"
  },
  {
    "instruction": "",
    "input": "Đối với bất kỳ xếp hạng nào mà tên của người đánh giá giống như đạo diễn của bộ phim, hãy trả lại tên người đánh giá, tiêu đề phim và số ngôi sao.",
    "output": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"
  },
  {
    "instruction": "",
    "input": "Các tên đánh giá, tựa phim khác nhau và các ngôi sao cho mỗi xếp hạng mà người đánh giá có cùng tên với đạo diễn là gì?",
    "output": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"
  },
  {
    "instruction": "",
    "input": "Trả lại tất cả các tên người đánh giá và tên phim cùng nhau trong một danh sách duy nhất.",
    "output": "SELECT name FROM Reviewer UNION SELECT title FROM Movie"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các nhà phê bình và tên phim là gì?",
    "output": "SELECT name FROM Reviewer UNION SELECT title FROM Movie"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề của tất cả các bộ phim không được xem xét bởi Chris Jackson.",
    "output": "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson'"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của tất cả các bộ phim không được Chris Jackson xem xét là gì?",
    "output": "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson'"
  },
  {
    "instruction": "",
    "input": "Đối với tất cả các đạo diễn đã chỉ đạo nhiều hơn một bộ phim, hãy trả lại các tựa phim của tất cả các bộ phim do họ đạo diễn, cùng với tên đạo diễn.Sắp xếp theo tên đạo diễn, sau đó tiêu đề phim.",
    "output": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title"
  },
  {
    "instruction": "",
    "input": "Đối với tất cả các đạo diễn đã chỉ đạo nhiều hơn một bộ phim, họ đã đạo diễn những bộ phim nào và tên của họ là gì?",
    "output": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title"
  },
  {
    "instruction": "",
    "input": "Đối với các đạo diễn có nhiều bộ phim, hãy trả lại các tựa phim và sản xuất nhiều năm của tất cả các bộ phim do họ đạo diễn.",
    "output": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi đạo diễn chỉ đạo nhiều hơn một bộ phim, các tiêu đề và ngày phát hành cho tất cả những bộ phim đó là gì?",
    "output": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"
  },
  {
    "instruction": "",
    "input": "Tên của các đạo diễn đã làm chính xác một bộ phim là gì?",
    "output": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các đạo diễn đã làm một bộ phim là gì?",
    "output": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Tên của các đạo diễn đã thực hiện chính xác một bộ phim không bao gồm đạo diễn NULL là gì?",
    "output": "SELECT director FROM Movie WHERE director != \"null\" GROUP BY director HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các đạo diễn đã làm một bộ phim ngoại trừ đạo diễn tên NULL là gì?",
    "output": "SELECT director FROM Movie WHERE director != \"null\" GROUP BY director HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Mỗi đạo diễn nhận được bao nhiêu đánh giá phim?",
    "output": "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi giám đốc, họ đã nhận được bao nhiêu đánh giá?",
    "output": "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director"
  },
  {
    "instruction": "",
    "input": "Tìm các bộ phim với xếp hạng trung bình cao nhất.Trả lại các tiêu đề phim và xếp hạng trung bình.",
    "output": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các tựa phim với xếp hạng trung bình cao nhất là gì và những xếp hạng đó là gì?",
    "output": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các tựa phim và xếp hạng trung bình của các bộ phim với xếp hạng trung bình thấp nhất là gì?",
    "output": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề và xếp hạng trung bình cho tất cả các bộ phim có xếp hạng trung bình thấp nhất là gì?",
    "output": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và năm của những bộ phim có 3 ngôi sao xếp hạng cao nhất là gì?",
    "output": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Những cái tên và năm được phát hành cho các bộ phim với 3 xếp hạng cao nhất hàng đầu là gì?",
    "output": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi đạo diễn, trả lại tên của đạo diễn cùng với tiêu đề của bộ phim mà họ đạo diễn đã nhận được xếp hạng cao nhất trong số tất cả các bộ phim của họ và giá trị của xếp hạng đó.Bỏ qua những bộ phim có đạo diễn là NULL.",
    "output": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi đạo diễn, các tiêu đề và xếp hạng cho tất cả các bộ phim họ đã xem là gì?",
    "output": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề và xếp hạng ngôi sao của bộ phim có ngôi sao xếp hạng ít nhất cho mỗi người đánh giá.",
    "output": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ID người đánh giá, tiêu đề và xếp hạng cho bộ phim với xếp hạng nhỏ nhất là gì?",
    "output": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID"
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề và điểm số của bộ phim với xếp hạng thấp nhất trong số tất cả các bộ phim do mỗi đạo diễn đạo diễn.",
    "output": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi đạo diễn, tiêu đề và điểm số của bộ phim được đánh giá cao nhất của họ là gì?",
    "output": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phim được đánh giá bởi hầu hết các lần là gì?",
    "output": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phim đã được xem xét nhiều nhất là gì?",
    "output": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của tất cả các bộ phim có ngôi sao xếp hạng là từ 3 đến 5 là gì?",
    "output": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của tất cả các bộ phim có từ 3 đến 5 sao là gì?",
    "output": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những người đánh giá đã đưa ra xếp hạng cao hơn 3 sao.",
    "output": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3"
  },
  {
    "instruction": "",
    "input": "Tên của những người đánh giá đã đánh giá một bộ phim hơn 3 sao trước đây là gì?",
    "output": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3"
  },
  {
    "instruction": "",
    "input": "Tìm ngôi sao xếp hạng trung bình cho mỗi bộ phim không được Brittany Harris xem xét.",
    "output": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\") GROUP BY mID"
  },
  {
    "instruction": "",
    "input": "Xếp hạng trung bình cho mỗi bộ phim chưa bao giờ được Brittany Harris xem xét là gì?",
    "output": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\") GROUP BY mID"
  },
  {
    "instruction": "",
    "input": "IDS của các bộ phim không được Brittany Harris xem xét là gì.",
    "output": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\""
  },
  {
    "instruction": "",
    "input": "ID của tất cả các bộ phim chưa được Brittany Harris xem xét là gì?",
    "output": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\""
  },
  {
    "instruction": "",
    "input": "Tìm ngôi sao xếp hạng trung bình cho mỗi bộ phim nhận được ít nhất 2 xếp hạng.",
    "output": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi bộ phim nhận được hơn 3 đánh giá, xếp hạng trung bình là gì?",
    "output": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tìm ID của những người đánh giá không cho 4 sao.",
    "output": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các nhà phê bình không cho 4 sao là gì?",
    "output": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4"
  },
  {
    "instruction": "",
    "input": "Tìm ID của những người đánh giá, những người không chỉ cho 4 sao.",
    "output": "SELECT rID FROM Rating WHERE stars != 4"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các nhà phê bình đã không cho 4 sao ít nhất một lần là gì?",
    "output": "SELECT rID FROM Rating WHERE stars != 4"
  },
  {
    "instruction": "",
    "input": "Tên của những bộ phim được thực hiện sau năm 2000 hoặc được Brittany Harris xem xét là gì?",
    "output": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bộ phim được thực hiện sau năm 2000 hoặc được Brittany Harris xem xét là gì?",
    "output": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000"
  },
  {
    "instruction": "",
    "input": "Tên của những bộ phim được thực hiện trước năm 1980 hoặc được đạo diễn bởi James Cameron là gì?",
    "output": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bộ phim được thực hiện trước năm 1980 hay James Cameron là đạo diễn là gì?",
    "output": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980"
  },
  {
    "instruction": "",
    "input": "Tên của những người đánh giá đã đánh giá 3 sao và 4 sao là gì?",
    "output": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  4"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các nhà phê bình đã đưa ra 3 hoặc 4 sao để đánh giá là gì?",
    "output": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  4"
  },
  {
    "instruction": "",
    "input": "Tên của những bộ phim có được 3 sao và 4 sao là gì?",
    "output": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bộ phim đã nhận được 3 hoặc 4 sao là gì?",
    "output": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu quận?",
    "output": "SELECT count(*) FROM county_public_safety"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng quốc gia.",
    "output": "SELECT count(*) FROM county_public_safety"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các quận theo thứ tự giảm dần dân số.",
    "output": "SELECT Name FROM county_public_safety ORDER BY Population DESC"
  },
  {
    "instruction": "",
    "input": "Tên của các quận an toàn công cộng, được đặt hàng bởi dân số giảm dần?",
    "output": "SELECT Name FROM county_public_safety ORDER BY Population DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê các lực lượng cảnh sát riêng biệt của các quận có vị trí không ở phía đông.",
    "output": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\""
  },
  {
    "instruction": "",
    "input": "Các lực lượng cảnh sát khác nhau của các quận không nằm ở phía đông là gì?",
    "output": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\""
  },
  {
    "instruction": "",
    "input": "Tỷ lệ tội phạm tối thiểu và tối đa của các quận là gì?",
    "output": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety"
  },
  {
    "instruction": "",
    "input": "Trả lại tỷ lệ tội phạm tối thiểu và tối đa trên tất cả các quận.",
    "output": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety"
  },
  {
    "instruction": "",
    "input": "Hiển thị tỷ lệ tội phạm của các quận theo thứ tự tăng dần của số lượng cảnh sát.",
    "output": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC"
  },
  {
    "instruction": "",
    "input": "Tỷ lệ tội phạm của các quận được sắp xếp theo số lượng văn phòng tăng dần là gì?",
    "output": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC"
  },
  {
    "instruction": "",
    "input": "Tên của các thành phố theo thứ tự bảng chữ cái tăng dần là gì?",
    "output": "SELECT Name FROM city ORDER BY Name ASC"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các thành phố, được đặt hàng theo thứ tự bảng chữ cái.",
    "output": "SELECT Name FROM city ORDER BY Name ASC"
  },
  {
    "instruction": "",
    "input": "Tỷ lệ phần trăm của người gốc Tây Ban Nha ở các thành phố có tỷ lệ phần trăm màu đen cao hơn 10 là bao nhiêu?",
    "output": "SELECT Hispanic FROM city WHERE Black  >  10"
  },
  {
    "instruction": "",
    "input": "Trả lại tỷ lệ phần trăm Tây Ban Nha cho các thành phố trong đó tỷ lệ phần trăm màu đen lớn hơn 10.",
    "output": "SELECT Hispanic FROM city WHERE Black  >  10"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của quận với dân số lớn nhất.",
    "output": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của quận với dân số lớn nhất là gì?",
    "output": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của thành phố với 5 tỷ lệ phần trăm màu trắng hàng đầu.",
    "output": "SELECT Name FROM city ORDER BY White DESC LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Tên của năm thành phố với tỷ lệ lớn nhất của người da trắng là gì?",
    "output": "SELECT Name FROM city ORDER BY White DESC LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các thành phố và tên của các quận họ đang ở.",
    "output": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"
  },
  {
    "instruction": "",
    "input": "Tên của các thành phố, cũng như tên của các quận mà họ tương ứng là gì?",
    "output": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tỷ lệ phần trăm trắng của các thành phố và tỷ lệ tội phạm của các quận họ đang ở.",
    "output": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"
  },
  {
    "instruction": "",
    "input": "Tỷ lệ phần trăm trắng của các thành phố là gì và tỷ lệ tội phạm tương ứng của các quận tương ứng là gì?",
    "output": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các thành phố trong quận có số lượng cảnh sát lớn nhất.",
    "output": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tên của các thành phố trong quận với nhiều sĩ quan cảnh sát nhất là gì?",
    "output": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng thành phố trong các quận có dân số hơn 20000.",
    "output": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000)"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành phố ở các quận có dân số trên 20000?",
    "output": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tỷ lệ tội phạm của các quận với một thành phố có tỷ lệ phần trăm trắng hơn 90.",
    "output": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90"
  },
  {
    "instruction": "",
    "input": "Tỷ lệ tội phạm của các quận có chứa các thành phố có tỷ lệ phần trăm trắng trên 90 là gì?",
    "output": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90"
  },
  {
    "instruction": "",
    "input": "Vui lòng cho thấy các lực lượng cảnh sát và số lượng các quận với mỗi lực lượng cảnh sát.",
    "output": "SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu quận tương ứng với mỗi lực lượng cảnh sát?",
    "output": "SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force"
  },
  {
    "instruction": "",
    "input": "Vị trí được chia sẻ bởi hầu hết các quận là gì?",
    "output": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Địa điểm nào có các quận tương ứng nhất?",
    "output": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các quận không có bất kỳ thành phố nào.",
    "output": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)"
  },
  {
    "instruction": "",
    "input": "Tên của các quận không chứa bất kỳ thành phố nào là gì?",
    "output": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)"
  },
  {
    "instruction": "",
    "input": "Cho thấy lực lượng cảnh sát được chia sẻ bởi các quận có vị trí ở phía đông và phía tây.",
    "output": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"West\""
  },
  {
    "instruction": "",
    "input": "Lực lượng cảnh sát nào hoạt động ở cả hai quận nằm ở phía đông và phía tây?",
    "output": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"West\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các thành phố trong các quận có tỷ lệ tội phạm dưới 100.",
    "output": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)"
  },
  {
    "instruction": "",
    "input": "Tên của các thành phố ở các quận có tỷ lệ tội phạm dưới 100 là gì?",
    "output": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)"
  },
  {
    "instruction": "",
    "input": "Hiển thị trường hợp gánh nặng của các quận theo thứ tự giảm dần dân số.",
    "output": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC"
  },
  {
    "instruction": "",
    "input": "Bánh tiền trường hợp của các quận, được đặt hàng giảm dần theo dân số?",
    "output": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các phòng hiện đại với giá cơ bản dưới 160 đô la và hai giường.",
    "output": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';"
  },
  {
    "instruction": "",
    "input": "Tên của các phòng hiện đại có giá cơ bản thấp hơn $ 160 và hai giường.",
    "output": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các phòng có giá cao hơn 160 và có thể chứa hơn 2 người.Báo cáo tên phòng và ID.",
    "output": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;"
  },
  {
    "instruction": "",
    "input": "Tên phòng và ID của tất cả các phòng có giá hơn 160 và có thể chứa hơn hai người.",
    "output": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;"
  },
  {
    "instruction": "",
    "input": "Tìm phòng phổ biến nhất trong khách sạn.Phòng phổ biến nhất là căn phòng đã thấy số lượng đặt phòng lớn nhất.",
    "output": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Phòng nào có số lượng đặt phòng lớn nhất?",
    "output": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu đứa trẻ ở trong phòng dành riêng bởi Roy Sweazy?",
    "output": "SELECT kids FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";"
  },
  {
    "instruction": "",
    "input": "Tìm số trẻ em ở trong phòng được dành riêng bởi một người tên là Roy Sweaz.",
    "output": "SELECT kids FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";"
  },
  {
    "instruction": "",
    "input": "Roy Sweazy đã bao nhiêu lần đặt phòng.",
    "output": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";"
  },
  {
    "instruction": "",
    "input": "Tìm số lần Roy Sweazy đã dành một căn phòng.",
    "output": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";"
  },
  {
    "instruction": "",
    "input": "Phòng nào có tỷ lệ cao nhất?Liệt kê tên đầy đủ của phòng, tỷ lệ, đăng ký và đăng ký ngày.",
    "output": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Trả lại tên, tỷ lệ, đăng ký và đăng ký ngày cho phòng với tỷ lệ cao nhất.",
    "output": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người lớn ở trong phòng Conrad Selbig đã đăng ký vào ngày 23 tháng 10 năm 2010?",
    "output": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng người lớn cho căn phòng được bảo lưu và kiểm tra bởi Conrad Selbig vào ngày 23 tháng 10 năm 2010.",
    "output": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trẻ em ở trong phòng Damien Trachsel đã đăng ký vào ngày 21 tháng 9 năm 2010?",
    "output": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"DAMIEN\" AND LastName  =  \"TRACHSEL\";"
  },
  {
    "instruction": "",
    "input": "Trả lại số lượng trẻ em cho căn phòng được bảo lưu và kiểm tra bởi Damien Trachsel vào ngày 21 tháng 9 năm 2010.",
    "output": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"DAMIEN\" AND LastName  =  \"TRACHSEL\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giường vua?",
    "output": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số giường King có sẵn.",
    "output": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên và trang trí của các phòng có giường vua.Sắp xếp danh sách theo giá của họ.",
    "output": "SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;"
  },
  {
    "instruction": "",
    "input": "Tên và trang trí của các phòng có giường vua là gì?Sắp xếp chúng theo giá của họ",
    "output": "SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;"
  },
  {
    "instruction": "",
    "input": "Phòng nào có giá cơ sở rẻ nhất?Liệt kê tên phòng và giá cơ sở.",
    "output": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tên phòng và giá cơ sở của căn phòng với giá cơ sở thấp nhất là gì?",
    "output": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Trang trí của phòng ẩn dật và thách thức là gì?",
    "output": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";"
  },
  {
    "instruction": "",
    "input": "Trả lại trang trí của căn phòng có tên \"Khai quật và thách thức\".",
    "output": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";"
  },
  {
    "instruction": "",
    "input": "Giá cơ sở trung bình của loại giường khác nhau là bao nhiêu?Danh sách loại giường và giá cơ sở trung bình.",
    "output": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi loại giường, hãy tìm giá cơ sở trung bình của loại giường khác nhau.",
    "output": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;"
  },
  {
    "instruction": "",
    "input": "Tổng số người có thể ở trong các phòng hiện đại trong nhà trọ này là bao nhiêu?",
    "output": "SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu người có thể ở trong các phòng hiện đại của nhà trọ này?",
    "output": "SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';"
  },
  {
    "instruction": "",
    "input": "Những loại trang trí có số lượng đặt phòng ít nhất?",
    "output": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Loại trang trí ít phổ biến nhất là gì?",
    "output": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Liệt kê số lần số người trong phòng đạt đến mức tối đa của căn phòng.Số người bao gồm người lớn và trẻ em.",
    "output": "SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;"
  },
  {
    "instruction": "",
    "input": "Đã bao nhiêu lần số người lớn và trẻ em ở trong một căn phòng đạt đến khả năng tối đa của căn phòng?",
    "output": "SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên và tên cuối cùng của những người trả nhiều hơn giá cơ bản của phòng.",
    "output": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của những người đã trả nhiều hơn giá cơ bản của phòng là gì?",
    "output": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phòng?",
    "output": "SELECT count(*) FROM Rooms;"
  },
  {
    "instruction": "",
    "input": "Tổng số phòng có sẵn trong nhà trọ này là bao nhiêu?",
    "output": "SELECT count(*) FROM Rooms;"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng phòng có giường vua.",
    "output": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phòng có giường vua?",
    "output": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng phòng cho mỗi loại giường.",
    "output": "SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;"
  },
  {
    "instruction": "",
    "input": "Số lượng phòng cho mỗi loại giường là gì?",
    "output": "SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;"
  },
  {
    "instruction": "",
    "input": "Tìm tên của căn phòng với công suất tối đa.",
    "output": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tên của căn phòng có thể chứa nhiều người nhất là gì?",
    "output": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tìm ID và tên của phòng giá cơ sở đắt nhất.",
    "output": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Phòng nào có giá cơ sở cao nhất?",
    "output": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Liệt kê loại giường và tên của tất cả các phòng truyền thống.",
    "output": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";"
  },
  {
    "instruction": "",
    "input": "Loại giường và tên của tất cả các phòng với trang trí truyền thống là gì?",
    "output": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng phòng có giường King cho mỗi loại trang trí.",
    "output": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phòng có giường vua?Báo cáo số cho mỗi loại trang trí.",
    "output": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;"
  },
  {
    "instruction": "",
    "input": "Tìm giá trung bình và tối thiểu của các phòng trong trang trí khác nhau.",
    "output": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;"
  },
  {
    "instruction": "",
    "input": "Tối thiểu trung bình và giá của các phòng cho mỗi trang trí khác nhau.",
    "output": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các phòng được sắp xếp theo giá của họ.",
    "output": "SELECT roomName FROM Rooms ORDER BY basePrice;"
  },
  {
    "instruction": "",
    "input": "Sắp xếp tất cả các phòng theo giá.Chỉ cần báo cáo tên phòng.",
    "output": "SELECT roomName FROM Rooms ORDER BY basePrice;"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng phòng có giá cao hơn 120 cho các trang trí khác nhau.",
    "output": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phòng có giá hơn 120, cho mỗi trang trí khác nhau?",
    "output": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi loại giường, tìm giá phòng trung bình.",
    "output": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;"
  },
  {
    "instruction": "",
    "input": "Giá cơ sở trung bình của phòng, cho mỗi loại giường là bao nhiêu?",
    "output": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các phòng có giường vua hoặc nữ hoàng.",
    "output": "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";"
  },
  {
    "instruction": "",
    "input": "Tên của các phòng có giường vua hoặc nữ hoàng là gì?",
    "output": "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại giường khác nhau?",
    "output": "SELECT count(DISTINCT bedType) FROM Rooms;"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các loại giường riêng biệt có sẵn trong nhà trọ này.",
    "output": "SELECT count(DISTINCT bedType) FROM Rooms;"
  },
  {
    "instruction": "",
    "input": "Tìm tên và ID của 3 phòng đắt tiền hàng đầu.",
    "output": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;"
  },
  {
    "instruction": "",
    "input": "Tên và ID của ba phòng có giá cao nhất là gì?",
    "output": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các phòng có giá cao hơn giá trung bình.",
    "output": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );"
  },
  {
    "instruction": "",
    "input": "Tên của các phòng có giá cao hơn mức trung bình.",
    "output": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng phòng không có bất kỳ đặt phòng.",
    "output": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phòng chưa có đặt phòng?",
    "output": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)"
  },
  {
    "instruction": "",
    "input": "Trả lại tên và số lượng đặt phòng được thực hiện cho mỗi phòng.",
    "output": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi phòng, hãy tìm tên của nó và số lần đặt phòng được thực hiện cho nó.",
    "output": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các phòng đã được dành riêng hơn 60 lần.",
    "output": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60"
  },
  {
    "instruction": "",
    "input": "Tên của các phòng có tần suất đặt phòng vượt quá 60 lần là gì?",
    "output": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các phòng có giá cơ bản là từ 120 đến 150.",
    "output": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150"
  },
  {
    "instruction": "",
    "input": "Phòng nào có giá từ 120 đến 150?Cho tôi tên phòng.",
    "output": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các phòng được đặt bởi một số khách hàng có tên đầu tiên có chứa Roy.",
    "output": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'"
  },
  {
    "instruction": "",
    "input": "Tên của các phòng được đặt bởi khách hàng có tên đầu tiên có \"Roy\" một phần là gì?",
    "output": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'"
  },
  {
    "instruction": "",
    "input": "Các chi tiết của các bậc thầy CMI có mã tham chiếu chéo 'thuế' là gì?",
    "output": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T2.source_system_code  =  'Tax'"
  },
  {
    "instruction": "",
    "input": "ID tham chiếu chéo CMI có liên quan đến ít nhất một mục nhập thuế của hội đồng là gì?Liệt kê ID tham chiếu chéo và mã hệ thống nguồn.",
    "output": "SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mức giá kinh doanh có liên quan đến mỗi tài liệu tham khảo chéo CMI?Danh sách ID tham chiếu chéo, ID khách hàng chính và N",
    "output": "SELECT T2.cmi_cross_ref_id ,  T2.master_customer_id ,  count(*) FROM Business_Rates AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T2.cmi_cross_ref_id"
  },
  {
    "instruction": "",
    "input": "Mã hệ thống nguồn thuế liên quan đến lợi ích và thanh toán vượt mức là gì?Liệt kê mã và ID Benifit, đặt hàng theo ID Benifit.",
    "output": "SELECT T1.source_system_code ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ORDER BY T2.council_tax_id"
  },
  {
    "instruction": "",
    "input": "Mã hệ thống nguồn thuế và ID khách hàng chính của các loại thuế liên quan đến mỗi bãi đậu xe ID?",
    "output": "SELECT T1.source_system_code ,  T1.master_customer_id ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id"
  },
  {
    "instruction": "",
    "input": "ID thuế nợ thuê lại liên quan đến chỉ số chủ khách hàng có chi tiết không phải là 'Schmidt, Kertzmann và Lubowitz'?",
    "output": "SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id  =  T2.master_customer_id WHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz'"
  },
  {
    "instruction": "",
    "input": "ID đăng ký của các cơ quan đăng ký bầu cử có mã hệ thống nguồn tham chiếu chéo là gì 'bầu cử' hoặc 'thuế' là gì?",
    "output": "SELECT T1.electoral_register_id FROM Electoral_Register AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id WHERE T2.source_system_code  =  'Electoral' OR T2.source_system_code  =  'Tax'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mã hệ thống nguồn khác nhau cho các tài liệu tham khảo chéo CMI?",
    "output": "SELECT count(DISTINCT source_system_code) FROM CMI_cross_references"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả thông tin về chỉ số chủ khách hàng và sắp xếp chúng theo chi tiết theo thứ tự giảm dần.",
    "output": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID thuế của hội đồng và các tài liệu tham khảo chéo CMI liên quan của họ về tất cả các khoản tiền phạt đỗ xe.",
    "output": "SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thuế hội đồng được thu để thuê nợ?",
    "output": "SELECT count(*) FROM rent_arrears"
  },
  {
    "instruction": "",
    "input": "Các mã hệ thống nguồn tham chiếu chéo riêng biệt có liên quan đến chi tiết khách hàng chính là 'Gottlieb, Becker và Wyman' là gì?",
    "output": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman'"
  },
  {
    "instruction": "",
    "input": "ID tham chiếu chéo CMI nào không liên quan đến bất kỳ thuế đỗ xe nào?",
    "output": "SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines"
  },
  {
    "instruction": "",
    "input": "Mã hệ thống nguồn riêng biệt nào bao gồm chuỗi con 'en'?",
    "output": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bữa tiệc?",
    "output": "SELECT count(*) FROM party"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các bên.",
    "output": "SELECT count(*) FROM party"
  },
  {
    "instruction": "",
    "input": "Liệt kê các chủ đề của các bên theo thứ tự tăng dần của số lượng máy chủ.",
    "output": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC"
  },
  {
    "instruction": "",
    "input": "Các chủ đề của các bên được đặt hàng bởi số lượng máy chủ theo cách tăng dần là gì?",
    "output": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC"
  },
  {
    "instruction": "",
    "input": "Các chủ đề và địa điểm của các bên là gì?",
    "output": "SELECT Party_Theme ,  LOCATION FROM party"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi chủ đề và vị trí của mỗi bên.",
    "output": "SELECT Party_Theme ,  LOCATION FROM party"
  },
  {
    "instruction": "",
    "input": "Hiển thị năm đầu tiên và năm cuối cùng của các bữa tiệc có chủ đề \"Mùa xuân\" hoặc \"công nghệ\".",
    "output": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\""
  },
  {
    "instruction": "",
    "input": "Năm đầu tiên và năm cuối cùng của các bên có chủ đề là \"mùa xuân\" hay \"teqnology\" là gì?",
    "output": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\""
  },
  {
    "instruction": "",
    "input": "Số lượng máy chủ trung bình cho các bên là bao nhiêu?",
    "output": "SELECT avg(Number_of_hosts) FROM party"
  },
  {
    "instruction": "",
    "input": "Tính toán số lượng máy chủ trung bình cho các bên.",
    "output": "SELECT avg(Number_of_hosts) FROM party"
  },
  {
    "instruction": "",
    "input": "Vị trí của bữa tiệc với nhiều máy chủ nhất là gì?",
    "output": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Bên nào có chủ nhà nhiều nhất?Cho tôi vị trí bữa tiệc.",
    "output": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các quốc tịch khác nhau cùng với số lượng vật chủ của mỗi quốc tịch.",
    "output": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality"
  },
  {
    "instruction": "",
    "input": "Mỗi quốc tịch có bao nhiêu máy chủ?Liệt kê quốc tịch và số lượng.",
    "output": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality"
  },
  {
    "instruction": "",
    "input": "Hiển thị quốc tịch phổ biến nhất của chủ nhà.",
    "output": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Quốc tịch nào có nhiều máy chủ nhất?",
    "output": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các quốc gia có cả chủ nhà trên 45 tuổi và chủ nhà dưới 35 tuổi.",
    "output": "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35"
  },
  {
    "instruction": "",
    "input": "Những quốc gia nào có cả hai máy chủ trên 45 tuổi và chủ nhà dưới 35 tuổi?",
    "output": "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35"
  },
  {
    "instruction": "",
    "input": "Hiển thị các chủ đề của các bên và tên của chủ nhà.",
    "output": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi bên, hãy trả lại chủ đề của nó và tên của máy chủ.",
    "output": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị các địa điểm của các bên và tên của chủ nhà theo thứ tự tăng dần của thời đại của chủ nhà.",
    "output": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi bên, hãy tìm vị trí của nó và tên của máy chủ.Sắp xếp kết quả trong thứ tự tăng dần của tuổi của chủ nhà.",
    "output": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age"
  },
  {
    "instruction": "",
    "input": "Hiển thị vị trí của các bên có máy chủ cũ hơn 50.",
    "output": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50"
  },
  {
    "instruction": "",
    "input": "Những bên nào có máy chủ trên 50 tuổi?Hãy cho tôi các địa điểm tiệc tùng.",
    "output": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên máy chủ cho các bên có số lượng máy chủ lớn hơn 20.",
    "output": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20"
  },
  {
    "instruction": "",
    "input": "Những bữa tiệc nào có hơn 20 máy chủ?Cho tôi tên chủ cho các bên này.",
    "output": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và quốc tịch của chủ nhà lâu đời nhất.",
    "output": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và quốc tịch của chủ nhà ở độ tuổi cao nhất là gì?",
    "output": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các máy chủ không phục vụ như một chủ nhà của bất kỳ bên nào trong hồ sơ của chúng tôi.",
    "output": "SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)"
  },
  {
    "instruction": "",
    "input": "Tên của các máy chủ không tổ chức bất kỳ bên nào trong hồ sơ của chúng tôi là gì?",
    "output": "SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu khu vực?",
    "output": "SELECT count(*) FROM region"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng khu vực.",
    "output": "SELECT count(*) FROM region"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các mã khu vực và tên khu vực được sắp xếp theo mã.",
    "output": "SELECT region_code ,  region_name FROM region ORDER BY region_code"
  },
  {
    "instruction": "",
    "input": "Các mã và tên cho tất cả các vùng, được sắp xếp theo mã là gì?",
    "output": "SELECT region_code ,  region_name FROM region ORDER BY region_code"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên khu vực theo thứ tự bảng chữ cái.",
    "output": "SELECT region_name FROM region ORDER BY region_name"
  },
  {
    "instruction": "",
    "input": "Tên của các vùng theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT region_name FROM region ORDER BY region_name"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên cho tất cả các khu vực ngoại trừ Đan Mạch.",
    "output": "SELECT region_name FROM region WHERE region_name != 'Denmark'"
  },
  {
    "instruction": "",
    "input": "Trả về tên của tất cả các khu vực khác ngoài Đan Mạch.",
    "output": "SELECT region_name FROM region WHERE region_name != 'Denmark'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cơn bão đã có hồ sơ tử vong?",
    "output": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng bão trong đó ít nhất 1 người chết.",
    "output": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0"
  },
  {
    "instruction": "",
    "input": "Tên danh sách, ngày hoạt động và số người chết cho tất cả các cơn bão với ít nhất 1 người chết.",
    "output": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1"
  },
  {
    "instruction": "",
    "input": "Tên, ngày hoạt động là gì và số người chết cho những cơn bão có 1 cái chết trở lên?",
    "output": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1"
  },
  {
    "instruction": "",
    "input": "Hiển thị thiệt hại trung bình và tối đa cho tất cả các cơn bão với tốc độ tối đa cao hơn 1000.",
    "output": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000"
  },
  {
    "instruction": "",
    "input": "Thiệt hại trung bình và tối đa trong hàng triệu đối với các cơn bão có tốc độ tối đa trên 1000 là bao nhiêu?",
    "output": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000"
  },
  {
    "instruction": "",
    "input": "Tổng số người chết và thiệt hại cho tất cả các cơn bão với tốc độ tối đa lớn hơn mức trung bình là bao nhiêu?",
    "output": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)"
  },
  {
    "instruction": "",
    "input": "Trả lại tổng số người chết và tổng thiệt hại trong hàng triệu cho các cơn bão có tốc độ tối đa lớn hơn mức trung bình.",
    "output": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)"
  },
  {
    "instruction": "",
    "input": "Tên danh sách và thiệt hại cho tất cả các cơn bão theo thứ tự giảm dần của tốc độ tối đa.",
    "output": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC"
  },
  {
    "instruction": "",
    "input": "Tên và thiệt hại trong hàng triệu cho bão, được đặt hàng bởi tốc độ tối đa của chúng giảm dần?",
    "output": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khu vực bị ảnh hưởng?",
    "output": "SELECT count(DISTINCT region_id) FROM affected_region"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các khu vực bị ảnh hưởng khác nhau.",
    "output": "SELECT count(DISTINCT region_id) FROM affected_region"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên cho các khu vực không bị ảnh hưởng.",
    "output": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)"
  },
  {
    "instruction": "",
    "input": "Tên của các khu vực không bị ảnh hưởng là gì?",
    "output": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên cho các khu vực và số lượng bão cho mỗi khu vực.",
    "output": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cơn bão xảy ra trong mỗi khu vực?",
    "output": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên cho các cơn bão và số lượng các vùng bị ảnh hưởng cho mỗi cơn bão.",
    "output": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu vùng bị ảnh hưởng bởi mỗi cơn bão?",
    "output": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id"
  },
  {
    "instruction": "",
    "input": "Tên bão và tốc độ tối đa ảnh hưởng đến số lượng vùng lớn nhất là gì?",
    "output": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về tên và tốc độ tối đa của cơn bão ảnh hưởng đến hầu hết các khu vực.",
    "output": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của những cơn bão không ảnh hưởng đến khu vực trong hồ sơ.",
    "output": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)"
  },
  {
    "instruction": "",
    "input": "Tên của những cơn bão không ảnh hưởng đến bất kỳ khu vực nào là gì?",
    "output": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên bão với ít nhất hai vùng và 10 thành phố bị ảnh hưởng.",
    "output": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10"
  },
  {
    "instruction": "",
    "input": "Tên của các cơn bão đều ảnh hưởng đến hai khu vực trở lên và ảnh hưởng đến tổng cộng 10 thành phố trở lên là gì?",
    "output": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên bão ngoại trừ những người có ít nhất hai vùng bị ảnh hưởng.",
    "output": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tên của những cơn bão không ảnh hưởng đến hai hoặc nhiều vùng là gì?",
    "output": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Các tên khu vực bị ảnh hưởng bởi cơn bão với một số trường hợp tử vong ít nhất là gì?",
    "output": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các khu vực bị ảnh hưởng bởi các cơn bão có số lượng tử vong ít nhất là 10.",
    "output": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên bão ảnh hưởng đến khu vực \"Đan Mạch\".",
    "output": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'"
  },
  {
    "instruction": "",
    "input": "Tên của những cơn bão ảnh hưởng đến Đan Mạch là gì?",
    "output": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên khu vực với ít nhất hai cơn bão.",
    "output": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tên của các vùng có hai hoặc nhiều cơn bão là gì?",
    "output": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các khu vực bị ảnh hưởng bởi cơn bão đã giết chết số lượng người lớn nhất.",
    "output": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của các khu vực bị ảnh hưởng bởi cơn bão mà hầu hết mọi người đã chết là gì?",
    "output": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của cơn bão ảnh hưởng đến cả khu vực Afghanistan và Albania.",
    "output": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'"
  },
  {
    "instruction": "",
    "input": "Tên của những cơn bão ảnh hưởng đến cả hai khu vực của Afghanistan và Albania là gì?",
    "output": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu quận?",
    "output": "SELECT count(*) FROM county"
  },
  {
    "instruction": "",
    "input": "Đếm tổng số quận.",
    "output": "SELECT count(*) FROM county"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên quận và dân số của tất cả các quận.",
    "output": "SELECT County_name ,  Population FROM county"
  },
  {
    "instruction": "",
    "input": "Tên và dân số của mỗi quận là gì?",
    "output": "SELECT County_name ,  Population FROM county"
  },
  {
    "instruction": "",
    "input": "Cho thấy dân số trung bình của tất cả các quận.",
    "output": "SELECT avg(Population) FROM county"
  },
  {
    "instruction": "",
    "input": "Trung bình dân số của các quận lớn như thế nào?",
    "output": "SELECT avg(Population) FROM county"
  },
  {
    "instruction": "",
    "input": "Trả lại dân số tối đa và tối thiểu trong số tất cả các quận.",
    "output": "SELECT max(Population) ,  min(Population) FROM county"
  },
  {
    "instruction": "",
    "input": "Dân số tối đa và tối thiểu của các quận là gì?",
    "output": "SELECT max(Population) ,  min(Population) FROM county"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các quận riêng biệt cho các cuộc bầu cử.",
    "output": "SELECT DISTINCT District FROM election"
  },
  {
    "instruction": "",
    "input": "Các quận riêng biệt cho các cuộc bầu cử là gì?",
    "output": "SELECT DISTINCT District FROM election"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã zip của quận với tên \"Howard\".",
    "output": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\""
  },
  {
    "instruction": "",
    "input": "Mã zip mà quận có tên là \"Howard\" được đặt trong?",
    "output": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\""
  },
  {
    "instruction": "",
    "input": "Hiển thị các đại biểu từ Quận 1 trong cuộc bầu cử.",
    "output": "SELECT Delegate FROM election WHERE District  =  1"
  },
  {
    "instruction": "",
    "input": "Ai là đại biểu của Quận 1 trong cuộc bầu cử?",
    "output": "SELECT Delegate FROM election WHERE District  =  1"
  },
  {
    "instruction": "",
    "input": "Hiển thị thông tin đại biểu và ủy ban của các cuộc bầu cử.",
    "output": "SELECT Delegate ,  Committee FROM election"
  },
  {
    "instruction": "",
    "input": "Thông tin đại biểu và ủy ban cho mỗi hồ sơ bầu cử là gì?",
    "output": "SELECT Delegate ,  Committee FROM election"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu Thống đốc riêng biệt?",
    "output": "SELECT count(DISTINCT Governor) FROM party"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các thống đốc riêng biệt.",
    "output": "SELECT count(DISTINCT Governor) FROM party"
  },
  {
    "instruction": "",
    "input": "Cho thấy trung úy và nhà soạn nhạc từ Đảng Dân chủ.",
    "output": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\""
  },
  {
    "instruction": "",
    "input": "Trung úy và nhà soạn nhạc từ Đảng Dân chủ là ai?",
    "output": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\""
  },
  {
    "instruction": "",
    "input": "Trong những năm khác biệt là Thống đốc \"Eliot Spitzer\"?",
    "output": "SELECT DISTINCT YEAR FROM party WHERE Governor  =  \"Eliot Spitzer\""
  },
  {
    "instruction": "",
    "input": "Tìm những năm khác biệt khi thống đốc được đặt tên là \"Eliot Spitzer\".",
    "output": "SELECT DISTINCT YEAR FROM party WHERE Governor  =  \"Eliot Spitzer\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các thông tin về bầu cử.",
    "output": "SELECT * FROM election"
  },
  {
    "instruction": "",
    "input": "Trả lại tất cả các thông tin cho mỗi hồ sơ bầu cử.",
    "output": "SELECT * FROM election"
  },
  {
    "instruction": "",
    "input": "Hiển thị các đại biểu và tên của quận mà họ thuộc về.",
    "output": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District"
  },
  {
    "instruction": "",
    "input": "Đại biểu và tên của quận mà họ thuộc về mỗi quận là gì?",
    "output": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District"
  },
  {
    "instruction": "",
    "input": "Những đại biểu nào đến từ các quận có dân số nhỏ hơn 100000?",
    "output": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000"
  },
  {
    "instruction": "",
    "input": "Tìm các đại biểu đến từ các quận có dân số dưới 100000.",
    "output": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu đại biểu riêng biệt từ các quận có dân số lớn hơn 50000?",
    "output": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng đại biểu riêng biệt đến từ các quận có dân số trên 50000.",
    "output": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000"
  },
  {
    "instruction": "",
    "input": "Tên của quận mà các đại biểu trong ủy ban \"chiếm đoạt\" thuộc về?",
    "output": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\""
  },
  {
    "instruction": "",
    "input": "Quận nào làm các đại biểu trong ủy ban \"chiếm đoạt\" thuộc về?Cho tôi tên quận.",
    "output": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\""
  },
  {
    "instruction": "",
    "input": "Hiển thị các đại biểu và tên của đảng mà họ thuộc về.",
    "output": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi đại biểu, hãy tìm tên của bên mà họ là một phần của.",
    "output": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID"
  },
  {
    "instruction": "",
    "input": "Ai là thống đốc của các bên liên quan đến các đại biểu từ Quận 1?",
    "output": "SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1"
  },
  {
    "instruction": "",
    "input": "Tìm các bên liên quan đến các đại biểu từ Quận 1. Ai từng là thống đốc của các bên?",
    "output": "SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1"
  },
  {
    "instruction": "",
    "input": "Ai là người tổng hợp của các bên liên quan đến các đại biểu từ Quận 1 hoặc Quận 2?",
    "output": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2"
  },
  {
    "instruction": "",
    "input": "Tìm các bên liên quan đến các đại biểu từ Quận 1 hoặc 2. Ai phục vụ với tư cách là người soạn nhạc của các bên?",
    "output": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2"
  },
  {
    "instruction": "",
    "input": "Trả lại tất cả các ủy ban có đại biểu từ Đảng Dân chủ.",
    "output": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\""
  },
  {
    "instruction": "",
    "input": "Những ủy ban nào có đại biểu từ Đảng Dân chủ?",
    "output": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của mỗi quận cùng với số lượng đại biểu tương ứng từ quận đó.",
    "output": "SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi quận, hãy tìm tên của quận và số lượng đại biểu từ quận đó.",
    "output": "SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của mỗi bên và số lượng đại biểu tương ứng từ bên đó.",
    "output": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi bên, hãy trả lại tên của bên và số lượng đại biểu từ bên đó.",
    "output": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của tất cả các quận được sắp xếp theo dân số theo thứ tự tăng dần.",
    "output": "SELECT County_name FROM county ORDER BY Population ASC"
  },
  {
    "instruction": "",
    "input": "Sắp xếp tên của tất cả các quận theo thứ tự tăng dần của dân số.",
    "output": "SELECT County_name FROM county ORDER BY Population ASC"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của tất cả các quận được sắp xếp theo tên quận theo thứ tự bảng chữ cái giảm dần.",
    "output": "SELECT County_name FROM county ORDER BY County_name DESC"
  },
  {
    "instruction": "",
    "input": "Sắp xếp tên của tất cả các quận theo thứ tự bảng chữ cái giảm dần.",
    "output": "SELECT County_name FROM county ORDER BY County_name DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của quận với dân số lớn nhất.",
    "output": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Quận nào có dân số lớn nhất?Cho tôi tên của quận.",
    "output": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị 3 quận với dân số nhỏ nhất.",
    "output": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "3 quận có dân số nhỏ nhất là gì?Cho tôi tên quận.",
    "output": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các quận có ít nhất hai đại biểu.",
    "output": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Những quận nào có hai hoặc nhiều đại biểu?Cho tôi tên quận.",
    "output": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của bữa tiệc có ít nhất hai hồ sơ.",
    "output": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Bên nào có hai hoặc nhiều hồ sơ?",
    "output": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của đảng có nhiều đại biểu nhất.",
    "output": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Bên nào có số lượng đại biểu lớn nhất?",
    "output": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cho thấy những người đã là thống đốc nhiều lần nhất.",
    "output": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những người nào phục vụ như là thống đốc thường xuyên nhất?",
    "output": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị những người đã được điều chỉnh nhiều lần nhất và số lần tương ứng.",
    "output": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những người nào bị cắt đứt là người tổng hợp thường xuyên nhất?Cho tôi tên của người và số lượng tần số.",
    "output": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của các bên không có đại biểu trong cuộc bầu cử là gì?",
    "output": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)"
  },
  {
    "instruction": "",
    "input": "Những đảng nào không có đại biểu trong cuộc bầu cử?",
    "output": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)"
  },
  {
    "instruction": "",
    "input": "Tên của các bên có cả các đại biểu trong ủy ban \"chiếm đoạt\" và",
    "output": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Economic Matters\""
  },
  {
    "instruction": "",
    "input": "Những đảng nào có đại biểu trong cả ủy ban \"chiếm đoạt\" và ủy ban \"vấn đề kinh tế\"?",
    "output": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Economic Matters\""
  },
  {
    "instruction": "",
    "input": "Những ủy ban nào có đại biểu từ cả Đảng Dân chủ và Đảng Tự do?",
    "output": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Liberal\""
  },
  {
    "instruction": "",
    "input": "Tìm các ủy ban có đại biểu cả từ Đảng Dân chủ và Đảng Tự do.",
    "output": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Liberal\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhà báo?",
    "output": "SELECT count(*) FROM journalist"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các nhà báo theo thứ tự tăng dần của năm làm việc.",
    "output": "SELECT Name FROM journalist ORDER BY Years_working ASC"
  },
  {
    "instruction": "",
    "input": "Các quốc tịch và lứa tuổi của các nhà báo là gì?",
    "output": "SELECT Nationality ,  Age FROM journalist"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các nhà báo từ \"Anh\" hoặc \"xứ Wales\".",
    "output": "SELECT Name FROM journalist WHERE Nationality  =  \"England\" OR Nationality  =  \"Wales\""
  },
  {
    "instruction": "",
    "input": "Số năm trung bình làm việc như một nhà báo là bao nhiêu?",
    "output": "SELECT avg(Years_working) FROM journalist"
  },
  {
    "instruction": "",
    "input": "Quốc tịch của nhà báo với số năm lớn nhất làm việc là gì?",
    "output": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các quốc tịch khác nhau và số lượng các nhà báo của mỗi quốc tịch.",
    "output": "SELECT Nationality ,  COUNT(*) FROM journalist GROUP BY Nationality"
  },
  {
    "instruction": "",
    "input": "Hiển thị quốc tịch phổ biến nhất cho các nhà báo.",
    "output": "SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cho thấy các quốc gia có cả hai nhà báo với hơn 10 năm làm việc và các nhà báo với ít hơn 3 năm làm việc.",
    "output": "SELECT Nationality FROM journalist WHERE Years_working  >  10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working  <  3"
  },
  {
    "instruction": "",
    "input": "Hiển thị ngày, địa điểm và tên của các sự kiện theo thứ tự giảm dần của sự tham dự.",
    "output": "SELECT Date ,  Name ,  venue FROM event ORDER BY Event_Attendance DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các nhà báo và ngày của các sự kiện họ báo cáo.",
    "output": "SELECT T3.Name ,  T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các nhà báo và tên của các sự kiện mà họ đã báo cáo theo thứ tự tăng dần",
    "output": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các nhà báo và số lượng sự kiện họ báo cáo.",
    "output": "SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các nhà báo đã báo cáo nhiều hơn một sự kiện.",
    "output": "SELECT T3.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các nhà báo chưa báo cáo bất kỳ sự kiện nào.",
    "output": "SELECT Name FROM journalist WHERE journalist_ID NOT IN (SELECT journalist_ID FROM news_report)"
  },
  {
    "instruction": "",
    "input": "Sự tham dự trung bình và tối đa của tất cả các sự kiện là gì?",
    "output": "SELECT avg(Event_Attendance) ,  max(Event_Attendance) FROM event"
  },
  {
    "instruction": "",
    "input": "Tìm độ tuổi trung bình và kinh nghiệm làm việc của các nhà báo làm việc theo loại vai trò khác nhau.",
    "output": "SELECT avg(t1.age) ,  avg(Years_working) ,  t2.work_type FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id  =  t2.journalist_id GROUP BY t2.work_type"
  },
  {
    "instruction": "",
    "input": "Liệt kê các địa điểm sự kiện và tên có 2 số người hàng đầu tham dự.",
    "output": "SELECT venue ,  name FROM event ORDER BY Event_Attendance DESC LIMIT 2"
  },
  {
    "instruction": "",
    "input": "Cho tôi xem tất cả các nhà hàng.",
    "output": "SELECT ResName FROM Restaurant;"
  },
  {
    "instruction": "",
    "input": "Địa chỉ của tàu điện ngầm nhà hàng là gì?",
    "output": "SELECT Address FROM Restaurant WHERE ResName = \"Subway\";"
  },
  {
    "instruction": "",
    "input": "Đánh giá của tàu điện ngầm nhà hàng là gì?",
    "output": "SELECT Rating FROM Restaurant WHERE ResName = \"Subway\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các loại nhà hàng.",
    "output": "SELECT ResTypeName FROM Restaurant_Type;"
  },
  {
    "instruction": "",
    "input": "Mô tả của bánh sandwich loại nhà hàng là gì?",
    "output": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = \"Sandwich\";"
  },
  {
    "instruction": "",
    "input": "Những nhà hàng nào có xếp hạng cao nhất?Liệt kê tên nhà hàng và xếp hạng của nó.",
    "output": "SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tuổi của học sinh Linda Smith là gì?",
    "output": "SELECT Age FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";"
  },
  {
    "instruction": "",
    "input": "Giới tính của sinh viên Linda Smith là gì?",
    "output": "SELECT Sex FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên và họ của tất cả học sinh, những người học chuyên ngành năm 600.",
    "output": "SELECT Fname , Lname FROM Student WHERE Major  =  600;"
  },
  {
    "instruction": "",
    "input": "Học sinh Linda Smith sống ở thành phố nào?",
    "output": "SELECT city_code FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";"
  },
  {
    "instruction": "",
    "input": "Cố vấn 1121 có bao nhiêu sinh viên?",
    "output": "SELECT count(*) FROM Student WHERE Advisor =  1121;"
  },
  {
    "instruction": "",
    "input": "Cố vấn nào có hầu hết sinh viên?Danh sách cố vấn và số lượng sinh viên.",
    "output": "SELECT Advisor ,  count(*) FROM Student GROUP BY Advisor ORDER BY count(Advisor) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Những học sinh chính nào có ít nhất?Liệt kê chính và số lượng sinh viên.",
    "output": "SELECT Major ,  count(*) FROM Student GROUP BY Major ORDER BY count(Major) ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Chuyên ngành nào có trong khoảng từ 2 đến 30 sinh viên?Liệt kê chính và số lượng sinh viên.",
    "output": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;"
  },
  {
    "instruction": "",
    "input": "Tuổi học nào lớn hơn 18 tuổi và học chuyên ngành năm 600?Liệt kê họ và họ của mỗi học sinh.",
    "output": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các sinh viên nữ tuổi hơn 18 tuổi không học chuyên ngành 600. Liệt kê tên và họ của học sinh.",
    "output": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F';"
  },
  {
    "instruction": "",
    "input": "Nhà hàng kiểu bánh sandwich có bao nhiêu nhà hàng?",
    "output": "SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'"
  },
  {
    "instruction": "",
    "input": "Học sinh Linda Smith dành tổng cộng cho nhà hàng bao lâu?",
    "output": "SELECT sum(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\";"
  },
  {
    "instruction": "",
    "input": "Học sinh Linda Smith đã đến thăm Subway bao nhiêu lần?",
    "output": "SELECT count(*) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";"
  },
  {
    "instruction": "",
    "input": "Linda Smith đến Subway khi nào?",
    "output": "SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";"
  },
  {
    "instruction": "",
    "input": "Các sinh viên đã dành ít thời gian nhất?Liệt kê nhà hàng và thời gian sinh viên dành toàn bộ.",
    "output": "SELECT Restaurant.ResName ,  sum(Visits_Restaurant.Spent) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum(Visits_Restaurant.Spent) ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Học sinh nào đến thăm nhà hàng thường xuyên nhất?Liệt kê tên và họ của sinh viên.",
    "output": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tìm ID của các đơn đặt hàng có trạng thái là 'thành công'.",
    "output": "SELECT actual_order_id FROM actual_orders WHERE order_status_code  =  'Success'"
  },
  {
    "instruction": "",
    "input": "Tìm tên và giá của sản phẩm đã được đặt hàng số lần lớn nhất.",
    "output": "SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng khách hàng trong tổng số.",
    "output": "SELECT count(*) FROM customers"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phương thức thanh toán khác nhau?",
    "output": "SELECT count(DISTINCT payment_method) FROM customers"
  },
  {
    "instruction": "",
    "input": "Hiển thị chi tiết của tất cả các xe tải theo thứ tự số giấy phép của họ.",
    "output": "SELECT truck_details FROM trucks ORDER BY truck_licence_number"
  },
  {
    "instruction": "",
    "input": "Tìm tên của sản phẩm đắt nhất.",
    "output": "SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những khách hàng không sống ở bang California.",
    "output": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và email của khách hàng đã trả bằng thẻ Visa.",
    "output": "SELECT customer_email ,  customer_name FROM customers WHERE payment_method  =  'Visa'"
  },
  {
    "instruction": "",
    "input": "Tìm tên và số điện thoại của khách hàng sống ở bang California.",
    "output": "SELECT t1.customer_name ,  t1.customer_phone FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'"
  },
  {
    "instruction": "",
    "input": "Tìm các tiểu bang không có bất kỳ nhân viên nào trong hồ sơ của họ.",
    "output": "SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees)"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên, số điện thoại và email của tất cả các khách hàng được sắp xếp theo ngày của họ để trở thành khách hàng.",
    "output": "SELECT customer_name ,  customer_phone ,  customer_email FROM Customers ORDER BY date_became_customer"
  },
  {
    "instruction": "",
    "input": "Tìm tên của 5 khách hàng đầu tiên.",
    "output": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Tìm phương thức thanh toán được sử dụng thường xuyên nhất.",
    "output": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các tuyến theo thứ tự chữ cái.",
    "output": "SELECT route_name FROM Delivery_Routes ORDER BY route_name"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tuyến đường có số lượng giao hàng cao nhất.",
    "output": "SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id  =  t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên nhà nước và số lượng khách hàng sống ở mỗi tiểu bang.",
    "output": "SELECT t2.state_province_county ,  count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id  =  t2.address_id GROUP BY t2.state_province_county"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tác giả?",
    "output": "SELECT count(*) FROM authors"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng tác giả.",
    "output": "SELECT count(*) FROM authors"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tổ chức?",
    "output": "SELECT count(*) FROM inst"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các tổ chức.",
    "output": "SELECT count(*) FROM inst"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu bài báo?",
    "output": "SELECT count(*) FROM papers"
  },
  {
    "instruction": "",
    "input": "Đếm số tổng số giấy tờ.",
    "output": "SELECT count(*) FROM papers"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của các bài báo được xuất bản bởi \"Jeremy Gibbons\" là gì?",
    "output": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Jeremy\" AND t1.lname  =  \"Gibbons\""
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề của tất cả các bài báo được viết bởi \"Jeremy Gibbons\"",
    "output": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Jeremy\" AND t1.lname  =  \"Gibbons\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các bài báo được xuất bản bởi \"Aaron Turon\".",
    "output": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\""
  },
  {
    "instruction": "",
    "input": "Tìm tiêu đề của tất cả các bài báo được viết bởi \"Aaron Turon\".",
    "output": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài báo có \"Atsushi Ohori\" được xuất bản?",
    "output": "SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Atsushi\" AND t1.lname  =  \"Ohori\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài báo \"Atsushi Ohori\" là tác giả của?",
    "output": "SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Atsushi\" AND t1.lname  =  \"Ohori\""
  },
  {
    "instruction": "",
    "input": "Tên của tổ chức mà \"Matthias Blume\" thuộc về là gì?",
    "output": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\""
  },
  {
    "instruction": "",
    "input": "Tổ chức nào là tác giả \"Matthias Blume\" thuộc về?Cho tôi tên của tổ chức.",
    "output": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\""
  },
  {
    "instruction": "",
    "input": "\"Katsuhiro ueno\" thuộc tổ chức nào?",
    "output": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\""
  },
  {
    "instruction": "",
    "input": "Tên của tổ chức là tác giả \"Katsuhiro ueno\" thuộc về?",
    "output": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\""
  },
  {
    "instruction": "",
    "input": "Ai thuộc về tổ chức \"Đại học Oxford\"?Hiển thị tên và họ.",
    "output": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\""
  },
  {
    "instruction": "",
    "input": "Tìm tên và tên cuối cùng của các tác giả có liên kết tổ chức là \"Đại học Oxford\".",
    "output": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\""
  },
  {
    "instruction": "",
    "input": "Những tác giả nào thuộc về tổ chức \"Google\"?Hiển thị tên và họ.",
    "output": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\""
  },
  {
    "instruction": "",
    "input": "Tìm tên và họ của các tác giả có liên kết tổ chức là \"Google\".",
    "output": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\""
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của tác giả của bài báo có tiêu đề \"Binder không bị ràng buộc\" là gì?",
    "output": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\""
  },
  {
    "instruction": "",
    "input": "Ai là tác giả của bài báo có tiêu đề \"Binder không bị ràng buộc\"?Cho tôi biết tên cuối cùng.",
    "output": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\""
  },
  {
    "instruction": "",
    "input": "Tìm họ và họ của tác giả đã viết bài báo \"Không tên, không đau\".",
    "output": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tác giả đã xuất bản bài báo có tựa đề \"Không tên, không đau\" là gì?",
    "output": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\""
  },
  {
    "instruction": "",
    "input": "Các bài báo được xuất bản theo \"Đại học Indiana\" là gì?",
    "output": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\""
  },
  {
    "instruction": "",
    "input": "Liệt kê các tiêu đề của các bài báo có tác giả đến từ tổ chức \"Đại học Indiana\".",
    "output": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các bài báo được xuất bản bởi tổ chức \"Google\".",
    "output": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\""
  },
  {
    "instruction": "",
    "input": "Những bài báo nào được viết bởi các tác giả từ tổ chức \"Google\"?",
    "output": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài báo được xuất bản bởi tổ chức \"Đại học Tohoku\"?",
    "output": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Tokohu University\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng bài báo được xuất bản bởi các tác giả từ tổ chức \"Đại học Tokohu\".",
    "output": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Tokohu University\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng bài báo được xuất bản bởi tổ chức \"Đại học Pennsylvania\".",
    "output": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Pennsylvania\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài báo được viết bởi các tác giả từ tổ chức \"Đại học Pennsylvania\"?",
    "output": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Pennsylvania\""
  },
  {
    "instruction": "",
    "input": "Tìm các bài báo có \"Olin rùng mình\" với tư cách là một tác giả.",
    "output": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Olin\" AND t1.lname  =  \"Shivers\""
  },
  {
    "instruction": "",
    "input": "Tác giả \"olin rùng mình\" tác giả nào đã viết?Cho tôi tiêu đề giấy.",
    "output": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Olin\" AND t1.lname  =  \"Shivers\""
  },
  {
    "instruction": "",
    "input": "Những bài báo nào có \"Stephanie Weirich\" với tư cách là một tác giả?",
    "output": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Stephanie\" AND t1.lname  =  \"Weirich\""
  },
  {
    "instruction": "",
    "input": "Tìm các tiêu đề của các bài báo mà tác giả \"Stephanie Weirich\" đã viết.",
    "output": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Stephanie\" AND t1.lname  =  \"Weirich\""
  },
  {
    "instruction": "",
    "input": "Bài báo nào được xuất bản trong một tổ chức trong \"Hoa Kỳ\" và có \"Turon\" làm tác giả thứ hai?",
    "output": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\""
  },
  {
    "instruction": "",
    "input": "Tìm các bài báo có tác giả thứ hai có họ \"Turon\" và được liên kết với một tổ chức ở nước này \"Hoa Kỳ\".",
    "output": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\""
  },
  {
    "instruction": "",
    "input": "Tìm các tiêu đề của các bài báo có tác giả đầu tiên liên kết với một tổ chức ở nước này là \"Nhật Bản\" và có tên cuối cùng là \"Ohori\"?",
    "output": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\""
  },
  {
    "instruction": "",
    "input": "Tác giả đầu tiên của bài báo nào liên kết với một tổ chức ở nước này là \"Nhật Bản\" và có tên cuối cùng là \"Ohori\"?Hãy cho tôi các tiêu đề của các bài báo.",
    "output": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\""
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của tác giả đã xuất bản nhiều bài báo nhất là gì?",
    "output": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tác giả nào đã viết nhiều bài báo nhất?Tìm họ của anh ấy hoặc cô ấy.",
    "output": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Lấy đất nước đã xuất bản nhiều bài báo nhất.",
    "output": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm đất nước mà nhiều giấy tờ nhất được liên kết với.",
    "output": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tổ chức đã xuất bản số lượng bài báo lớn nhất.",
    "output": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tổ chức nào có nhiều bài báo nhất?Tìm tên của tổ chức.",
    "output": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm các tiêu đề của các bài báo có chứa từ \"ml\".",
    "output": "SELECT title FROM papers WHERE title LIKE \"%ML%\""
  },
  {
    "instruction": "",
    "input": "Những bài báo nào có \"ML\" trong tiêu đề của họ?Trả lại các tiêu đề của các bài báo.",
    "output": "SELECT title FROM papers WHERE title LIKE \"%ML%\""
  },
  {
    "instruction": "",
    "input": "Tiêu đề của giấy nào chứa từ \"cơ sở dữ liệu\"?",
    "output": "SELECT title FROM papers WHERE title LIKE \"%Database%\""
  },
  {
    "instruction": "",
    "input": "Những bài báo nào có \"cơ sở dữ liệu\" trong tiêu đề của họ?Hiển thị các tiêu đề của các bài báo.",
    "output": "SELECT title FROM papers WHERE title LIKE \"%Database%\""
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của tất cả các tác giả đã viết một bài báo với tiêu đề chứa từ \"chức năng\".",
    "output": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\""
  },
  {
    "instruction": "",
    "input": "Ai đã viết một bài báo có từ \"chức năng\" trong tiêu đề của nó?Trả lại tên đầu tiên của các tác giả.",
    "output": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\""
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của tất cả các tác giả đã viết một bài báo với tiêu đề chứa từ \"Monadic\".",
    "output": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Monadic%\""
  },
  {
    "instruction": "",
    "input": "Những tác giả nào đã viết một bài báo với tiêu đề chứa từ \"Monadic\"?Trả lại tên cuối cùng của họ.",
    "output": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Monadic%\""
  },
  {
    "instruction": "",
    "input": "Lấy tiêu đề của bài báo có số lượng tác giả lớn nhất.",
    "output": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)"
  },
  {
    "instruction": "",
    "input": "Bài báo nào có nhiều tác giả nhất?Cho tôi tiêu đề giấy.",
    "output": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tác giả với họ \"Ueno\" là gì?",
    "output": "SELECT fname FROM authors WHERE lname  =  \"Ueno\""
  },
  {
    "instruction": "",
    "input": "Những tác giả nào có họ \"Ueno\"?Liệt kê tên đầu tiên của họ.",
    "output": "SELECT fname FROM authors WHERE lname  =  \"Ueno\""
  },
  {
    "instruction": "",
    "input": "Tìm họ của tác giả có tên \"Amal\".",
    "output": "SELECT lname FROM authors WHERE fname  =  \"Amal\""
  },
  {
    "instruction": "",
    "input": "Những tác giả nào có tên \"Amal\"?Liệt kê tên cuối cùng của họ.",
    "output": "SELECT lname FROM authors WHERE fname  =  \"Amal\""
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của tất cả các tác giả được đặt hàng theo thứ tự bảng chữ cái.",
    "output": "SELECT fname FROM authors ORDER BY fname"
  },
  {
    "instruction": "",
    "input": "Sắp xếp tên đầu tiên của tất cả các tác giả theo thứ tự bảng chữ cái.",
    "output": "SELECT fname FROM authors ORDER BY fname"
  },
  {
    "instruction": "",
    "input": "Lấy tất cả tên cuối cùng của các tác giả theo thứ tự bảng chữ cái.",
    "output": "SELECT lname FROM authors ORDER BY lname"
  },
  {
    "instruction": "",
    "input": "Cho tôi một danh sách tất cả tên cuối cùng của các tác giả được sắp xếp theo thứ tự bảng chữ cái",
    "output": "SELECT lname FROM authors ORDER BY lname"
  },
  {
    "instruction": "",
    "input": "Lấy tất cả tên đầu tiên và tên cuối cùng của các tác giả theo thứ tự bảng chữ cái của họ.",
    "output": "SELECT fname ,  lname FROM authors ORDER BY lname"
  },
  {
    "instruction": "",
    "input": "Sắp xếp danh sách tất cả tên đầu tiên và tên cuối cùng của các tác giả theo thứ tự bảng chữ cái của họ.",
    "output": "SELECT fname ,  lname FROM authors ORDER BY lname"
  },
  {
    "instruction": "",
    "input": "Các diễn viên và nữ diễn viên có bao nhiêu tên khác nhau?",
    "output": "SELECT count(DISTINCT last_name) FROM actor"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các diễn viên tên khác nhau có.",
    "output": "SELECT count(DISTINCT last_name) FROM actor"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên phổ biến nhất của các diễn viên là gì?",
    "output": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về tên đầu tiên phổ biến nhất trong số tất cả các diễn viên.",
    "output": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ phổ biến nhất của các diễn viên là gì?",
    "output": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về tên đầy đủ phổ biến nhất trong số tất cả các diễn viên.",
    "output": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những quận nào có ít nhất hai địa chỉ?",
    "output": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho các quận có hai hoặc nhiều địa chỉ.",
    "output": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Số điện thoại và mã bưu chính của địa chỉ 1031 Daugavpils Parkway là gì?",
    "output": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho điện thoại và mã bưu chính tương ứng với địa chỉ '1031 Daugavpils Parkway'.",
    "output": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'"
  },
  {
    "instruction": "",
    "input": "Thành phố nào có nhiều địa chỉ nhất?Liệt kê tên thành phố, số lượng địa chỉ và ID thành phố.",
    "output": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên thành phố, ID và số lượng địa chỉ tương ứng với thành phố với địa chỉ nhiều nhất là gì?",
    "output": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu địa chỉ ở quận California?",
    "output": "SELECT count(*) FROM address WHERE district  =  'California'"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng địa chỉ trong quận California.",
    "output": "SELECT count(*) FROM address WHERE district  =  'California'"
  },
  {
    "instruction": "",
    "input": "Bộ phim nào được thuê với mức phí 0,99 và có ít hơn 3 trong kho?Liệt kê tiêu đề phim và ID.",
    "output": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3"
  },
  {
    "instruction": "",
    "input": "Tiêu đề và ID của bộ phim có tỷ lệ cho thuê 0,99 và hàng tồn kho dưới 3 là gì?",
    "output": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành phố ở Úc?",
    "output": "SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng thành phố ở Úc.",
    "output": "SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'"
  },
  {
    "instruction": "",
    "input": "Những quốc gia nào có ít nhất 3 thành phố?",
    "output": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Các quốc gia có chứa 3 thành phố trở lên là gì?",
    "output": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các ngày thanh toán cho các khoản thanh toán với số tiền lớn hơn 10 và các khoản thanh toán được xử lý bởi một nhân viên có tên đầu tiên Elsa.",
    "output": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'"
  },
  {
    "instruction": "",
    "input": "Ngày thanh toán cho bất kỳ khoản thanh toán nào có số tiền lớn hơn 10 hoặc được xử lý bởi một nhân viên với tên đầu tiên Elsa là gì?",
    "output": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng có giá trị tích cực là 1?",
    "output": "SELECT count(*) FROM customer WHERE active = '1'"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng khách hàng đang hoạt động.",
    "output": "SELECT count(*) FROM customer WHERE active = '1'"
  },
  {
    "instruction": "",
    "input": "Bộ phim nào có tỷ lệ cho thuê cao nhất?Và tỷ lệ là bao nhiêu?",
    "output": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tiêu đề và tỷ lệ cho thuê của bộ phim với tỷ lệ cho thuê cao nhất là gì?",
    "output": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Bộ phim nào có số lượng diễn viên hay nữ diễn viên nào nhất?Liệt kê tên phim, ID phim và mô tả.",
    "output": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tiêu đề, ID và mô tả của bộ phim với số lượng diễn viên lớn nhất là gì?",
    "output": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Diễn viên bộ phim nào (nữ diễn viên) đóng vai chính nhất?Liệt kê tên, họ và id diễn viên của anh ấy hoặc cô ấy.",
    "output": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên đầy đủ và ID của nam diễn viên hoặc nữ diễn viên đóng vai chính trong số lượng bộ phim lớn nhất.",
    "output": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những diễn viên điện ảnh (nữ diễn viên) nào đóng một vai trong hơn 30 bộ phim?Liệt kê tên và họ của anh ấy hoặc cô ấy.",
    "output": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của các diễn viên có vai diễn trong hơn 30 bộ phim là gì?",
    "output": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30"
  },
  {
    "instruction": "",
    "input": "Cửa hàng nào sở hữu hầu hết các mặt hàng?",
    "output": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của cửa hàng có nhiều mặt hàng nhất trong hàng tồn kho là gì?",
    "output": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền của tất cả các khoản thanh toán là bao nhiêu?",
    "output": "SELECT sum(amount) FROM payment"
  },
  {
    "instruction": "",
    "input": "Trả lại tổng số tiền thanh toán.",
    "output": "SELECT sum(amount) FROM payment"
  },
  {
    "instruction": "",
    "input": "Khách hàng nào, ai đã thực hiện ít nhất một khoản thanh toán, đã chi ít tiền nhất?Liệt kê tên, họ và id của anh ấy hoặc cô ấy.",
    "output": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ và ID của khách hàng có tổng số tiền thanh toán thấp nhất là gì?",
    "output": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên thể loại của mái nhà đói là gì?",
    "output": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'"
  },
  {
    "instruction": "",
    "input": "Trả về tên của thể loại mà bộ phim 'Hunger Move' thuộc về bộ phim.",
    "output": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bộ phim trong mỗi thể loại?Liệt kê tên thể loại, ID thể loại và số lượng.",
    "output": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id"
  },
  {
    "instruction": "",
    "input": "Tên và ID của các thể loại khác nhau là gì, và mỗi loại là bao nhiêu bộ phim?",
    "output": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id"
  },
  {
    "instruction": "",
    "input": "Bộ phim nào có nhiều bản sao nhất trong kho?Liệt kê cả tiêu đề và ID.",
    "output": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tiêu đề và ID của bộ phim có số lượng bản sao lớn nhất trong hàng tồn kho là gì?",
    "output": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tiêu đề phim và ID hàng tồn kho của mặt hàng trong kho được thuê thường xuyên nhất là gì?",
    "output": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tiêu đề và ID hàng tồn kho của bộ phim được thuê thường xuyên nhất.",
    "output": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ngôn ngữ trong những bộ phim này?",
    "output": "SELECT count(DISTINCT language_id) FROM film"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng ngôn ngữ khác nhau trong các bộ phim này.",
    "output": "SELECT count(DISTINCT language_id) FROM film"
  },
  {
    "instruction": "",
    "input": "Tất cả các bộ phim được đánh giá là R?Liệt kê các tiêu đề.",
    "output": "SELECT title FROM film WHERE rating  =  'R'"
  },
  {
    "instruction": "",
    "input": "Trả lại tiêu đề của bất kỳ bộ phim nào với xếp hạng R.",
    "output": "SELECT title FROM film WHERE rating  =  'R'"
  },
  {
    "instruction": "",
    "input": "Cửa hàng 1 nằm ở đâu?",
    "output": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1"
  },
  {
    "instruction": "",
    "input": "Trả lại địa chỉ của Cửa hàng 1.",
    "output": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1"
  },
  {
    "instruction": "",
    "input": "Nhân viên nào xử lý số lượng thanh toán ít nhất?Liệt kê tên đầy đủ và ID.",
    "output": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đặt tên đầy đủ và ID nhân viên của các nhân viên đã xử lý các khoản thanh toán ít nhất.",
    "output": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Phim Pollock sân bay sử dụng ngôn ngữ nào?Liệt kê tên ngôn ngữ.",
    "output": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK'"
  },
  {
    "instruction": "",
    "input": "Tên của ngôn ngữ mà bộ phim 'sân bay Pollock' là gì?",
    "output": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cửa hàng?",
    "output": "SELECT count(*) FROM store"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng cửa hàng.",
    "output": "SELECT count(*) FROM store"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại xếp hạng khác nhau được liệt kê?",
    "output": "SELECT count(DISTINCT rating) FROM film"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng xếp hạng phim khác nhau.",
    "output": "SELECT count(DISTINCT rating) FROM film"
  },
  {
    "instruction": "",
    "input": "Những bộ phim nào có 'cảnh bị xóa' dưới dạng phụ trong tính năng đặc biệt?",
    "output": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'"
  },
  {
    "instruction": "",
    "input": "Trả lại các tiêu đề của các bộ phim bao gồm 'các cảnh bị xóa' trong phần tính năng đặc biệt của họ.",
    "output": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'"
  },
  {
    "instruction": "",
    "input": "Cửa hàng có bao nhiêu mặt hàng trong kho 1 có?",
    "output": "SELECT count(*) FROM inventory WHERE store_id  =  1"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các mặt hàng cửa hàng 1 có trong kho.",
    "output": "SELECT count(*) FROM inventory WHERE store_id  =  1"
  },
  {
    "instruction": "",
    "input": "Khi nào khoản thanh toán đầu tiên xảy ra?",
    "output": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Ngày thanh toán sớm nhất là gì?",
    "output": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Khách hàng có tên Linda Live ở đâu?Và email của cô ấy là gì?",
    "output": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'"
  },
  {
    "instruction": "",
    "input": "Trả lại địa chỉ và email của khách hàng với tên đầu tiên Linda.",
    "output": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các bộ phim dài hơn 100 phút, hoặc PG xếp hạng, ngoại trừ những người có giá hơn 200 để thay thế.Liệt kê các tiêu đề.",
    "output": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của các bộ phim dài hơn 100 phút hoặc được xếp hạng PG ngoài những bộ phim có giá hơn 200 để thay thế?",
    "output": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và tên cuối cùng của khách hàng đã cho thuê sớm nhất là gì?",
    "output": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên đầy đủ của khách hàng đã cho thuê đầu tiên.",
    "output": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của nhân viên đã thuê một bộ phim cho một khách hàng với tên đầu tiên April và tên cuối cùng Burns là gì?",
    "output": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'"
  },
  {
    "instruction": "",
    "input": "Trả lại tên đầy đủ của các nhân viên đã cung cấp cho khách hàng tên đầu tiên April và tên cuối cùng Burns với một bộ phim cho thuê.",
    "output": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'"
  },
  {
    "instruction": "",
    "input": "Cửa hàng nào có hầu hết các khách hàng?",
    "output": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại ID của cửa hàng với nhiều khách hàng nhất.",
    "output": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Số tiền thanh toán lớn nhất là bao nhiêu?",
    "output": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại số tiền thanh toán lớn nhất.",
    "output": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Nhân viên có tên đầu tiên Elsa Live ở đâu?",
    "output": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'"
  },
  {
    "instruction": "",
    "input": "Cho địa chỉ của nhân viên có tên đầu tiên Elsa.",
    "output": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của khách hàng chưa thuê bất kỳ bộ phim nào sau '2005-08-23 02:06:01'?",
    "output": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )"
  },
  {
    "instruction": "",
    "input": "Trả lại tên đầu tiên của những khách hàng không thuê một bộ phim sau ngày '2005-08-23 02:06:01'.",
    "output": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu chi nhánh ngân hàng?",
    "output": "SELECT count(*) FROM bank"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng chi nhánh ngân hàng.",
    "output": "SELECT count(*) FROM bank"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng ở đó?",
    "output": "SELECT sum(no_of_customers) FROM bank"
  },
  {
    "instruction": "",
    "input": "Tổng số khách hàng trên khắp các ngân hàng là gì?",
    "output": "SELECT sum(no_of_customers) FROM bank"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng khách hàng trong các ngân hàng tại thành phố New York.",
    "output": "SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'"
  },
  {
    "instruction": "",
    "input": "Tổng số khách hàng sử dụng các ngân hàng ở thành phố New York là bao nhiêu?",
    "output": "SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng khách hàng trung bình trong tất cả các ngân hàng của bang Utah.",
    "output": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'"
  },
  {
    "instruction": "",
    "input": "Số lượng khách hàng trung bình trên khắp các ngân hàng ở bang Utah là bao nhiêu?",
    "output": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng khách hàng trung bình vượt qua tất cả các ngân hàng.",
    "output": "SELECT avg(no_of_customers) FROM bank"
  },
  {
    "instruction": "",
    "input": "Số lượng khách hàng ngân hàng trung bình là bao nhiêu?",
    "output": "SELECT avg(no_of_customers) FROM bank"
  },
  {
    "instruction": "",
    "input": "Tìm thành phố và tiểu bang của chi nhánh ngân hàng tên là Morningside.",
    "output": "SELECT city ,  state FROM bank WHERE bname  =  'morningside'"
  },
  {
    "instruction": "",
    "input": "Ngân hàng có tên là thành phố và tiểu bang nào có tên là Morningside?",
    "output": "SELECT city ,  state FROM bank WHERE bname  =  'morningside'"
  },
  {
    "instruction": "",
    "input": "Tìm tên chi nhánh của các ngân hàng ở bang New York.",
    "output": "SELECT bname FROM bank WHERE state  =  'New York'"
  },
  {
    "instruction": "",
    "input": "Tên của các ngân hàng ở bang New York là gì?",
    "output": "SELECT bname FROM bank WHERE state  =  'New York'"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các khách hàng được sắp xếp theo số dư tài khoản của họ theo thứ tự tăng dần.",
    "output": "SELECT cust_name FROM customer ORDER BY acc_bal"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các khách hàng, được đặt hàng theo số dư tài khoản là gì?",
    "output": "SELECT cust_name FROM customer ORDER BY acc_bal"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các khách hàng khác nhau có một số khoản vay được sắp xếp theo tổng số tiền cho vay của họ.",
    "output": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)"
  },
  {
    "instruction": "",
    "input": "Tên của các khách hàng khác nhau đã vay một khoản vay, được đặt hàng bởi tổng số tiền mà họ đã thực hiện là gì?",
    "output": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)"
  },
  {
    "instruction": "",
    "input": "Tìm trạng thái, loại tài khoản và điểm tín dụng của khách hàng có số khoản vay là 0.",
    "output": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0"
  },
  {
    "instruction": "",
    "input": "Các tiểu bang, loại tài khoản và điểm tín dụng cho khách hàng có 0 khoản vay là gì?",
    "output": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các thành phố khác nhau mà các ngân hàng được đặt tại.",
    "output": "SELECT count(DISTINCT city) FROM bank"
  },
  {
    "instruction": "",
    "input": "Trong bao nhiêu thành phố khác nhau là các ngân hàng?",
    "output": "SELECT count(DISTINCT city) FROM bank"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các tiểu bang khác nhau mà các ngân hàng được đặt tại.",
    "output": "SELECT count(DISTINCT state) FROM bank"
  },
  {
    "instruction": "",
    "input": "Trong bao nhiêu quốc gia khác nhau là các ngân hàng?",
    "output": "SELECT count(DISTINCT state) FROM bank"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại tài khoản riêng biệt?",
    "output": "SELECT count(DISTINCT acc_type) FROM customer"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các loại tài khoản khác nhau.",
    "output": "SELECT count(DISTINCT acc_type) FROM customer"
  },
  {
    "instruction": "",
    "input": "Tìm tên và số dư tài khoản của khách hàng có tên bao gồm chữ ‘A.",
    "output": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'"
  },
  {
    "instruction": "",
    "input": "Tên và số dư tài khoản của khách hàng với chữ A trong tên của họ là gì?",
    "output": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số dư tài khoản của mỗi khách hàng từ Utah hoặc Texas.",
    "output": "SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas'"
  },
  {
    "instruction": "",
    "input": "Tổng số dư tài khoản cho mỗi khách hàng từ Utah hoặc Texas là gì?",
    "output": "SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng có cả tiết kiệm và kiểm tra loại tài khoản.",
    "output": "SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking'"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng có cả tiết kiệm và kiểm tra tài khoản là gì?",
    "output": "SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng không có tài khoản tiết kiệm.",
    "output": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng không có tài khoản tiết kiệm là gì?",
    "output": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những khách hàng không có khoản vay với một loại thế chấp.",
    "output": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages'"
  },
  {
    "instruction": "",
    "input": "Tên của những khách hàng chưa vay thế chấp là gì?",
    "output": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng có các khoản vay của cả thế chấp và ô tô.",
    "output": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Auto'"
  },
  {
    "instruction": "",
    "input": "Tên của những khách hàng đã thực hiện cả thế chấp và cho vay ô tô là gì?",
    "output": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Auto'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng có điểm tín dụng dưới mức tín dụng trung bình của tất cả các khách hàng.",
    "output": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng có điểm tín dụng ít hơn điểm tín dụng trung bình trên khách hàng là gì?",
    "output": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)"
  },
  {
    "instruction": "",
    "input": "Tìm tên chi nhánh của ngân hàng có nhiều khách hàng nhất.",
    "output": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của chi nhánh ngân hàng với số lượng khách hàng lớn nhất là gì?",
    "output": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng có điểm tín dụng thấp nhất.",
    "output": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng với điểm tín dụng tồi tệ nhất là gì?",
    "output": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên, loại tài khoản và số dư tài khoản của khách hàng có điểm tín dụng cao nhất.",
    "output": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên, loại tài khoản và số dư tài khoản tương ứng với khách hàng với điểm tín dụng cao nhất là gì?",
    "output": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng có số tiền vay cao nhất.",
    "output": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng có tổng số tiền cho vay lớn nhất là gì?",
    "output": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm trạng thái có nhiều khách hàng nhất.",
    "output": "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tiểu bang nào có tổng số khách hàng ngân hàng lớn nhất?",
    "output": "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi loại tài khoản, hãy tìm số dư tài khoản trung bình của khách hàng với điểm tín dụng thấp hơn 50.",
    "output": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type"
  },
  {
    "instruction": "",
    "input": "Số dư tài khoản trung bình của khách hàng có điểm tín dụng dưới 50 cho các loại tài khoản khác nhau là gì?",
    "output": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi tiểu bang, hãy tìm tổng số dư tài khoản của khách hàng có điểm tín dụng trên 100.",
    "output": "SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state"
  },
  {
    "instruction": "",
    "input": "Tổng số dư tài khoản cho khách hàng có điểm tín dụng trên 100 cho các tiểu bang khác nhau là bao nhiêu?",
    "output": "SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số tiền cho vay được cung cấp bởi mỗi chi nhánh ngân hàng.",
    "output": "SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname"
  },
  {
    "instruction": "",
    "input": "Tên của các chi nhánh ngân hàng khác nhau là gì và tổng số tiền cho vay của họ là bao nhiêu?",
    "output": "SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những khách hàng có nhiều hơn một khoản vay.",
    "output": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tên của những khách hàng đã nhận được nhiều hơn một khoản vay là gì?",
    "output": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm số dư tên và tài khoản của các khách hàng có các khoản vay với tổng số tiền hơn 5000.",
    "output": "SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000"
  },
  {
    "instruction": "",
    "input": "Tên và số dư tài khoản cho khách hàng đã lấy tổng số tiền hơn 5000 khoản vay là gì?",
    "output": "SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000"
  },
  {
    "instruction": "",
    "input": "Tìm tên của chi nhánh ngân hàng cung cấp tổng số tiền vay lớn nhất.",
    "output": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của chi nhánh ngân hàng đã cho vay số tiền lớn nhất là gì?",
    "output": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của Ngân hàng Chi nhánh cung cấp tổng số tiền vay lớn nhất cho khách hàng có điểm tín dụng là ít hơn 100.",
    "output": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của chi nhánh ngân hàng đã cho vay tổng số tiền lớn nhất trong các khoản vay, cụ thể là cho khách hàng có điểm tín dụng dưới 100?",
    "output": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các chi nhánh ngân hàng cung cấp một số khoản vay.",
    "output": "SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id"
  },
  {
    "instruction": "",
    "input": "Tên của các ngân hàng khác nhau đã cung cấp các khoản vay là gì?",
    "output": "SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id"
  },
  {
    "instruction": "",
    "input": "Tìm tên và điểm tín dụng của khách hàng có một số khoản vay.",
    "output": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id"
  },
  {
    "instruction": "",
    "input": "Các tên và điểm tín dụng khác nhau của khách hàng đã vay là gì?",
    "output": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng có khoản vay với số tiền hơn 3000.",
    "output": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng có khoản vay hơn 3000 số tiền là gì?",
    "output": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000"
  },
  {
    "instruction": "",
    "input": "Tìm thành phố và tên của các chi nhánh ngân hàng cung cấp các khoản vay kinh doanh.",
    "output": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'"
  },
  {
    "instruction": "",
    "input": "Tên và thành phố của các chi nhánh ngân hàng cung cấp các khoản vay cho doanh nghiệp là gì?",
    "output": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các chi nhánh ngân hàng đã cung cấp một khoản vay cho bất kỳ khách hàng nào có điểm tín dụng dưới 100.",
    "output": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100"
  },
  {
    "instruction": "",
    "input": "Tên của các ngân hàng đã cho khách hàng vay tiền với điểm tín dụng dưới 100 là gì?",
    "output": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số tiền cho vay được cung cấp bởi các chi nhánh ngân hàng ở bang New York.",
    "output": "SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York'"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền được các ngân hàng cho mượn ở bang New York là bao nhiêu?",
    "output": "SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York'"
  },
  {
    "instruction": "",
    "input": "Tìm điểm tín dụng trung bình của khách hàng có một số khoản vay.",
    "output": "SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan)"
  },
  {
    "instruction": "",
    "input": "Điểm tín dụng trung bình cho khách hàng đã vay là bao nhiêu?",
    "output": "SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan)"
  },
  {
    "instruction": "",
    "input": "Tìm điểm tín dụng trung bình của khách hàng không có khoản vay.",
    "output": "SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan)"
  },
  {
    "instruction": "",
    "input": "Điểm tín dụng trung bình cho khách hàng chưa bao giờ vay là bao nhiêu?",
    "output": "SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan)"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu ghi chú đánh giá?",
    "output": "SELECT count(*) FROM ASSESSMENT_NOTES"
  },
  {
    "instruction": "",
    "input": "Ngày của các ghi chú đánh giá là gì?",
    "output": "SELECT date_of_notes FROM Assessment_Notes"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu địa chỉ có mã zip 197?",
    "output": "SELECT count(*) FROM ADDRESSES WHERE zip_postcode  =  \"197\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mã loại sự cố riêng biệt?",
    "output": "SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident"
  },
  {
    "instruction": "",
    "input": "Trả về tất cả các mã loại giam giữ riêng biệt.",
    "output": "SELECT DISTINCT detention_type_code FROM Detention"
  },
  {
    "instruction": "",
    "input": "Ngày bắt đầu và kết thúc cho các sự cố với \"nhiễu\" mã loại sự cố là gì?",
    "output": "SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  \"NOISE\""
  },
  {
    "instruction": "",
    "input": "Trả lại tất cả các tóm tắt giam giữ.",
    "output": "SELECT detention_summary FROM Detention"
  },
  {
    "instruction": "",
    "input": "Trả lại số điện thoại di động và địa chỉ email cho tất cả các sinh viên.",
    "output": "SELECT cell_mobile_number ,  email_address FROM STUDENTS"
  },
  {
    "instruction": "",
    "input": "Email của học sinh có tên \"Emma\" và họ \"Rohan\" là gì?",
    "output": "SELECT email_address FROM Students WHERE first_name  =  \"Emma\" AND last_name  =  \"Rohan\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên khác biệt đã bị giam giữ?",
    "output": "SELECT count(DISTINCT student_id) FROM Students_in_Detention"
  },
  {
    "instruction": "",
    "input": "Giới tính của giáo viên với họ \"Medhurst\" là gì?",
    "output": "SELECT gender FROM TEACHERS WHERE last_name  =  \"Medhurst\""
  },
  {
    "instruction": "",
    "input": "Mô tả loại sự cố cho loại sự cố với mã \"bạo lực\" là gì?",
    "output": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code  =  \"VIOLENCE\""
  },
  {
    "instruction": "",
    "input": "Tìm cho thuê tối đa và tối thiểu hàng tháng cho tất cả các địa chỉ của sinh viên.",
    "output": "SELECT max(monthly_rental) ,  min(monthly_rental) FROM Student_Addresses"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của các giáo viên có địa chỉ email chứa từ \"người đàn ông\".",
    "output": "SELECT first_name FROM Teachers WHERE email_address LIKE '%man%'"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả thông tin về các ghi chú đánh giá được sắp xếp theo ngày theo thứ tự tăng dần.",
    "output": "SELECT * FROM Assessment_Notes ORDER BY date_of_notes ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các thành phố của địa chỉ theo thứ tự bảng chữ cái.",
    "output": "SELECT city FROM Addresses ORDER BY city"
  },
  {
    "instruction": "",
    "input": "Tìm tên và họ của giáo viên theo thứ tự bảng chữ cái của họ.",
    "output": "SELECT first_name ,  last_name FROM Teachers ORDER BY last_name"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả thông tin về địa chỉ của sinh viên, và sắp xếp theo mức cho thuê hàng tháng theo đơn đặt hàng giảm dần.",
    "output": "SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC"
  },
  {
    "instruction": "",
    "input": "Tìm ID và tên đầu tiên của học sinh có số lượng ghi chú đánh giá cao nhất?",
    "output": "SELECT T1.student_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID và tên đầu tiên của 3 giáo viên có số lượng ghi chú đánh giá cao nhất?",
    "output": "SELECT T1.teacher_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tìm id và họ của học sinh có nhiều sự cố hành vi nhất?",
    "output": "SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm id và họ của giáo viên có nhiều giam giữ nhất với mã loại giam \"sau\"?",
    "output": "SELECT T1.teacher_id ,  T2.last_name FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T1.detention_type_code  =  \"AFTER\" GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID và tên đầu tiên của học sinh có địa chỉ có mức thuê trung bình hàng tháng cao nhất là gì?",
    "output": "SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID và thành phố của địa chỉ sinh viên với mức cho thuê trung bình hàng tháng cao nhất.",
    "output": "SELECT T2.address_id ,  T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mã và mô tả của loại sự cố hành vi thường xuyên nhất là gì?",
    "output": "SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mã và mô tả của loại giam giữ ít thường xuyên nhất là gì?",
    "output": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ngày ghi chú đánh giá cho sinh viên có tên \"Fanny\".",
    "output": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\""
  },
  {
    "instruction": "",
    "input": "Tìm các văn bản ghi chú đánh giá cho giáo viên có tên cuối cùng \"Schuster\".",
    "output": "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schuster\""
  },
  {
    "instruction": "",
    "input": "Tìm ngày bắt đầu và kết thúc của các sự cố hành vi của học sinh có tên cuối cùng \"Fahey\".",
    "output": "SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\""
  },
  {
    "instruction": "",
    "input": "Tìm ngày bắt đầu và kết thúc của việc giam giữ các giáo viên với tên cuối cùng \"Schultz\".",
    "output": "SELECT T1.datetime_detention_start ,  datetime_detention_end FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schultz\""
  },
  {
    "instruction": "",
    "input": "Mã ID và mã zip của địa chỉ với giá thuê hàng tháng cao nhất là gì?",
    "output": "SELECT T2.address_id ,  T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id ORDER BY monthly_rental DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Số điện thoại di động của học sinh có địa chỉ có giá thuê hàng tháng thấp nhất là gì?",
    "output": "SELECT T2.cell_mobile_number FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id ORDER BY T1.monthly_rental ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cho thuê hàng tháng của địa chỉ sinh viên ở bang Texas là gì?",
    "output": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Texas\""
  },
  {
    "instruction": "",
    "input": "Tên và tên cuối cùng của các sinh viên có địa chỉ ở bang Wisconsin là gì?",
    "output": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Wisconsin\""
  },
  {
    "instruction": "",
    "input": "Dòng 1 và trung bình cho thuê hàng tháng của tất cả các địa chỉ sinh viên là gì?",
    "output": "SELECT T1.line_1 ,  avg(T2.monthly_rental) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id"
  },
  {
    "instruction": "",
    "input": "Mã zip của địa chỉ mà giáo viên có tên \"Lyla\" là gì?",
    "output": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  \"Lyla\""
  },
  {
    "instruction": "",
    "input": "Các địa chỉ email của giáo viên có địa chỉ có mã zip \"918\" là gì?",
    "output": "SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T1.zip_postcode  =  \"918\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh không liên quan đến bất kỳ sự cố hành vi nào?",
    "output": "SELECT count(*) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )"
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của các giáo viên không liên quan đến bất kỳ giam giữ nào.",
    "output": "SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id  =  T2.teacher_id"
  },
  {
    "instruction": "",
    "input": "Dòng 1 của địa chỉ được chia sẻ bởi một số sinh viên và một số giáo viên là gì?",
    "output": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id INTERSECT SELECT T1.line_1 FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id"
  },
  {
    "instruction": "",
    "input": "Những tài sản nào có 2 phần và có ít hơn 2 nhật ký lỗi?Liệt kê ID tài sản và chi tiết.",
    "output": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2"
  },
  {
    "instruction": "",
    "input": "Mỗi hợp đồng bảo trì có bao nhiêu tài sản?Liệt kê số và ID hợp đồng.",
    "output": "SELECT count(*) ,  T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id"
  },
  {
    "instruction": "",
    "input": "Mỗi công ty bên thứ ba cung cấp bao nhiêu tài sản?Liệt kê số đếm và ID công ty.",
    "output": "SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id"
  },
  {
    "instruction": "",
    "input": "Những công ty bên thứ ba nào có ít nhất 2 kỹ sư bảo trì hoặc có ít nhất 2 hợp đồng bảo trì?Liệt kê ID và tên công ty.",
    "output": "SELECT T1.company_id ,  T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id HAVING count(*)  >=  2 UNION SELECT T3.company_id ,  T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id  =  T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tên và ID của các nhân viên đã ghi lại nhật ký lỗi nhưng chưa liên hệ với bất kỳ kỹ sư tham quan nào?",
    "output": "SELECT T1.staff_name ,  T1.staff_id FROM Staff AS T1 JOIN Fault_Log AS T2 ON T1.staff_id  =  T2.recorded_by_staff_id EXCEPT SELECT T3.staff_name ,  T3.staff_id FROM Staff AS T3 JOIN Engineer_Visits AS T4 ON T3.staff_id  =  T4.contact_staff_id"
  },
  {
    "instruction": "",
    "input": "Kỹ sư nào đã đến thăm nhiều lần nhất?Hiển thị ID kỹ sư, tên và họ.",
    "output": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những phần nào có nhiều hơn 2 lỗi?Hiển thị tên một phần và ID.",
    "output": "SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả tên của mọi kỹ sư, họ, chi tiết và mô tả kỹ năng tương ứng.",
    "output": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id"
  },
  {
    "instruction": "",
    "input": "Đối với tất cả các lỗi của các phần khác nhau, tất cả các mô tả về các kỹ năng cần thiết để khắc phục chúng là gì?Liệt kê tên của các lỗi và mô tả kỹ năng.",
    "output": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id"
  },
  {
    "instruction": "",
    "input": "Mỗi bộ phận có thể được sử dụng bao nhiêu tài sản?Liệt kê tên một phần và số.",
    "output": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name"
  },
  {
    "instruction": "",
    "input": "Tất cả các mô tả lỗi và trạng thái lỗi của tất cả các lỗi được ghi trong nhật ký là gì?",
    "output": "SELECT T1.fault_description ,  T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu lượt truy cập kỹ sư được yêu cầu nhiều nhất cho một nhật ký lỗi duy nhất?Liệt kê số và ID nhập nhật ký.",
    "output": "SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tất cả các tên cuối cùng của tất cả các kỹ sư là gì?",
    "output": "SELECT DISTINCT last_name FROM Maintenance_Engineers"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mã trạng thái lỗi được ghi lại trong bảng bộ phận nhật ký lỗi?",
    "output": "SELECT DISTINCT fault_status FROM Fault_Log_Parts"
  },
  {
    "instruction": "",
    "input": "Những kỹ sư nào chưa bao giờ truy cập để duy trì tài sản?Liệt kê tên và họ kỹ sư.",
    "output": "SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID tài sản, chi tiết, tạo và mô hình cho mỗi tài sản.",
    "output": "SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets"
  },
  {
    "instruction": "",
    "input": "Tài sản đầu tiên có được khi nào?",
    "output": "SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Lỗi bộ phận nào đòi hỏi nhiều kỹ năng nhất để khắc phục?Liệt kê ID phần và tên.",
    "output": "SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại phần nào có số lượng lỗi ít nhất?Liệt kê tên một phần.",
    "output": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trong số những kỹ sư đã ghé thăm, kỹ sư nào có số lượng chuyến thăm ít nhất?Liệt kê ID kỹ sư, tên và họ.",
    "output": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Nhân viên nào đã liên hệ với các kỹ sư nào?Liệt kê tên nhân viên và tên và họ kỹ sư và họ.",
    "output": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id"
  },
  {
    "instruction": "",
    "input": "Nhật ký lỗi nào bao gồm số lượng bộ phận bị lỗi nhất?Liệt kê ID nhật ký lỗi, mô tả và thời gian ghi.",
    "output": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Kỹ năng nào được sử dụng để sửa lỗi nhiều lỗi nhất?Liệt kê ID kỹ năng và mô tả.",
    "output": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tất cả các mô hình tài sản riêng biệt là gì?",
    "output": "SELECT DISTINCT asset_model FROM Assets"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tài sản thực hiện, mô hình, chi tiết theo ngày được xử lý tăng dần.",
    "output": "SELECT asset_make ,  asset_model ,  asset_details FROM Assets ORDER BY asset_disposed_date ASC"
  },
  {
    "instruction": "",
    "input": "Phần nào có số tiền ít tính phí nhất?Liệt kê ID phần và số tiền.",
    "output": "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Công ty nào bắt đầu hợp đồng bảo trì sớm nhất?Hiển thị tên công ty.",
    "output": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mô tả về loại công ty đã kết thúc hợp đồng của mình gần đây nhất là gì?",
    "output": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id JOIN Ref_Company_Types AS T3 ON T1.company_type_code  =  T3.company_type_code ORDER BY T2.contract_end_date DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Giới tính nào chiếm phần lớn nhân viên?",
    "output": "SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mỗi nhân viên đã liên hệ với bao nhiêu kỹ sư?Liệt kê cả tên nhân viên liên hệ và số lượng kỹ sư liên hệ.",
    "output": "SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name"
  },
  {
    "instruction": "",
    "input": "Những tài sản nào không phải chịu bất kỳ nhật ký lỗi nào?Liệt kê mô hình tài sản.",
    "output": "SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log)"
  },
  {
    "instruction": "",
    "input": "Liệt kê các chính quyền và dịch vụ địa phương được cung cấp bởi tất cả các trạm.",
    "output": "SELECT local_authority ,  services FROM station"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các số tàu và tên được đặt hàng theo thời gian của họ từ sớm đến muộn.",
    "output": "SELECT train_number ,  name FROM train ORDER BY TIME"
  },
  {
    "instruction": "",
    "input": "Cho tôi thời gian và số lượng của tất cả các chuyến tàu đến Chennai, được đặt hàng theo thời gian.",
    "output": "SELECT TIME ,  train_number FROM train WHERE destination  =  'Chennai' ORDER BY TIME"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu chuyến tàu 'thể hiện' trong tên của họ?",
    "output": "SELECT count(*) FROM train WHERE name LIKE \"%Express%\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng và thời gian của tàu đi từ Chennai đến Guruvayur.",
    "output": "SELECT train_number ,  TIME FROM train WHERE origin  =  'Chennai' AND destination  =  'Guruvayur'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tàu bắt đầu từ mỗi nguồn gốc.",
    "output": "SELECT origin ,  count(*) FROM train GROUP BY origin"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tàu có tuyến đường chạy qua số lượng lớn các trạm.",
    "output": "SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tàu cho mỗi trạm, cũng như tên và dịch vụ mạng của nhà ga.",
    "output": "SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id"
  },
  {
    "instruction": "",
    "input": "Nhiệt độ cao trung bình cho mỗi ngày trong tuần là bao nhiêu?",
    "output": "SELECT avg(high_temperature) ,  day_of_week FROM weekly_weather GROUP BY day_of_week"
  },
  {
    "instruction": "",
    "input": "Cho tôi nhiệt độ thấp tối đa và lượng mưa trung bình tại trạm Amersham.",
    "output": "SELECT max(t1.low_temperature) ,  avg(t1.precipitation) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id WHERE t2.network_name  =  \"Amersham\""
  },
  {
    "instruction": "",
    "input": "Tìm tên và thời gian của các chuyến tàu chạy qua các trạm cho chính quyền địa phương Chiltern.",
    "output": "SELECT t3.name ,  t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"Chiltern\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu dịch vụ khác nhau được cung cấp bởi tất cả các trạm?",
    "output": "SELECT count(DISTINCT services) FROM station"
  },
  {
    "instruction": "",
    "input": "Tìm ID và chính quyền địa phương của nhà ga có nhiệt độ cao trung bình cao nhất.",
    "output": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id ORDER BY avg(high_temperature) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID và chính quyền địa phương của nhà ga có lượng mưa tối đa cao hơn 50.",
    "output": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50"
  },
  {
    "instruction": "",
    "input": "Hiển thị nhiệt độ thấp thấp nhất và tốc độ gió cao nhất tính bằng dặm mỗi giờ.",
    "output": "SELECT min(low_temperature) ,  max(wind_speed_mph) FROM weekly_weather"
  },
  {
    "instruction": "",
    "input": "Tìm nguồn gốc từ đó hơn 1 tàu bắt đầu.",
    "output": "SELECT origin FROM train GROUP BY origin HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng giáo sư trong bộ phận kế toán.",
    "output": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  \"Accounting\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giáo sư trong phòng kế toán?",
    "output": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  \"Accounting\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giáo sư đang dạy lớp với mã ACCT-2111?",
    "output": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giáo sư dạy một lớp với mã ACCT-2111?",
    "output": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của giáo sư trong khoa sinh học là gì?",
    "output": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tất cả các giáo sư sinh học là gì?",
    "output": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và ngày sinh của các giáo sư khóa học ACCT-211 là gì?",
    "output": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\""
  },
  {
    "instruction": "",
    "input": "Tên và ngày sinh của các giáo sư phụ trách ACCT-2111 là gì?",
    "output": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu lớp học là giáo sư có tên cuối cùng là Graztevski có?",
    "output": "SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski'"
  },
  {
    "instruction": "",
    "input": "Giáo sư có bao nhiêu lớp có tên cuối cùng là Graztevski dạy?",
    "output": "SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski'"
  },
  {
    "instruction": "",
    "input": "Bộ luật của trường nơi bộ phận kế toán thuộc về?",
    "output": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\""
  },
  {
    "instruction": "",
    "input": "Mã trường của bộ phận kế toán là gì?",
    "output": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\""
  },
  {
    "instruction": "",
    "input": "Khóa học CIS-220 có bao nhiêu khoản tín dụng, và mô tả của nó là gì?",
    "output": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'"
  },
  {
    "instruction": "",
    "input": "Mô tả cho CIS-220 là gì và nó có bao nhiêu tín dụng?",
    "output": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'"
  },
  {
    "instruction": "",
    "input": "Địa chỉ của Bộ Lịch sử là gì?",
    "output": "SELECT dept_address FROM department WHERE dept_name  =  'History'"
  },
  {
    "instruction": "",
    "input": "Bộ phận Lịch sử ở đâu?",
    "output": "SELECT dept_address FROM department WHERE dept_name  =  'History'"
  },
  {
    "instruction": "",
    "input": "Trường với Code Bus có bao nhiêu địa điểm khác nhau?",
    "output": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'"
  },
  {
    "instruction": "",
    "input": "Các địa điểm khác nhau của trường với xe buýt mã là gì?",
    "output": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'"
  },
  {
    "instruction": "",
    "input": "Mỗi trường có bao nhiêu địa điểm khác nhau?",
    "output": "SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code"
  },
  {
    "instruction": "",
    "input": "Đếm địa chỉ khác nhau của mỗi trường.",
    "output": "SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code"
  },
  {
    "instruction": "",
    "input": "Tìm mô tả và tín dụng cho khóa học QM-261?",
    "output": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'"
  },
  {
    "instruction": "",
    "input": "Mô tả khóa học và số lượng tín dụng cho QM-261 là gì?",
    "output": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng phòng ban trong mỗi trường.",
    "output": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phòng ban trong mỗi trường?",
    "output": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các phòng ban khác nhau trong mỗi trường có số lượng phòng ban khác nhau dưới 5.",
    "output": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bộ phận khác nhau trong mỗi trường có ít hơn 5 căn hộ?",
    "output": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5"
  },
  {
    "instruction": "",
    "input": "Mỗi khóa học có bao nhiêu phần?",
    "output": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code"
  },
  {
    "instruction": "",
    "input": "Mỗi khóa học có bao nhiêu phần?",
    "output": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code"
  },
  {
    "instruction": "",
    "input": "Tổng số tín dụng mỗi bộ phận cung cấp là gì?",
    "output": "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code"
  },
  {
    "instruction": "",
    "input": "Bộ phận cung cấp bao nhiêu tín dụng?",
    "output": "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng lớp học được cung cấp cho tất cả các phòng học chứa ít nhất 2 lớp.",
    "output": "SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi lớp học với ít nhất 2 lớp, có bao nhiêu lớp được cung cấp?",
    "output": "SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các lớp trong mỗi bộ phận.",
    "output": "SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu lớp được tổ chức trong mỗi bộ phận?",
    "output": "SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng lớp học trong mỗi trường.",
    "output": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu lớp tồn tại cho mỗi trường?",
    "output": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code"
  },
  {
    "instruction": "",
    "input": "Số lượng giáo sư cho các trường khác nhau là bao nhiêu?",
    "output": "SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giáo sư khác nhau cho các trường khác nhau?",
    "output": "SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng và mã của công việc có hầu hết nhân viên.",
    "output": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Số lượng và mã của công việc với nhiều nhân viên nhất là gì?",
    "output": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trường nào có số lượng giáo sư nhỏ nhất?",
    "output": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trường nào có ít giáo sư nhất?",
    "output": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng giáo sư với bằng tiến sĩ.bằng cấp trong mỗi bộ phận.",
    "output": "SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giáo sư có bằng tiến sĩ.trong mỗi bộ phận?",
    "output": "SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sinh viên cho mỗi khoa.",
    "output": "SELECT count(*) ,  dept_code FROM student GROUP BY dept_code"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên trong mỗi khoa?",
    "output": "SELECT count(*) ,  dept_code FROM student GROUP BY dept_code"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số giờ đã được thực hiện cho tất cả các sinh viên trong mỗi khoa.",
    "output": "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code"
  },
  {
    "instruction": "",
    "input": "Các sinh viên dành bao nhiêu giờ để học ở mỗi khoa?",
    "output": "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code"
  },
  {
    "instruction": "",
    "input": "Tìm điểm trung bình tối đa, trung bình và tối thiểu của tất cả các sinh viên trong mỗi khoa.",
    "output": "SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code"
  },
  {
    "instruction": "",
    "input": "GPA sinh viên cao nhất, thấp nhất và trung bình cho mỗi bộ phận là bao nhiêu?",
    "output": "SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code"
  },
  {
    "instruction": "",
    "input": "Tên và điểm trung bình của bộ phận có học sinh có điểm trung bình cao nhất là gì?",
    "output": "SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Bộ phận nào có điểm trung bình trung bình cao nhất của sinh viên, và điểm trung bình là gì?",
    "output": "SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu trường tồn tại?",
    "output": "SELECT count(DISTINCT school_code) FROM department"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường trong khoa?",
    "output": "SELECT count(DISTINCT school_code) FROM department"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu lớp khác nhau?",
    "output": "SELECT count(DISTINCT class_code) FROM CLASS"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu lớp học độc đáo được cung cấp?",
    "output": "SELECT count(DISTINCT class_code) FROM CLASS"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khóa học được cung cấp?",
    "output": "SELECT count(DISTINCT crs_code) FROM CLASS"
  },
  {
    "instruction": "",
    "input": "Số lượng mã khóa học khác nhau là gì?",
    "output": "SELECT count(DISTINCT crs_code) FROM CLASS"
  },
  {
    "instruction": "",
    "input": "Trường đại học có bao nhiêu khoa?",
    "output": "SELECT count(DISTINCT dept_name) FROM department"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bộ phận khác nhau?",
    "output": "SELECT count(DISTINCT dept_name) FROM department"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khóa học được cung cấp bởi thông tin máy tính.Bộ phận hệ thống?",
    "output": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\""
  },
  {
    "instruction": "",
    "input": "Bộ hệ thống thông tin máy tính cung cấp bao nhiêu khóa học?",
    "output": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\""
  },
  {
    "instruction": "",
    "input": "Khóa học ACCT-21 khóa học có bao nhiêu phần?",
    "output": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'"
  },
  {
    "instruction": "",
    "input": "Số lượng các phần lớp khác nhau được cung cấp trong khóa học ACCT-2111 là bao nhiêu?",
    "output": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số tín dụng của tất cả các lớp được cung cấp bởi mỗi bộ phận.",
    "output": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code"
  },
  {
    "instruction": "",
    "input": "Tổng số tín dụng được cung cấp bởi mỗi bộ phận là gì?",
    "output": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code"
  },
  {
    "instruction": "",
    "input": "Tìm tên của bộ phận cung cấp số lượng tín dụng lớn nhất của tất cả các lớp.",
    "output": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Bộ phận nào cung cấp nhiều tín dụng nhất cùng nhau?",
    "output": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh đăng ký vào lớp ACCT-2111?",
    "output": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'"
  },
  {
    "instruction": "",
    "input": "Tổng số học sinh đăng ký vào ACCT-2111 là gì?",
    "output": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của mỗi học sinh đăng ký vào lớp ACCT-2111 là gì?",
    "output": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các sinh viên trong khóa học ACCT-2111 là gì?",
    "output": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của các học sinh đăng ký vào lớp ACCT-2111 và có lớp C là gì?",
    "output": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các sinh viên đã tham gia ACCT-2111 và nhận C?",
    "output": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số nhân viên.",
    "output": "SELECT count(*) FROM employee"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhân viên cùng nhau?",
    "output": "SELECT count(*) FROM employee"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giáo sư có bằng tiến sĩ.bằng cấp?",
    "output": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'"
  },
  {
    "instruction": "",
    "input": "Tổng số giáo sư với bằng tiến sĩ.?",
    "output": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên được ghi danh vào lớp được dạy bởi một số giáo sư từ bộ phận kế toán?",
    "output": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên được ghi danh vào một số lớp được dạy bởi một giáo sư kế toán?",
    "output": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận có số lượng sinh viên lớn nhất đăng ký là gì?",
    "output": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận với nhiều sinh viên nhất đăng ký là gì?",
    "output": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Danh sách tên của tất cả các bộ phận được đặt hàng theo tên của họ.",
    "output": "SELECT dept_name FROM department ORDER BY dept_name"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bộ phận theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT dept_name FROM department ORDER BY dept_name"
  },
  {
    "instruction": "",
    "input": "Liệt kê các mã của tất cả các khóa học diễn ra trong phòng KLR209.",
    "output": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'"
  },
  {
    "instruction": "",
    "input": "Các mã của tất cả các khóa học được đặt trong phòng KLR209 là gì?",
    "output": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên đầu tiên của tất cả các nhân viên có mã công việc được đặt hàng trước ngày sinh của họ.",
    "output": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các nhân viên được các giáo sư ra lệnh vào ngày sinh là gì?",
    "output": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob"
  },
  {
    "instruction": "",
    "input": "Tìm tên và văn phòng đầu tiên của tất cả các giáo sư được sắp xếp theo thứ tự bảng chữ cái của tên của họ.",
    "output": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname"
  },
  {
    "instruction": "",
    "input": "Tên và địa điểm văn phòng cho tất cả các giáo sư được sắp xếp theo thứ tự bảng chữ cái bằng tên là gì?",
    "output": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của nhân viên lâu đời nhất là gì?",
    "output": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của nhân viên với ngày sinh sớm nhất là gì?",
    "output": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên, tên cuối cùng, GPA của người trẻ nhất trong số các sinh viên có điểm trung bình trên 3 là gì?",
    "output": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của học sinh trẻ nhất có điểm trung bình trên 3 là gì và điểm trung bình của họ là gì?",
    "output": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của học sinh có lớp C trong bất kỳ lớp nào là gì?",
    "output": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả học sinh có lớp C trong một lớp là gì?",
    "output": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận có số lượng giáo sư nhỏ nhất là gì?",
    "output": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận với ít giáo sư nhất là gì?",
    "output": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận có số lượng giáo sư lớn nhất với bằng tiến sĩ.bằng cấp?",
    "output": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Bộ phận nào có nhiều giáo sư nhất với bằng tiến sĩ?",
    "output": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của các giáo sư không dạy một lớp là gì.",
    "output": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các giáo sư không dạy bất kỳ lớp học nào?",
    "output": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của các giáo sư từ Bộ Lịch sử không dạy một lớp học.",
    "output": "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các giáo sư lịch sử không dạy là gì?",
    "output": "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng và văn phòng của giáo sư từ Bộ Lịch sử là gì?",
    "output": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'"
  },
  {
    "instruction": "",
    "input": "Họ và văn phòng của tất cả các giáo sư lịch sử là gì?",
    "output": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'"
  },
  {
    "instruction": "",
    "input": "Tên bộ phận và văn phòng cho giáo sư có tên cuối cùng là Heffington là gì?",
    "output": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận và địa điểm văn phòng cho giáo sư với họ của Heffington là gì?",
    "output": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'"
  },
  {
    "instruction": "",
    "input": "Tìm họ và ngày thuê của giáo sư đang ở văn phòng Dre 102.",
    "output": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của giáo sư có văn phòng ở Dre 102 là gì, và họ được thuê khi nào?",
    "output": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'"
  },
  {
    "instruction": "",
    "input": "Mã của khóa học mà học sinh có tên cuối cùng là Smithson là gì?",
    "output": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'"
  },
  {
    "instruction": "",
    "input": "Các mã khóa học cho mỗi lớp mà học sinh có tên cuối cùng Smithson đã lấy là gì?",
    "output": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'"
  },
  {
    "instruction": "",
    "input": "Mô tả và tín dụng của khóa học mà học sinh có tên cuối cùng là Smithson đã lấy là gì?",
    "output": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tín chỉ là khóa học mà học sinh có tên cuối cùng Smithson đã thực hiện, và mô tả của nó là gì?",
    "output": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giáo sư có bằng tiến sĩ.hoặc bằng MA?",
    "output": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giáo sư đạt được bằng tiến sĩ.Hay bằng thạc sĩ?",
    "output": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giáo sư từ Khoa Kế toán hoặc Sinh học?",
    "output": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology'"
  },
  {
    "instruction": "",
    "input": "Số lượng giáo sư trong các bộ phận kế toán hoặc sinh học là bao nhiêu?",
    "output": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology'"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của giáo sư đang dạy hai khóa học với COIS-220 và QM-261.",
    "output": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của giáo sư đang dạy CIS-220 và QM-261 là gì?",
    "output": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của học sinh đang tham gia các lớp học từ kế toán và thông tin máy tính.Phòng hệ thống",
    "output": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các sinh viên tham gia các lớp hệ thống thông tin kế toán và máy tính là gì?",
    "output": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'"
  },
  {
    "instruction": "",
    "input": "Điểm trung bình của các sinh viên đã đăng ký khóa học với mã ACCT-2111 là gì?",
    "output": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211'"
  },
  {
    "instruction": "",
    "input": "GPA trung bình của học sinh tham gia ACCT-2111 là gì?",
    "output": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên, GPA và số điện thoại của 5 sinh viên hàng đầu có điểm trung bình cao nhất là gì?",
    "output": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên, GPA và số điện thoại của học sinh có 5 GPA hàng đầu là gì?",
    "output": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Tên khoa của các sinh viên có điểm trung bình thấp nhất thuộc về?",
    "output": "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của khoa với học sinh có điểm trung bình thấp nhất là gì?",
    "output": "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên và điểm trung bình của các sinh viên có điểm trung bình thấp hơn điểm trung bình của tất cả học sinh.",
    "output": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)"
  },
  {
    "instruction": "",
    "input": "Tên và điểm trung bình của mỗi học sinh có điểm trung bình GPA là gì?",
    "output": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)"
  },
  {
    "instruction": "",
    "input": "Tìm tên và địa chỉ của bộ phận có số lượng sinh viên cao nhất.",
    "output": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và địa chỉ của bộ phận với nhiều sinh viên nhất là gì?",
    "output": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên, địa chỉ, số lượng sinh viên trong các khoa có 3 sinh viên cao nhất.",
    "output": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tên, địa chỉ và số lượng sinh viên trong các khoa có 3 sinh viên nhất là gì?",
    "output": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Find the first name and office of the professor who is in the history department and has a Ph.D. degree.",
    "output": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'"
  },
  {
    "instruction": "",
    "input": "What are the first names and office of the professors who are in the history department and have a Ph.D?",
    "output": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'"
  },
  {
    "instruction": "",
    "input": "Find the first names of all instructors who have taught some course and the course code.",
    "output": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các giáo viên đã dạy một khóa học và mã khóa học tương ứng là gì?",
    "output": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của tất cả các giảng viên đã dạy một số khóa học và mô tả khóa học.",
    "output": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các giáo viên đã dạy một khóa học và các mô tả tương ứng là gì?",
    "output": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code"
  },
  {
    "instruction": "",
    "input": "Tìm tên và văn phòng đầu tiên của tất cả các giảng viên đã dạy một số khóa học và cũng tìm thấy mô tả khóa học.",
    "output": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên, địa điểm văn phòng của tất cả các giảng viên đã dạy một số khóa học là gì?",
    "output": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num"
  },
  {
    "instruction": "",
    "input": "Tìm tên và văn phòng đầu tiên của tất cả các giảng viên đã dạy một số khóa học và mô tả khóa học và tên bộ phận.",
    "output": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên, địa điểm văn phòng và bộ phận của tất cả các giảng viên là gì, và các mô tả của các khóa học họ dạy là gì?",
    "output": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các sinh viên đã tham gia một số khóa học và mô tả khóa học.",
    "output": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các sinh viên đã tham gia một lớp học và các mô tả khóa học tương ứng là gì?",
    "output": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các sinh viên đã tham gia một số khóa học và có một hoặc C.",
    "output": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các sinh viên tham gia một khóa học đã nhận được A hoặc C là gì?",
    "output": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của tất cả các giáo sư trong bộ phận kế toán đang dạy một số khóa học và phòng học.",
    "output": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các giáo sư kế toán dạy là gì và các lớp học của các khóa học họ dạy là gì?",
    "output": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên và bằng cấp của tất cả các giáo sư đang dạy một số lớp học về thông tin máy tính.Bộ phận hệ thống.",
    "output": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên khác nhau và bằng cấp cao nhất đạt được cho các giáo sư giảng dạy trong bộ phận hệ thống thông tin máy tính là gì?",
    "output": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của học sinh có lớp A trong lớp có mã 10018.",
    "output": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của học sinh đã nhận được A trong lớp với mã 10018 là gì?",
    "output": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018"
  },
  {
    "instruction": "",
    "input": "Tìm tên và văn phòng của giáo sư lịch sử, người không có bằng tiến sĩ.bằng cấp.",
    "output": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.'"
  },
  {
    "instruction": "",
    "input": "Tên và văn phòng đầu tiên của các giáo sư lịch sử không có bằng tiến sĩ là gì?",
    "output": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.'"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của các giáo sư đang dạy nhiều hơn một lớp.",
    "output": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các giáo sư dạy nhiều hơn một lớp học là gì?",
    "output": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của các sinh viên đã học chính xác một lớp.",
    "output": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của học sinh chỉ tham gia một khóa học là gì?",
    "output": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của bộ phận cung cấp lớp có mô tả có từ \"thống kê\".",
    "output": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận cung cấp một khóa học có một mô tả bao gồm từ \"thống kê\" là gì?",
    "output": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của học sinh có tên cuối cùng bắt đầu bằng chữ S và đang tham gia lớp ACCT-2111 là gì?",
    "output": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của học sinh có tên cuối cùng bắt đầu bằng chữ S và đang lấy ACCT-2111 là gì?",
    "output": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu câu lạc bộ?",
    "output": "SELECT count(*) FROM club"
  },
  {
    "instruction": "",
    "input": "Tổng số câu lạc bộ là bao nhiêu?",
    "output": "SELECT count(*) FROM club"
  },
  {
    "instruction": "",
    "input": "Liệt kê các khu vực riêng biệt của các câu lạc bộ theo thứ tự bảng chữ cái tăng dần.",
    "output": "SELECT DISTINCT Region FROM club ORDER BY Region ASC"
  },
  {
    "instruction": "",
    "input": "Các khu vực khác nhau của các câu lạc bộ theo thứ tự bảng chữ cái tăng dần là gì?",
    "output": "SELECT DISTINCT Region FROM club ORDER BY Region ASC"
  },
  {
    "instruction": "",
    "input": "Số lượng huy chương vàng trung bình cho các câu lạc bộ là bao nhiêu?",
    "output": "SELECT avg(Gold) FROM club_rank"
  },
  {
    "instruction": "",
    "input": "Số lượng huy chương vàng trung bình cho một câu lạc bộ là bao nhiêu?",
    "output": "SELECT avg(Gold) FROM club_rank"
  },
  {
    "instruction": "",
    "input": "Các loại và quốc gia của các cuộc thi là gì?",
    "output": "SELECT Competition_type ,  Country FROM competition"
  },
  {
    "instruction": "",
    "input": "Các loại của mọi cạnh tranh và chúng nằm ở quốc gia nào?",
    "output": "SELECT Competition_type ,  Country FROM competition"
  },
  {
    "instruction": "",
    "input": "Những năm khác biệt mà loại cuộc thi không phải là \"giải đấu\" là gì?",
    "output": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\""
  },
  {
    "instruction": "",
    "input": "Những năm khác nhau cho tất cả các cuộc thi không thuộc loại nào bằng giải đấu là gì?",
    "output": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\""
  },
  {
    "instruction": "",
    "input": "Số lượng huy chương bạc tối đa và tối thiểu cho các câu lạc bộ là gì.",
    "output": "SELECT max(Silver) ,  min(Silver) FROM club_rank"
  },
  {
    "instruction": "",
    "input": "Số lượng huy chương bạc tối đa và tối thiểu cho tất cả các câu lạc bộ là gì?",
    "output": "SELECT max(Silver) ,  min(Silver) FROM club_rank"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu câu lạc bộ có tổng huy chương dưới 10?",
    "output": "SELECT count(*) FROM club_rank WHERE Total  <  10"
  },
  {
    "instruction": "",
    "input": "Tổng số câu lạc bộ có ít hơn 10 huy chương là bao nhiêu?",
    "output": "SELECT count(*) FROM club_rank WHERE Total  <  10"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên câu lạc bộ theo thứ tự tăng dần của năm bắt đầu.",
    "output": "SELECT name FROM club ORDER BY Start_year ASC"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các câu lạc bộ bắt đầu với người già nhất là gì?",
    "output": "SELECT name FROM club ORDER BY Start_year ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên câu lạc bộ theo thứ tự bảng chữ cái giảm dần.",
    "output": "SELECT name FROM club ORDER BY name DESC"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các câu lạc bộ được đặt hàng theo thứ tự bảng chữ cái giảm dần là gì?",
    "output": "SELECT name FROM club ORDER BY name DESC"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị tên và các cầu thủ của các câu lạc bộ.",
    "output": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID"
  },
  {
    "instruction": "",
    "input": "Tên và người chơi của tất cả các câu lạc bộ là gì?",
    "output": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các câu lạc bộ có người chơi có vị trí \"Cánh phải\".",
    "output": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Right Wing\""
  },
  {
    "instruction": "",
    "input": "Tên của các câu lạc bộ có người chơi ở vị trí \"cánh hữu\" là gì?",
    "output": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Right Wing\""
  },
  {
    "instruction": "",
    "input": "Điểm trung bình của người chơi từ câu lạc bộ với tên \"AIB\" là gì.",
    "output": "SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  \"AIB\""
  },
  {
    "instruction": "",
    "input": "Số điểm trung bình cho người chơi từ câu lạc bộ \"AIB\" là bao nhiêu?",
    "output": "SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  \"AIB\""
  },
  {
    "instruction": "",
    "input": "Liệt kê vị trí của người chơi và số điểm trung bình của người chơi của mỗi vị trí.",
    "output": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi vị trí, số điểm trung bình cho người chơi ở vị trí đó là bao nhiêu?",
    "output": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION"
  },
  {
    "instruction": "",
    "input": "Liệt kê vị trí của người chơi với số điểm trung bình được ghi bởi người chơi ở vị trí đó lớn hơn 20.",
    "output": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20"
  },
  {
    "instruction": "",
    "input": "Vị trí của người chơi có số điểm trung bình được ghi bởi vị trí đó lớn hơn 20 là gì?",
    "output": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20"
  },
  {
    "instruction": "",
    "input": "Liệt kê các loại cạnh tranh và số lượng cuộc thi của từng loại.",
    "output": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type"
  },
  {
    "instruction": "",
    "input": "Các loại cạnh tranh và số lượng cuộc thi cho loại đó là gì?",
    "output": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type"
  },
  {
    "instruction": "",
    "input": "Liệt kê các loại cạnh tranh phổ biến nhất.",
    "output": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại cạnh tranh phổ biến nhất là gì?",
    "output": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các loại cạnh tranh có tối đa năm cuộc thi thuộc loại đó.",
    "output": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5"
  },
  {
    "instruction": "",
    "input": "Các loại cạnh tranh có hầu hết 5 cuộc thi cho loại đó là gì?",
    "output": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các câu lạc bộ không có bất kỳ cầu thủ nào.",
    "output": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các câu lạc bộ không có bất kỳ cầu thủ nào?",
    "output": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"
  },
  {
    "instruction": "",
    "input": "Các vị trí với cả hai người chơi có hơn 20 điểm và dưới 10 điểm.",
    "output": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10"
  },
  {
    "instruction": "",
    "input": "Vị trí của cả hai người chơi có hơn 20 20 điểm và dưới 10 điểm là gì?",
    "output": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10"
  },
  {
    "instruction": "",
    "input": "Hiển thị tổng số điểm của tất cả người chơi.",
    "output": "SELECT sum(Points) FROM player"
  },
  {
    "instruction": "",
    "input": "Tổng số điểm cho tất cả người chơi là gì?",
    "output": "SELECT sum(Points) FROM player"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu vị trí khác nhau?",
    "output": "SELECT count(DISTINCT POSITION) FROM player"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu vị trí khác nhau cho người chơi được liệt kê?",
    "output": "SELECT count(DISTINCT POSITION) FROM player"
  },
  {
    "instruction": "",
    "input": "Tên của những người chơi nhận được nhiều hơn các điểm trung bình.",
    "output": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả những người chơi có nhiều hơn số điểm trung bình là gì?",
    "output": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng người chơi có điểm thấp hơn 30 ở mỗi vị trí.",
    "output": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION"
  },
  {
    "instruction": "",
    "input": "Số lượng người chơi có điểm dưới 30 cho mỗi vị trí là bao nhiêu?",
    "output": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION"
  },
  {
    "instruction": "",
    "input": "Quốc gia nào đã tham gia vào số lượng lớn các cuộc thi giải đấu?",
    "output": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của đất nước đã tham gia vào các cuộc thi giải đấu nhất là gì?",
    "output": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những quốc gia nào đã tham gia vào cả các cuộc thi thân thiện và giải đấu.",
    "output": "SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'"
  },
  {
    "instruction": "",
    "input": "Các quốc gia tham gia vào cả các cuộc thi thân thiện và giải đấu là gì?",
    "output": "SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'"
  },
  {
    "instruction": "",
    "input": "Tìm các quốc gia chưa bao giờ tham gia vào bất kỳ cuộc thi nào với loại thân thiện.",
    "output": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'"
  },
  {
    "instruction": "",
    "input": "Các quốc gia chưa bao giờ tham gia vào bất kỳ cuộc thi kiểu thân thiện nào là gì?",
    "output": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu thành phần nội thất?",
    "output": "SELECT sum(num_of_component) FROM furniture"
  },
  {
    "instruction": "",
    "input": "Trả lại tên và ID của đồ nội thất với tỷ lệ thị trường cao nhất.",
    "output": "SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tổng tỷ lệ thị trường của các đồ nội thất có 2 thị phần hàng đầu.",
    "output": "SELECT sum(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2"
  },
  {
    "instruction": "",
    "input": "Tìm lượng thành phần và tên của tất cả các đồ nội thất có hơn 10 thành phần.",
    "output": "SELECT Num_of_Component ,  name FROM furniture WHERE Num_of_Component  >  10"
  },
  {
    "instruction": "",
    "input": "Tìm tên và số lượng thành phần của đồ nội thất ít phổ biến nhất.",
    "output": "SELECT name ,  Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của đồ nội thất có giá thấp hơn giá cao nhất.",
    "output": "SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID WHERE t2.Price_in_Dollar  <  (SELECT max(Price_in_Dollar) FROM furniture_manufacte)"
  },
  {
    "instruction": "",
    "input": "Nhà sản xuất nào có số lượng cửa hàng nhiều nhất?Liệt kê tên và năm mở của nó.",
    "output": "SELECT open_year ,  name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng nhà máy trung bình cho các nhà sản xuất có hơn 20 cửa hàng.",
    "output": "SELECT avg(Num_of_Factories) FROM manufacturer WHERE num_of_shops  >  20"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên nhà sản xuất và ID được đặt hàng trong năm khai mạc của họ.",
    "output": "SELECT name ,  manufacturer_id FROM manufacturer ORDER BY open_year"
  },
  {
    "instruction": "",
    "input": "Cho tôi tên và năm khai trương các nhà sản xuất có ít hơn 10 nhà máy hoặc hơn 10 cửa hàng.",
    "output": "SELECT name ,  open_year FROM manufacturer WHERE num_of_shops  >  10 OR Num_of_Factories  <  10"
  },
  {
    "instruction": "",
    "input": "Số lượng trung bình của các nhà máy và số lượng cửa hàng tối đa cho các nhà sản xuất đã mở trước năm 1990.",
    "output": "SELECT max(num_of_shops) ,  avg(Num_of_Factories) FROM manufacturer WHERE open_year  <  1990"
  },
  {
    "instruction": "",
    "input": "Tìm ID và số lượng cửa hàng cho công ty sản xuất đồ nội thất đắt nhất.",
    "output": "SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các loại đồ tang được sản xuất bởi mỗi nhà sản xuất cũng như tên công ty.",
    "output": "SELECT count(*) ,  t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id GROUP BY t1.manufacturer_id"
  },
  {
    "instruction": "",
    "input": "Cho tôi tên và giá của đồ nội thất mà một số công ty đang sản xuất.",
    "output": "SELECT t1.name ,  t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID"
  },
  {
    "instruction": "",
    "input": "Tìm thị phần và tên của đồ nội thất mà không có công ty nào đang sản xuất trong hồ sơ của chúng tôi.",
    "output": "SELECT Market_Rate ,  name FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của công ty sản xuất cả hai đồ nội thất với ít hơn 6 thành phần và nội thất với hơn 10 thành phần.",
    "output": "SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  <  6 INTERSECT SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  >  10"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và tên bộ phận cho mỗi nhân viên.",
    "output": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
  },
  {
    "instruction": "",
    "input": "Tên và tên bộ phận của tất cả nhân viên là gì?",
    "output": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên đầy đủ (họ và họ) và tiền lương cho những nhân viên kiếm được dưới 6000.",
    "output": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"
  },
  {
    "instruction": "",
    "input": "Tên và tiền lương đầy đủ cho bất kỳ nhân viên nào kiếm được ít hơn 6000 là gì?",
    "output": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên đầu tiên và số bộ phận cho tất cả nhân viên có tên cuối cùng là \"McEwen\".",
    "output": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và số bộ phận cho nhân viên có tên cuối cùng McEwen là gì?",
    "output": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'"
  },
  {
    "instruction": "",
    "input": "Trả lại tất cả các thông tin cho tất cả nhân viên mà không có số bộ phận.",
    "output": "SELECT * FROM employees WHERE department_id  =  \"null\""
  },
  {
    "instruction": "",
    "input": "Tất cả các nhân viên không có số bộ phận là gì?",
    "output": "SELECT * FROM employees WHERE department_id  =  \"null\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các thông tin về tiếp thị bộ phận.",
    "output": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
  },
  {
    "instruction": "",
    "input": "Tất cả các thông tin về bộ phận tiếp thị là gì?",
    "output": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
  },
  {
    "instruction": "",
    "input": "Khi nào thì ngày thuê cho những nhân viên có tên đầu tiên không chứa chữ m?",
    "output": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'"
  },
  {
    "instruction": "",
    "input": "Vào ngày nào, nhân viên không có chữ M trong tên đầu tiên của họ được thuê?",
    "output": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên đầy đủ (đầu tiên và cuối cùng), ngày thuê, tiền lương và số bộ phận cho những nhân viên có tên đầu tiên không chứa chữ M.",
    "output": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ, ngày thuê, tiền lương và ID bộ phận cho nhân viên không có chữ M trong tên của họ là gì?",
    "output": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên đầy đủ (đầu tiên và cuối cùng), ngày thuê, tiền lương và số bộ phận cho những nhân viên có tên đầu tiên không chứa chữ M và đặt kết quả theo đơn đặt hàng theo số của bộ phận.",
    "output": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ, dữ liệu thuê, tiền lương và ID bộ phận cho nhân viên không có chữ M trong tên đầu tiên của họ, được đặt hàng bởi ID bộ phận tăng dần là gì?",
    "output": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id"
  },
  {
    "instruction": "",
    "input": "Số điện thoại của nhân viên có mức lương trong khoảng 8000 và 12000 là bao nhiêu?",
    "output": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000"
  },
  {
    "instruction": "",
    "input": "Trả lại số điện thoại của nhân viên với mức lương từ 8000 đến 12000.",
    "output": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả thông tin của nhân viên có mức lương trong khoảng 8000 và 12000 và hoa hồng không phải là số tiền hoặc số bộ phận không bằng 40.",
    "output": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR  department_id != 40"
  },
  {
    "instruction": "",
    "input": "Trả lại tất cả thông tin về nhân viên có mức lương từ 8000 đến 12000 mà hoa hồng không phải là NULL hoặc nơi ID bộ phận của họ không phải là 40.",
    "output": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR  department_id != 40"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ (tên đầu tiên và họ) và tiền lương cho tất cả các nhân viên không có bất kỳ giá trị nào cho hoa hồng?",
    "output": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\""
  },
  {
    "instruction": "",
    "input": "Trả lại tên đầy đủ và tiền lương của nhân viên với hoa hồng null.",
    "output": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\""
  },
  {
    "instruction": "",
    "input": "Hiển thị họ và họ, và tiền lương cho những nhân viên có tên đầu tiên kết thúc bằng chữ m.",
    "output": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'"
  },
  {
    "instruction": "",
    "input": "Trả lại tên đầy đủ và tiền lương cho nhân viên có tên đầu tiên kết thúc bằng chữ m.",
    "output": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'"
  },
  {
    "instruction": "",
    "input": "Tìm ID công việc và ngày thuê cho những nhân viên được thuê trong khoảng thời gian từ ngày 5 tháng 11 năm 2007 đến ngày 5 tháng 7 năm 2009.",
    "output": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'"
  },
  {
    "instruction": "",
    "input": "ID công việc và ngày thuê cho nhân viên được thuê sau ngày 5 tháng 11 năm 2007 và trước ngày 5 tháng 7 năm 2009?",
    "output": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng cho những nhân viên làm việc trong bộ phận 70 hoặc 90 là gì?",
    "output": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của các nhân viên có trong bộ phận 70 hoặc 90 là gì?",
    "output": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90"
  },
  {
    "instruction": "",
    "input": "Tìm mức lương và số người quản lý cho những nhân viên đang làm việc theo người quản lý.",
    "output": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\""
  },
  {
    "instruction": "",
    "input": "Mức lương và ID quản lý cho nhân viên có người quản lý là gì?",
    "output": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các chi tiết từ bảng nhân viên cho những nhân viên được thuê trước 2002-06-21.",
    "output": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'"
  },
  {
    "instruction": "",
    "input": "Tất cả thông tin về nhân viên được thuê trước ngày 21 tháng 6 năm 2002 là gì?",
    "output": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả thông tin cho tất cả các nhân viên có chữ D hoặc S trong tên của họ và cũng sắp xếp kết quả trong việc giảm giá theo mức lương.",
    "output": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC"
  },
  {
    "instruction": "",
    "input": "Tất cả thông tin về nhân viên có D hoặc S trong tên đầu tiên của họ, được đặt hàng theo mức lương giảm dần?",
    "output": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị những nhân viên tham gia sau ngày 7 tháng 9 năm 1987.",
    "output": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"
  },
  {
    "instruction": "",
    "input": "Nhân viên nào được thuê sau ngày 7 tháng 9 năm 1987?",
    "output": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tiêu đề công việc của các công việc mà mức lương tối thiểu lớn hơn 9000.",
    "output": "SELECT job_title FROM jobs WHERE min_salary  >  9000"
  },
  {
    "instruction": "",
    "input": "Tiêu đề công việc nào tương ứng với các công việc có mức lương trên 9000?",
    "output": "SELECT job_title FROM jobs WHERE min_salary  >  9000"
  },
  {
    "instruction": "",
    "input": "Hiển thị tiêu đề công việc, chênh lệch giữa mức lương tối thiểu và tối đa cho những công việc tối đa trong phạm vi 12000 đến 18000.",
    "output": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000"
  },
  {
    "instruction": "",
    "input": "Các chức danh công việc và phạm vi tiền lương cho các công việc với mức lương tối đa từ 12000 đến 18000 là gì?",
    "output": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000"
  },
  {
    "instruction": "",
    "input": "Hiển thị email của các nhân viên không có tỷ lệ phần trăm hoa hồng và tiền lương trong khoảng 7000 đến 12000 và hoạt động trong bộ phận đó là 50.",
    "output": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50"
  },
  {
    "instruction": "",
    "input": "Email của nhân viên có hoa hồng NULL, tiền lương từ 7000 đến 12000 và những người làm việc trong bộ phận 50 là gì?",
    "output": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID nhân viên cho mỗi nhân viên và ngày anh ta kết thúc công việc trước đây.",
    "output": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id"
  },
  {
    "instruction": "",
    "input": "ID nhân viên cho mỗi nhân viên và ngày làm việc cuối cùng tại công việc cuối cùng của họ là gì?",
    "output": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị những bộ phận nơi có hơn mười nhân viên làm việc có tỷ lệ phần trăm hoa hồng.",
    "output": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10"
  },
  {
    "instruction": "",
    "input": "ID bộ phận mà hơn 10 nhân viên có hoa hồng là gì?",
    "output": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10"
  },
  {
    "instruction": "",
    "input": "Tìm ID của các bộ phận nơi bất kỳ người quản lý nào đang quản lý 4 nhân viên trở lên.",
    "output": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
  },
  {
    "instruction": "",
    "input": "ID bộ phận cho các phòng ban với các nhà quản lý quản lý hơn 3 nhân viên là gì?",
    "output": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
  },
  {
    "instruction": "",
    "input": "Hiển thị mức lương trung bình của nhân viên cho mỗi bộ phận nhận được tỷ lệ phần trăm hoa hồng.",
    "output": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id"
  },
  {
    "instruction": "",
    "input": "Mức lương trung bình của nhân viên có tỷ lệ phần trăm hoa hồng không phải là null là bao nhiêu?",
    "output": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID quốc gia và số lượng thành phố cho mỗi quốc gia.",
    "output": "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id"
  },
  {
    "instruction": "",
    "input": "Cung cấp ID quốc gia và số lượng thành phố tương ứng ở mỗi quốc gia.",
    "output": "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID công việc cho những công việc được thực hiện từ hai hoặc nhiều hơn trong hơn 300 ngày.",
    "output": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2"
  },
  {
    "instruction": "",
    "input": "ID công việc cho các công việc được thực hiện nhiều hơn một lần trong khoảng thời gian hơn 300 ngày là gì?",
    "output": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID cho những nhân viên đã làm hai hoặc nhiều công việc trong quá khứ.",
    "output": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
  },
  {
    "instruction": "",
    "input": "ID nhân viên cho nhân viên đã tổ chức hai công việc trở lên là gì?",
    "output": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
  },
  {
    "instruction": "",
    "input": "Tìm nhân viên có ID và tên của đất nước hiện tại nơi anh ta đang làm việc.",
    "output": "SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
  },
  {
    "instruction": "",
    "input": "Tất cả các ID nhân viên và tên của các quốc gia nơi họ làm việc là gì?",
    "output": "SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên bộ phận và số lượng nhân viên trong mỗi bộ phận.",
    "output": "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name"
  },
  {
    "instruction": "",
    "input": "Đặt tên của từng bộ phận và số lượng nhân viên trong mỗi.",
    "output": "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name"
  },
  {
    "instruction": "",
    "input": "Bạn có thể trả lại tất cả thông tin chi tiết về các công việc được thực hiện bởi bất kỳ nhân viên nào hiện đang kiếm được tiền lương trên và trên 12000 không?",
    "output": "SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000"
  },
  {
    "instruction": "",
    "input": "Tất cả các thông tin lịch sử công việc được thực hiện bởi các nhân viên kiếm được một mức lương lớn hơn hoặc bằng 12000 là gì?",
    "output": "SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000"
  },
  {
    "instruction": "",
    "input": "Hiển thị tiêu đề công việc và lương trung bình của nhân viên.",
    "output": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title"
  },
  {
    "instruction": "",
    "input": "Mức lương trung bình cho mỗi tiêu đề công việc là bao nhiêu?",
    "output": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ (tên và họ) cho những nhân viên nhận được nhiều tiền lương hơn nhân viên có ID là 163?",
    "output": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )"
  },
  {
    "instruction": "",
    "input": "Cung cấp tên đầy đủ của nhân viên kiếm được nhiều hơn nhân viên với ID 163.",
    "output": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )"
  },
  {
    "instruction": "",
    "input": "Trả lại mức lương nhỏ nhất cho mọi phòng ban.",
    "output": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id"
  },
  {
    "instruction": "",
    "input": "Mức lương tối thiểu trong mỗi bộ phận là bao nhiêu?",
    "output": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id"
  },
  {
    "instruction": "",
    "input": "Tìm tên và họ và ID bộ phận cho những nhân viên kiếm được tiền lương như vậy là mức lương nhỏ nhất của bất kỳ bộ phận nào.",
    "output": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ và ID bộ phận cho các nhân viên được trả lương thấp nhất trên tất cả các bộ phận.",
    "output": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)"
  },
  {
    "instruction": "",
    "input": "Tìm ID nhân viên cho tất cả các nhân viên kiếm được nhiều hơn mức lương trung bình.",
    "output": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)"
  },
  {
    "instruction": "",
    "input": "ID nhân viên cho nhân viên kiếm được nhiều hơn mức trung bình là gì?",
    "output": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID nhân viên và tiền lương của tất cả các nhân viên báo cáo với Payam (Tên đầu tiên).",
    "output": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )"
  },
  {
    "instruction": "",
    "input": "ID nhân viên của nhân viên báo cáo với Payam là gì và mức lương của họ là gì?",
    "output": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các bộ phận thực sự có một hoặc nhiều nhân viên được chỉ định cho họ.",
    "output": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
  },
  {
    "instruction": "",
    "input": "Tên của các phòng ban có ít nhất một nhân viên.",
    "output": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
  },
  {
    "instruction": "",
    "input": "Nhận chi tiết của nhân viên quản lý một bộ phận.",
    "output": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id"
  },
  {
    "instruction": "",
    "input": "Tất cả các thông tin liên quan đến nhân viên là người quản lý là gì?",
    "output": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các thông tin về tiếp thị bộ phận.",
    "output": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
  },
  {
    "instruction": "",
    "input": "Tất cả các thông tin về bộ phận tiếp thị là gì?",
    "output": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID cho những nhân viên đã làm hai hoặc nhiều công việc trong quá khứ.",
    "output": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
  },
  {
    "instruction": "",
    "input": "ID nhân viên cho những người có hai hoặc nhiều công việc.",
    "output": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
  },
  {
    "instruction": "",
    "input": "ID duy nhất của các bộ phận nơi bất kỳ người quản lý nào đang quản lý 4 nhân viên trở lên.",
    "output": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
  },
  {
    "instruction": "",
    "input": "Cung cấp ID bộ phận riêng biệt của các bộ phận trong đó người quản lý phụ trách 4 nhân viên trở lên?",
    "output": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
  },
  {
    "instruction": "",
    "input": "Tìm ID công việc cho những công việc mà mức lương trung bình là trên 8000.",
    "output": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000"
  },
  {
    "instruction": "",
    "input": "ID công việc tương ứng với các công việc với mức lương trung bình trên 8000 là gì?",
    "output": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID nhân viên và tên công việc cho tất cả các công việc trong Bộ 80.",
    "output": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80"
  },
  {
    "instruction": "",
    "input": "ID nhân viên và chức danh công việc cho nhân viên trong Bộ 80 là gì?",
    "output": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và ID công việc cho tất cả nhân viên trong bộ phận tài chính là gì?",
    "output": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'"
  },
  {
    "instruction": "",
    "input": "Đặt tên đầu tiên và ID công việc cho tất cả nhân viên trong bộ phận tài chính.",
    "output": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả thông tin của các nhân viên có mức lương nếu trong phạm vi lương nhỏ nhất và 2500.",
    "output": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500"
  },
  {
    "instruction": "",
    "input": "Tất cả các thông tin liên quan đến nhân viên có mức lương trên mức tối thiểu và dưới 2500 là gì?",
    "output": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500"
  },
  {
    "instruction": "",
    "input": "Tìm ID của các nhân viên không làm việc trong các bộ phận nơi một số nhân viên làm việc có ID quản lý trong phạm vi 100 và 200.",
    "output": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"
  },
  {
    "instruction": "",
    "input": "ID ID cho nhân viên không làm việc trong các phòng ban với các nhà quản lý có ID trong khoảng từ 100 đến 200 là gì?",
    "output": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên nhân viên (tên và họ) và ngày thuê cho tất cả nhân viên trong cùng một bộ phận với Clara.",
    "output": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ và ngày thuê cho nhân viên trong cùng một bộ phận với một người có tên là Clara là gì?",
    "output": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên nhân viên (tên và họ) và ngày thuê cho tất cả nhân viên trong cùng một bộ phận với Clara không bao gồm Clara.",
    "output": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\""
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ và ngày thuê cho nhân viên trong cùng một bộ phận với một người có tên đầu tiên Clara, không bao gồm Clara?",
    "output": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\""
  },
  {
    "instruction": "",
    "input": "Hiển thị số nhân viên và tên (tên và họ) cho tất cả các nhân viên làm việc trong một bộ phận với bất kỳ nhân viên nào có tên có chứa một T T.",
    "output": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )"
  },
  {
    "instruction": "",
    "input": "ID và tên đầy đủ cho nhân viên làm việc trong một bộ phận có một người có tên đầu tiên có chứa chữ T là gì?",
    "output": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )"
  },
  {
    "instruction": "",
    "input": "Hiển thị số nhân viên, tên (họ và họ) và tiền lương cho tất cả các nhân viên kiếm được nhiều tiền hơn mức lương trung bình và làm việc trong một bộ phận với bất kỳ nhân viên nào có 'J' dưới tên của họ.",
    "output": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')"
  },
  {
    "instruction": "",
    "input": "IDS, tên đầy đủ và tiền lương cho nhân viên làm nhiều hơn mức trung bình và những người làm việc trong một bộ phận với các nhân viên có thư j trong tên của họ là gì?",
    "output": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')"
  },
  {
    "instruction": "",
    "input": "Hiển thị số nhân viên và ID công việc cho tất cả nhân viên có mức lương nhỏ hơn bất kỳ mức lương nào của những nhân viên có chức danh công việc là MK_MAN.",
    "output": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )"
  },
  {
    "instruction": "",
    "input": "ID nhân viên và ID công việc cho những nhân viên kiếm được ít hơn nhân viên thu nhập thấp nhất có tiêu đề MK_MAN?",
    "output": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )"
  },
  {
    "instruction": "",
    "input": "Hiển thị số nhân viên, tên (tên và họ) và tiêu đề công việc cho tất cả nhân viên có mức lương nhiều hơn bất kỳ mức lương nào của những nhân viên có chức danh công việc là PU_MAN.",
    "output": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )"
  },
  {
    "instruction": "",
    "input": "ID nhân viên, tên đầy đủ và ID công việc cho nhân viên kiếm được nhiều hơn nhân viên có thu nhập cao nhất với tiêu đề PU_MAN?",
    "output": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID bộ phận và tổng mức lương cho các bộ phận chứa ít nhất hai nhân viên.",
    "output": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền lương và ID bộ phận cho mỗi bộ phận có nhiều hơn 2 nhân viên là gì?",
    "output": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả thông tin của những nhân viên không có bất kỳ công việc nào trong quá khứ.",
    "output": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)"
  },
  {
    "instruction": "",
    "input": "Tất cả thông tin về những nhân viên chưa bao giờ có việc làm trong quá khứ là gì?",
    "output": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID bộ phận, tên đầy đủ (họ và họ), tiền lương cho những nhân viên có mức lương cao nhất trong mỗi bộ phận.",
    "output": "SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id"
  },
  {
    "instruction": "",
    "input": "ID bộ phận, tên đầy đủ và tiền lương cho nhân viên tận dụng nhiều nhất trong các bộ phận của họ là gì?",
    "output": "SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị họ và họ, bộ phận, thành phố và tỉnh bang cho mỗi nhân viên.",
    "output": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ, các phòng ban, thành phố và các tỉnh bang cho mỗi nhân viên là gì?",
    "output": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị những nhân viên có chứa chữ cái Z đến tên của họ và cũng hiển thị họ của họ, City.",
    "output": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"
  },
  {
    "instruction": "",
    "input": "Tên và thành phố đầy đủ của nhân viên có chữ Z trong tên đầu tiên của họ là gì?",
    "output": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên bộ phận, thành phố và tỉnh bang cho mỗi bộ phận.",
    "output": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id"
  },
  {
    "instruction": "",
    "input": "Tên bộ phận, thành phố và các tỉnh bang cho mỗi bộ phận là gì?",
    "output": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên đầy đủ (họ và họ) của nhân viên có ID và tên của đất nước hiện tại nơi anh ta đang làm việc.",
    "output": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ, ID của mỗi nhân viên và tên của đất nước họ đang ở?",
    "output": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên bộ phận và số lượng nhân viên trong mỗi bộ phận.",
    "output": "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name"
  },
  {
    "instruction": "",
    "input": "Tên bộ phận là gì và có bao nhiêu nhân viên làm việc trong mỗi người trong số họ là gì?",
    "output": "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên đầy đủ (họ và họ) và tiền lương của những nhân viên làm việc ở bất kỳ bộ phận nào ở London.",
    "output": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ và tiền lương của nhân viên làm việc ở Thành phố Luân Đôn là gì?",
    "output": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'"
  },
  {
    "instruction": "",
    "input": "Tên của bài hát được phát hành trong năm gần đây nhất là gì?",
    "output": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của bài hát được phát hành gần đây nhất là gì?",
    "output": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của bài hát dài nhất là gì?",
    "output": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm id của bài hát kéo dài nhất.",
    "output": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các bài hát tiếng Anh.",
    "output": "SELECT song_name FROM song WHERE languages  =  \"english\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bài hát bằng tiếng Anh là gì?",
    "output": "SELECT song_name FROM song WHERE languages  =  \"english\""
  },
  {
    "instruction": "",
    "input": "ID của các bài hát có định dạng là mp3.",
    "output": "SELECT f_id FROM files WHERE formats  =  \"mp3\""
  },
  {
    "instruction": "",
    "input": "ID của tất cả các tệp ở định dạng MP3 là gì?",
    "output": "SELECT f_id FROM files WHERE formats  =  \"mp3\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và quốc gia xuất xứ cho tất cả các ca sĩ đã sản xuất các bài hát với xếp hạng trên 9.",
    "output": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9"
  },
  {
    "instruction": "",
    "input": "Các tên và quốc gia nguồn gốc khác nhau cho tất cả các nghệ sĩ có xếp hạng bài hát trên 9 là gì?",
    "output": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9"
  },
  {
    "instruction": "",
    "input": "Liệt kê kích thước tệp và định dạng cho tất cả các bài hát có độ phân giải thấp hơn 800.",
    "output": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800"
  },
  {
    "instruction": "",
    "input": "Các kích thước tệp và định dạng cho tất cả các bài hát có độ phân giải thấp hơn 800 là gì?",
    "output": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800"
  },
  {
    "instruction": "",
    "input": "Tên của nghệ sĩ đã sản xuất bài hát ngắn nhất là gì?",
    "output": "SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của các nghệ sĩ đã hát bài hát ngắn nhất là gì?",
    "output": "SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và quốc gia xuất xứ cho các nghệ sĩ đã sản xuất ba bài hát được đánh giá cao hàng đầu.",
    "output": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tên của các ca sĩ đã hát 3 bài hát được đánh giá cao nhất là gì và họ đến từ những quốc gia nào?",
    "output": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài hát có thời lượng 4 phút?",
    "output": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\""
  },
  {
    "instruction": "",
    "input": "Số lượng các bài hát kéo dài khoảng 4 phút là gì?",
    "output": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nghệ sĩ đến từ Bangladesh?",
    "output": "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nghệ sĩ Bangladesh được liệt kê?",
    "output": "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\""
  },
  {
    "instruction": "",
    "input": "Đánh giá trung bình của các bài hát được sản xuất bởi các nghệ sĩ nữ là gì?",
    "output": "SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\""
  },
  {
    "instruction": "",
    "input": "Trung bình, có bao nhiêu bài hát được hát bởi một nữ nghệ sĩ?",
    "output": "SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\""
  },
  {
    "instruction": "",
    "input": "Định dạng tệp phổ biến nhất là gì?",
    "output": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm định dạng tệp được sử dụng bởi hầu hết các tệp.",
    "output": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các nghệ sĩ đến từ Vương quốc Anh và đã sản xuất các bài hát tiếng Anh.",
    "output": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT artist_name FROM song WHERE languages  =  \"english\""
  },
  {
    "instruction": "",
    "input": "Tên của các nghệ sĩ đến từ Vương quốc Anh và hát các bài hát bằng tiếng Anh là gì?",
    "output": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT artist_name FROM song WHERE languages  =  \"english\""
  },
  {
    "instruction": "",
    "input": "Tìm ID của các bài hát có sẵn ở định dạng MP4 và có độ phân giải thấp hơn 1000.",
    "output": "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000"
  },
  {
    "instruction": "",
    "input": "ID của các tệp có sẵn ở định dạng MP4 và độ phân giải nhỏ hơn 1000 là gì?",
    "output": "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000"
  },
  {
    "instruction": "",
    "input": "Đất nước xuất xứ của nghệ sĩ là nữ là gì và sản xuất một bài hát ở Bangla là gì?",
    "output": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\""
  },
  {
    "instruction": "",
    "input": "Những người nữ nghệ sĩ được hát bằng ngôn ngữ Bangla từ những quốc gia nào?",
    "output": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\""
  },
  {
    "instruction": "",
    "input": "Thời lượng trung bình của các bài hát có định dạng MP3 và độ phân giải dưới 800 là bao nhiêu?",
    "output": "SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800"
  },
  {
    "instruction": "",
    "input": "Thời lượng bài hát trung bình cho các bài hát ở định dạng MP3 và độ phân giải dưới 800 là bao nhiêu?",
    "output": "SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800"
  },
  {
    "instruction": "",
    "input": "Số lượng nghệ sĩ cho mỗi giới là gì?",
    "output": "SELECT count(*) ,  gender FROM artist GROUP BY gender"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nghệ sĩ là nam và bao nhiêu nữ?",
    "output": "SELECT count(*) ,  gender FROM artist GROUP BY gender"
  },
  {
    "instruction": "",
    "input": "Đánh giá trung bình của các bài hát cho mỗi ngôn ngữ là gì?",
    "output": "SELECT avg(rating) ,  languages FROM song GROUP BY languages"
  },
  {
    "instruction": "",
    "input": "Đánh giá bài hát trung bình cho mỗi ngôn ngữ là gì?",
    "output": "SELECT avg(rating) ,  languages FROM song GROUP BY languages"
  },
  {
    "instruction": "",
    "input": "Trả lại giới tính và tên của nghệ sĩ đã sản xuất bài hát với độ phân giải thấp nhất.",
    "output": "SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Giới tính và tên của nghệ sĩ đã hát bài hát với độ phân giải nhỏ nhất là gì?",
    "output": "SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi định dạng tệp, hãy trả lại số lượng nghệ sĩ đã phát hành các bài hát ở định dạng đó.",
    "output": "SELECT count(*) ,  formats FROM files GROUP BY formats"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài hát được phát hành cho mỗi định dạng?",
    "output": "SELECT count(*) ,  formats FROM files GROUP BY formats"
  },
  {
    "instruction": "",
    "input": "Tìm tên riêng biệt của tất cả các bài hát có độ phân giải cao hơn một số bài hát bằng tiếng Anh.",
    "output": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")"
  },
  {
    "instruction": "",
    "input": "Các tên khác nhau cho tất cả các bài hát có độ phân giải cao hơn các bài hát tiếng Anh là gì?",
    "output": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bài hát có đánh giá thấp hơn một số bài hát của thể loại blues là gì?",
    "output": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")"
  },
  {
    "instruction": "",
    "input": "Tên của các bài hát có xếp hạng thấp hơn ít nhất một bài hát blues là gì?",
    "output": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")"
  },
  {
    "instruction": "",
    "input": "Tên và đất nước xuất xứ của nghệ sĩ đã phát hành một bài hát có \"tình yêu\" trong tiêu đề của nó là gì?",
    "output": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\""
  },
  {
    "instruction": "",
    "input": "Tên của các nghệ sĩ đã phát hành một bài hát có từ tình yêu trong tiêu đề của nó, và các nghệ sĩ đến từ đâu?",
    "output": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và giới tính cho tất cả các nghệ sĩ đã phát hành bài hát vào tháng 3.",
    "output": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\""
  },
  {
    "instruction": "",
    "input": "Tên và giới tính của tất cả các nghệ sĩ đã phát hành bài hát vào tháng 3 là gì?",
    "output": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các thể loại theo thứ tự bảng chữ cái, cùng với xếp hạng của nó.",
    "output": "SELECT g_name ,  rating FROM genre ORDER BY g_name"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các thể loại theo thứ tự bảng chữ cái, kết hợp với xếp hạng của nó là gì?",
    "output": "SELECT g_name ,  rating FROM genre ORDER BY g_name"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi một danh sách tên của tất cả các bài hát được đặt hàng theo độ phân giải của chúng.",
    "output": "SELECT song_name FROM song ORDER BY resolution"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bài hát được đặt hàng theo số độ phân giải của chúng là gì?",
    "output": "SELECT song_name FROM song ORDER BY resolution"
  },
  {
    "instruction": "",
    "input": "ID của các bài hát có sẵn ở định dạng MP4 hoặc có độ phân giải trên 720 là gì?",
    "output": "SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution  >  720"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các bài hát có sẵn trên MP4 hoặc có độ phân giải cao hơn 720 là gì?",
    "output": "SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution  >  720"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các bài hát có thời lượng 4 phút hoặc bằng tiếng Anh.",
    "output": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"english\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bài hát dài khoảng 4 phút hoặc bằng tiếng Anh là gì?",
    "output": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"english\""
  },
  {
    "instruction": "",
    "input": "Ngôn ngữ được sử dụng thường xuyên nhất trong các bài hát là gì?",
    "output": "SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các ngôn ngữ được sử dụng thường xuyên nhất trong các bài hát là gì?",
    "output": "SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Ngôn ngữ được sử dụng thường xuyên nhất trong các bài hát có độ phân giải trên 500 là gì?",
    "output": "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của nghệ sĩ, đối với mỗi ngôn ngữ, có nhiều bài hát nhất với độ phân giải cao hơn 500?",
    "output": "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của các nghệ sĩ là nam và đến từ Vương quốc Anh là gì?",
    "output": "SELECT artist_name FROM artist WHERE country  =  \"UK\" AND gender  =  \"Male\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các nghệ sĩ nam Anh là gì?",
    "output": "SELECT artist_name FROM artist WHERE country  =  \"UK\" AND gender  =  \"Male\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các bài hát có thể loại hiện đại hoặc ngôn ngữ là tiếng Anh.",
    "output": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\""
  },
  {
    "instruction": "",
    "input": "Tên của các bài hát hiện đại hoặc hát bằng tiếng Anh là gì?",
    "output": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\""
  },
  {
    "instruction": "",
    "input": "Trả về tên của các bài hát mà định dạng là MP3 và độ phân giải dưới 1000.",
    "output": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bài hát ở định dạng MP3 và có độ phân giải thấp hơn 1000 là gì?",
    "output": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các ca sĩ đến từ Vương quốc Anh và phát hành một bài hát tiếng Anh.",
    "output": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các ca sĩ đến từ Vương quốc Anh là gì và phát hành một bài hát bằng tiếng Anh là gì?",
    "output": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\""
  },
  {
    "instruction": "",
    "input": "Đánh giá trung bình và độ phân giải của các bài hát ở Bangla là gì?",
    "output": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\""
  },
  {
    "instruction": "",
    "input": "Xếp hạng trung bình và độ phân giải của tất cả các bài hát Bangla là gì?",
    "output": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\""
  },
  {
    "instruction": "",
    "input": "Độ phân giải tối đa và tối thiểu của các bài hát có thời lượng là 3 phút là bao nhiêu?",
    "output": "SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\""
  },
  {
    "instruction": "",
    "input": "Độ phân giải tối đa và tối thiểu của tất cả các bài hát dài khoảng 3 phút là bao nhiêu?",
    "output": "SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\""
  },
  {
    "instruction": "",
    "input": "Thời lượng tối đa và độ phân giải của các bài hát được nhóm và đặt hàng theo ngôn ngữ là gì?",
    "output": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages"
  },
  {
    "instruction": "",
    "input": "Thời lượng và độ phân giải tối đa của tất cả các bài hát, cho mỗi ngôn ngữ, được đặt hàng theo thứ tự bảng chữ cái theo ngôn ngữ là gì?",
    "output": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages"
  },
  {
    "instruction": "",
    "input": "Thời lượng ngắn nhất và đánh giá thấp nhất của các bài hát được nhóm theo thể loại và được đặt hàng bởi thể loại là gì?",
    "output": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is"
  },
  {
    "instruction": "",
    "input": "Bài hát ngắn nhất và được đánh giá cao nhất cho mỗi thể loại, được đặt hàng theo bảng chữ cái theo thể loại là gì?",
    "output": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is"
  },
  {
    "instruction": "",
    "input": "Tìm tên và số tác phẩm của tất cả các nghệ sĩ có ít nhất một bài hát tiếng Anh.",
    "output": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1"
  },
  {
    "instruction": "",
    "input": "Tên và số lượng tác phẩm cho tất cả các nghệ sĩ đã hát ít nhất một bài hát bằng tiếng Anh?",
    "output": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1"
  },
  {
    "instruction": "",
    "input": "Tìm tên và quốc gia xuất xứ cho tất cả các nghệ sĩ đã phát hành ít nhất một bài hát độ phân giải trên 900.",
    "output": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1"
  },
  {
    "instruction": "",
    "input": "Tên và quốc gia xuất xứ cho mỗi nghệ sĩ đã phát hành một bài hát với độ phân giải cao hơn 900?",
    "output": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1"
  },
  {
    "instruction": "",
    "input": "Tìm tên và số tác phẩm của ba nghệ sĩ đã sản xuất nhiều bài hát nhất.",
    "output": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tên của ba nghệ sĩ đã sản xuất nhiều bài hát nhất và họ đã sản xuất bao nhiêu tác phẩm?",
    "output": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tìm đất nước xuất xứ cho nghệ sĩ đã tạo ra số lượng bài hát ít nhất?",
    "output": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Nghệ sĩ đã tạo ra ít bài hát nhất từ ​​nước nào?",
    "output": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của các bài hát có xếp hạng dưới mức xếp hạng của tất cả các bài hát bằng tiếng Anh là gì?",
    "output": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')"
  },
  {
    "instruction": "",
    "input": "Tên bài hát cho mỗi bài hát có xếp hạng ít hơn xếp hạng tối thiểu cho các bài hát tiếng Anh là gì?",
    "output": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')"
  },
  {
    "instruction": "",
    "input": "ID của các bài hát có độ phân giải cao hơn độ phân giải của bất kỳ bài hát nào có xếp hạng thấp hơn 8?",
    "output": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)"
  },
  {
    "instruction": "",
    "input": "ID của mỗi bài hát có độ phân giải cao hơn một bài hát có xếp hạng dưới 8 là bao nhiêu?",
    "output": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)"
  },
  {
    "instruction": "",
    "input": "ID của các bài hát có độ phân giải cao hơn độ phân giải trung bình của các bài hát trong thể loại hiện đại là gì?",
    "output": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các bài hát có độ phân giải cao hơn của độ phân giải trung bình trong thể loại hiện đại là gì?",
    "output": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")"
  },
  {
    "instruction": "",
    "input": "Tìm 3 nghệ sĩ hàng đầu có số lượng bài hát lớn nhất có ngôn ngữ là Bangla.",
    "output": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "3 nghệ sĩ hàng đầu với số lượng bài hát lớn nhất trong ngôn ngữ Bangla là gì?",
    "output": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID, thể loại và tên nghệ sĩ của các bài hát tiếng Anh được đặt hàng theo đánh giá.",
    "output": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating"
  },
  {
    "instruction": "",
    "input": "ID, thể loại và tên của nghệ sĩ cho mỗi bài hát tiếng Anh được đặt hàng bằng xếp hạng tăng dần?",
    "output": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating"
  },
  {
    "instruction": "",
    "input": "Liệt kê thời lượng, kích thước tệp và định dạng của các bài hát có thể loại pop, được đặt hàng theo tiêu đề?",
    "output": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name"
  },
  {
    "instruction": "",
    "input": "Thời lượng, kích thước tệp và định dạng bài hát cho mỗi bài hát pop là bao nhiêu, được đặt hàng theo tiêu đề theo thứ tự bảng chữ cái?",
    "output": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các nghệ sĩ đã sản xuất các bài hát tiếng Anh nhưng chưa bao giờ nhận được xếp hạng cao hơn 8.",
    "output": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"english\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8"
  },
  {
    "instruction": "",
    "input": "Tên của các nghệ sĩ khác nhau đã tạo ra một bài hát bằng tiếng Anh nhưng chưa bao giờ nhận được xếp hạng cao hơn 8?",
    "output": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"english\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các nghệ sĩ đến từ Bangladesh và chưa bao giờ nhận được xếp hạng cao hơn 7.",
    "output": "SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7"
  },
  {
    "instruction": "",
    "input": "Tên của các nghệ sĩ khác nhau từ Bangladesh không bao giờ nhận được xếp hạng cao hơn 7?",
    "output": "SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ và ID của trường đại học với số lượng cầu thủ bóng chày lớn nhất là gì?",
    "output": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầy đủ và ID của trường đại học có nhiều cầu thủ bóng chày nhất.",
    "output": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Mức lương trung bình của các cầu thủ trong đội có tên là 'Boston Red Stockings' là bao nhiêu?",
    "output": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings'"
  },
  {
    "instruction": "",
    "input": "Tính lương trung bình của các cầu thủ trong đội có tên là 'Boston Red Stockings'.",
    "output": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của người chơi tham gia vào tất cả các trò chơi Star vào năm 1998 là gì?",
    "output": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998"
  },
  {
    "instruction": "",
    "input": "Liệt kê họ và họ đầu tiên cho những người chơi tham gia vào All Star Game vào năm 1998.",
    "output": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên, họ và ID của người chơi với trải nghiệm trò chơi toàn sao nhất là gì?Cũng liệt kê số lượng.",
    "output": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Người chơi nào có nhiều trải nghiệm trò chơi ngôi sao nhất?Cho tôi tên, họ và ID của người chơi, cũng như số lần người chơi tham gia vào trò chơi All Star.",
    "output": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người chơi tham gia Hall of Fame mỗi năm?",
    "output": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng người chơi tham gia Hall of Fame cho mỗi năm.",
    "output": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;"
  },
  {
    "instruction": "",
    "input": "Số lượng tham dự trung bình tại nhà cho mỗi năm là bao nhiêu?",
    "output": "SELECT YEAR ,  avg(attendance) FROM home_game GROUP BY YEAR;"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi năm, trở lại năm và số lượng tham dự trung bình tại các trò chơi tại nhà.",
    "output": "SELECT YEAR ,  avg(attendance) FROM home_game GROUP BY YEAR;"
  },
  {
    "instruction": "",
    "input": "Trong năm 2014, ID và cấp bậc của đội có số lượng tham dự trung bình lớn nhất là gì?",
    "output": "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tìm ID và cấp bậc của nhóm có tỷ lệ tham dự trung bình cao nhất trong năm 2014.",
    "output": "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của người quản lý, họ và ID đã giành được giải thưởng người quản lý nhiều nhất là gì?",
    "output": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Người quản lý nào giành được giải thưởng quản lý nhiều nhất?Cho tôi tên, họ và ID của người quản lý.",
    "output": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu công viên trong bang NY?",
    "output": "SELECT count(*) FROM park WHERE state  =  'NY';"
  },
  {
    "instruction": "",
    "input": "Cho tôi xem số lượng công viên mà tiểu bang NY có.",
    "output": "SELECT count(*) FROM park WHERE state  =  'NY';"
  },
  {
    "instruction": "",
    "input": "3 cầu thủ nào đã giành được nhiều giải thưởng người chơi nhất?Liệt kê tên đầy đủ và ID của họ.",
    "output": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;"
  },
  {
    "instruction": "",
    "input": "Tìm tên, họ và ID cho ba người chơi hàng đầu đã giành được nhiều giải thưởng người chơi nhất.",
    "output": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;"
  },
  {
    "instruction": "",
    "input": "Liệt kê ba quốc gia là nguồn gốc của những người chơi ít nhất.",
    "output": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;"
  },
  {
    "instruction": "",
    "input": "Ba quốc gia mà người chơi ít nhất đến từ?",
    "output": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả tên và họ của người chơi có hồ sơ tử vong trống rỗng.",
    "output": "SELECT name_first ,  name_last FROM player WHERE death_year = '';"
  },
  {
    "instruction": "",
    "input": "Tên và họ của những người chơi có hồ sơ tử vong trống rỗng là gì?",
    "output": "SELECT name_first ,  name_last FROM player WHERE death_year = '';"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người chơi sinh ra ở Hoa Kỳ là những người chơi thuận tay phải?Nghĩa là, có giá trị đánh đập 'r'.",
    "output": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng người chơi sinh ra ở Hoa Kỳ và có thông tin dơi 'r'.",
    "output": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';"
  },
  {
    "instruction": "",
    "input": "Chiều cao trung bình của các cầu thủ từ trường đại học có tên là 'Đại học Yale' là gì?",
    "output": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';"
  },
  {
    "instruction": "",
    "input": "Tìm chiều cao trung bình của những người chơi thuộc trường đại học có tên là 'Đại học Yale'.",
    "output": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';"
  },
  {
    "instruction": "",
    "input": "Mức lương cao nhất trong mỗi đội là bao nhiêu?Liệt kê tên nhóm, ID và mức lương tối đa.",
    "output": "SELECT T1.name ,  T1.team_id ,  max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id;"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi đội, trả lại tên nhóm, ID và mức lương tối đa trong đội.",
    "output": "SELECT T1.name ,  T1.team_id ,  max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id;"
  },
  {
    "instruction": "",
    "input": "Tên và ID của nhóm cung cấp mức lương trung bình thấp nhất là gì?",
    "output": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Đội nào cung cấp mức lương trung bình thấp nhất?Cho tôi tên và ID của đội.",
    "output": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tìm tên và họ của người chơi đã giành giải thưởng cả năm 1960 và năm 1961.",
    "output": "SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1961"
  },
  {
    "instruction": "",
    "input": "Người chơi nào đã giành được giải thưởng trong cả năm 1960 và 1961?Trả lại tên và họ của họ.",
    "output": "SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1961"
  },
  {
    "instruction": "",
    "input": "Tên người chơi và họ của người chơi có trọng lượng lớn hơn 220 hoặc chiều cao ngắn hơn 75.",
    "output": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75"
  },
  {
    "instruction": "",
    "input": "Tên và họ của những người chơi có trọng lượng trên 220 hoặc chiều cao dưới 75 là gì?",
    "output": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75"
  },
  {
    "instruction": "",
    "input": "Liệt kê điểm số tối đa của đội Boston Red Stockings khi đội giành chiến thắng trong cuộc tranh luận?",
    "output": "SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings';"
  },
  {
    "instruction": "",
    "input": "Điểm số tối đa mà đội Boston Red Stockings có được khi đội giành chiến thắng trong cuộc tranh luận là gì?",
    "output": "SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings';"
  },
  {
    "instruction": "",
    "input": "Boston Red Stockings đã mất bao nhiêu lần trong năm 2009?",
    "output": "SELECT count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year = 2009;"
  },
  {
    "instruction": "",
    "input": "Đếm số lần nhóm \"Boston Red Stockings\" đã mất trong năm 2009.",
    "output": "SELECT count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year = 2009;"
  },
  {
    "instruction": "",
    "input": "Tên và ID của đội với những chiến thắng nhất trong năm 2008 là gì?",
    "output": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tìm tên và ID của đội đã giành được nhiều lần nhất trong năm 2008.",
    "output": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Số lượng chiến thắng mà đội Boston Red Stockings có được trong các bài viết mỗi năm trong lịch sử là bao nhiêu?",
    "output": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' GROUP BY T1.year"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi năm, trở lại năm và số lần đội Boston Red Stockings đã giành chiến thắng trong các bài đăng.",
    "output": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' GROUP BY T1.year"
  },
  {
    "instruction": "",
    "input": "Tổng số trò chơi hậu kỳ mà Đội Boston Red Stockings đã tham gia là gì?",
    "output": "SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' );"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu lần, đội Boston Red Stockings tham gia vào các trò chơi hậu kỳ?",
    "output": "SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' );"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trò chơi trong năm 1885 kết quả kết quả của mối quan hệ (nghĩa là giá trị của \"mối quan hệ\" là '1')?",
    "output": "SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng trò chơi bị ràng buộc (giá trị của \"mối quan hệ\" là '1') vào năm 1885.",
    "output": "SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;"
  },
  {
    "instruction": "",
    "input": "Tổng mức lương được trả bởi Đội Boston Red Stockings trong năm 2010 là bao nhiêu?",
    "output": "SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010"
  },
  {
    "instruction": "",
    "input": "Tổng chi phí tiền lương của đội Boston Red Stockings trong năm 2010 là bao nhiêu?",
    "output": "SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người chơi trong đội Boston Red Stockings năm 2000?",
    "output": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2000"
  },
  {
    "instruction": "",
    "input": "Boston Red Stockings có bao nhiêu người chơi trong năm 2000?",
    "output": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2000"
  },
  {
    "instruction": "",
    "input": "Liệt kê 3 mức lương cao nhất của người chơi trong năm 2001?",
    "output": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;"
  },
  {
    "instruction": "",
    "input": "3 người chơi được trả lương cao trong năm 2001 có lương bao nhiêu tiền lương?",
    "output": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;"
  },
  {
    "instruction": "",
    "input": "Tất cả các giá trị lương của người chơi trong năm 2010 và 2001 là gì?",
    "output": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các giá trị lương mà người chơi nhận được trong năm 2010 và 2001.",
    "output": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001"
  },
  {
    "instruction": "",
    "input": "Ít nhất là mọi người ít nhất vào Hall of Fame?",
    "output": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tìm năm mà mọi người ít tham gia Hall of Fame.",
    "output": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu công viên ở thành phố Atlanta?",
    "output": "SELECT count(*) FROM park WHERE city = 'Atlanta';"
  },
  {
    "instruction": "",
    "input": "Thành phố Atlanta có bao nhiêu công viên?",
    "output": "SELECT count(*) FROM park WHERE city = 'Atlanta';"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trò chơi đã được chơi trong công viên \"Columbia Park\" vào năm 1907?",
    "output": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng trò chơi diễn ra trong công viên \"Công viên Columbia\" vào năm 1907.",
    "output": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trò chơi đã được chơi ở City Atlanta vào năm 2000?",
    "output": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  'Atlanta';"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng trò chơi diễn ra ở City Atlanta vào năm 2000.",
    "output": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  'Atlanta';"
  },
  {
    "instruction": "",
    "input": "Tổng tham dự trò chơi tại nhà của Đội Boston Red Stockings từ năm 2000 đến 2010 là gì?",
    "output": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trò chơi trong tổng số Boston Red Stockings tham dự từ năm 2000 đến 2010?",
    "output": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;"
  },
  {
    "instruction": "",
    "input": "Người chơi có tên đầu tiên là Len và họ Barker kiếm được bao nhiêu từ năm 1985 đến 1990?",
    "output": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;"
  },
  {
    "instruction": "",
    "input": "Tính tổng lương mà người chơi có tên Len và họ Barker nhận được từ năm 1985 đến 1990.",
    "output": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;"
  },
  {
    "instruction": "",
    "input": "Tên người chơi và họ của người chơi đã nhận được tiền lương từ Team Washington Nationals trong cả năm 2005 và 2007.",
    "output": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và họ của những người chơi đã được Team Washington Nationals trả lương trong cả năm 2005 và 2007 là gì?",
    "output": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'"
  },
  {
    "instruction": "",
    "input": "Team Boston Red Stockings của đội đã chơi từ năm 1990 đến 2000?",
    "output": "SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;"
  },
  {
    "instruction": "",
    "input": "Đếm tổng số trò chơi mà đội Boston Red Stockings tham dự từ năm 1990 đến 2000.",
    "output": "SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;"
  },
  {
    "instruction": "",
    "input": "Đội nào có số lượng tham dự ít nhất trong các trò chơi tại nhà vào năm 1980?",
    "output": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tìm nhóm tham dự số lượng trò chơi tại nhà ít nhất vào năm 1980.",
    "output": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các trạng thái có hơn 2 công viên.",
    "output": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;"
  },
  {
    "instruction": "",
    "input": "Những tiểu bang nào có nhiều hơn 2 công viên?",
    "output": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhượng quyền của đội đang hoạt động, với giá trị tích cực 'y'?",
    "output": "SELECT count(*) FROM team_franchise WHERE active = 'Y';"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng nhượng quyền của nhóm đang hoạt động (có 'y' là thông tin \"hoạt động\").",
    "output": "SELECT count(*) FROM team_franchise WHERE active = 'Y';"
  },
  {
    "instruction": "",
    "input": "Những thành phố nào có 2 đến 4 công viên?",
    "output": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các thành phố có 2 đến 4 công viên.",
    "output": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;"
  },
  {
    "instruction": "",
    "input": "Công viên nào có nhiều người tham dự nhất trong năm 2008?",
    "output": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Công viên nào đã tham dự công viên nào trong năm 2008?",
    "output": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ống kính camera có độ dài tiêu cự dài hơn 15 mm?",
    "output": "SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15"
  },
  {
    "instruction": "",
    "input": "Tìm thương hiệu và tên cho mỗi ống kính camera, và sắp xếp theo thứ tự giảm dần của khẩu độ tối đa.",
    "output": "SELECT brand ,  name FROM camera_lens ORDER BY max_aperture DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID, bảng màu và tên cho tất cả các ảnh.",
    "output": "SELECT id ,  color ,  name FROM photos"
  },
  {
    "instruction": "",
    "input": "Chiều cao tối đa và trung bình của những ngọn núi là gì?",
    "output": "SELECT max(height) ,  avg(height) FROM mountain"
  },
  {
    "instruction": "",
    "input": "Sự nổi bật trung bình của những ngọn núi ở đất nước 'Morocco' là gì?",
    "output": "SELECT avg(prominence) FROM mountain WHERE country  =  'Morocco'"
  },
  {
    "instruction": "",
    "input": "Tên, chiều cao và sự nổi bật của những ngọn núi không thuộc phạm vi 'phạm vi Aberdare' là gì?",
    "output": "SELECT name ,  height ,  prominence FROM mountain WHERE range != 'Aberdare Range'"
  },
  {
    "instruction": "",
    "input": "ID và tên của các bức ảnh cho núi là gì?",
    "output": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.height  >  4000"
  },
  {
    "instruction": "",
    "input": "ID và tên của những ngọn núi có ít nhất 2 ảnh là gì?",
    "output": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id GROUP BY T1.id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tên của các máy ảnh đã chụp ảnh nhiều ngọn núi nhất là gì?",
    "output": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của những bức ảnh được chụp bằng thương hiệu ống kính 'Sigma' hoặc 'Olympus' là gì?",
    "output": "SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  'Sigma' OR T1.brand  =  'Olympus'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại thương hiệu ống kính khác nhau?",
    "output": "SELECT count(DISTINCT brand) FROM camera_lens"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ống kính máy ảnh không được sử dụng để chụp bất kỳ bức ảnh nào?",
    "output": "SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại ống kính máy ảnh riêng biệt được sử dụng để chụp ảnh những ngọn núi ở nước 'Ethiopia'?",
    "output": "SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  'Ethiopia'"
  },
  {
    "instruction": "",
    "input": "Liệt kê các thương hiệu ống kính đã chụp cả một bức tranh về những ngọn núi với phạm vi 'Toubkal Atlas' và hình ảnh những ngọn núi với phạm vi 'Lasta Massif'",
    "output": "SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Toubkal Atlas' INTERSECT SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Lasta Massif'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và sự nổi bật của những ngọn núi có hình ảnh không được chụp bởi một ống kính của thương hiệu 'Sigma'.",
    "output": "SELECT name ,  prominence FROM mountain EXCEPT SELECT T1.name ,  T1.prominence FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T3.brand  =  'Sigma'"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên ống kính camera chứa \"Digital\".",
    "output": "SELECT name FROM camera_lens WHERE name LIKE \"%Digital%\""
  },
  {
    "instruction": "",
    "input": "Tên của mỗi ống kính máy ảnh và số lượng ảnh được chụp là gì?Đặt hàng kết quả bằng số lượng hình ảnh.",
    "output": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các kênh không thuộc sở hữu của CCTV.",
    "output": "SELECT name FROM channel WHERE OWNER != 'CCTV'"
  },
  {
    "instruction": "",
    "input": "Những kênh nào không thuộc sở hữu của CCTV?Cho tôi tên kênh.",
    "output": "SELECT name FROM channel WHERE OWNER != 'CCTV'"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên kênh được đặt hàng theo xếp hạng của họ tính theo phần trăm từ lớn đến nhỏ.",
    "output": "SELECT name FROM channel ORDER BY rating_in_percent DESC"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi một danh sách tất cả các tên kênh được sắp xếp theo xếp hạng kênh theo thứ tự giảm dần.",
    "output": "SELECT name FROM channel ORDER BY rating_in_percent DESC"
  },
  {
    "instruction": "",
    "input": "Chủ sở hữu của kênh có tỷ lệ xếp hạng cao nhất là gì?",
    "output": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cho tôi xem chủ sở hữu của kênh với xếp hạng cao nhất.",
    "output": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu chương trình?",
    "output": "SELECT count(*) FROM program"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng chương trình.",
    "output": "SELECT count(*) FROM program"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên của các chương trình, đặt hàng theo thời gian ra mắt.",
    "output": "SELECT name FROM program ORDER BY launch"
  },
  {
    "instruction": "",
    "input": "Danh sách các tên chương trình, được sắp xếp theo thứ tự ngày ra mắt là gì?",
    "output": "SELECT name FROM program ORDER BY launch"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên, nguồn gốc và chủ sở hữu của mỗi chương trình.",
    "output": "SELECT name ,  origin ,  OWNER FROM program"
  },
  {
    "instruction": "",
    "input": "Tên, nguồn gốc và chủ sở hữu của mỗi chương trình là gì?",
    "output": "SELECT name ,  origin ,  OWNER FROM program"
  },
  {
    "instruction": "",
    "input": "Tìm tên của chương trình được ra mắt gần đây nhất.",
    "output": "SELECT name FROM program ORDER BY launch DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Chương trình nào được ra mắt gần đây nhất?Trả lại tên chương trình.",
    "output": "SELECT name FROM program ORDER BY launch DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tổng tỷ lệ phần trăm của tất cả các kênh thuộc sở hữu của CCTV.",
    "output": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'"
  },
  {
    "instruction": "",
    "input": "Tổng số cổ phần (tính bằng phần trăm) của tất cả các kênh thuộc sở hữu của CCTV là bao nhiêu?",
    "output": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các kênh được phát vào buổi sáng.",
    "output": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'"
  },
  {
    "instruction": "",
    "input": "Những kênh nào được phát vào buổi sáng?Cho tôi tên kênh.",
    "output": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'"
  },
  {
    "instruction": "",
    "input": "Tên của các kênh phát sóng trong cả buổi sáng và đêm là gì?",
    "output": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Night'"
  },
  {
    "instruction": "",
    "input": "Những kênh nào phát sóng cả vào buổi sáng và buổi tối?Cho tôi tên kênh.",
    "output": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Night'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu chương trình được phát trong mỗi phần thời gian trong ngày?",
    "output": "SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng chương trình phát cho mỗi phần của một ngày.",
    "output": "SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các chương trình khác nhau được phát vào ban đêm.",
    "output": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu chương trình riêng biệt được phát vào thời gian \"đêm\"?",
    "output": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các chương trình không bao giờ được phát vào buổi sáng.",
    "output": "SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\""
  },
  {
    "instruction": "",
    "input": "Những chương trình nào không bao giờ được phát vào buổi sáng?Cho tôi tên của các chương trình.",
    "output": "SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\""
  },
  {
    "instruction": "",
    "input": "Tìm các chủ sở hữu chương trình có một số chương trình trong cả hai buổi sáng và ban đêm.",
    "output": "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Night\""
  },
  {
    "instruction": "",
    "input": "Ai là chủ sở hữu của các chương trình phát sóng cả vào buổi sáng và buổi tối?",
    "output": "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Night\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các nguồn gốc chương trình theo thứ tự bảng chữ cái.",
    "output": "SELECT origin FROM program ORDER BY origin"
  },
  {
    "instruction": "",
    "input": "Danh sách các nguồn gốc chương trình được đặt hàng theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT origin FROM program ORDER BY origin"
  },
  {
    "instruction": "",
    "input": "Số lượng chủ sở hữu kênh khác nhau là bao nhiêu?",
    "output": "SELECT count(DISTINCT OWNER) FROM channel"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng chủ sở hữu kênh riêng biệt.",
    "output": "SELECT count(DISTINCT OWNER) FROM channel"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các chương trình có nguồn gốc không phải ở Bắc Kinh.",
    "output": "SELECT name FROM program WHERE origin != 'Beijing'"
  },
  {
    "instruction": "",
    "input": "Nguồn gốc của chương trình không phải là \"Bắc Kinh\"?Cho tôi tên chương trình.",
    "output": "SELECT name FROM program WHERE origin != 'Beijing'"
  },
  {
    "instruction": "",
    "input": "Tên của các kênh thuộc sở hữu của CCTV hoặc HBS là gì?",
    "output": "SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS'"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các kênh thuộc sở hữu của CCTV hoặc HBS",
    "output": "SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS'"
  },
  {
    "instruction": "",
    "input": "Tìm tổng tỷ lệ xếp hạng cho mỗi chủ sở hữu kênh.",
    "output": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER"
  },
  {
    "instruction": "",
    "input": "Tổng xếp hạng của kênh cho mỗi chủ sở hữu kênh là bao nhiêu?",
    "output": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER"
  },
  {
    "instruction": "",
    "input": "Tìm tên của chương trình được phát sóng thường xuyên nhất.",
    "output": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Chương trình nào được phát sóng thường xuyên nhất?Cho tôi tên chương trình.",
    "output": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu khóa học?",
    "output": "SELECT count(*) FROM COURSES"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số khóa học được cung cấp.",
    "output": "SELECT count(*) FROM COURSES"
  },
  {
    "instruction": "",
    "input": "Các mô tả của các khóa học với tên \"Cơ sở dữ liệu\" là gì?",
    "output": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\""
  },
  {
    "instruction": "",
    "input": "Trả về mô tả cho các khóa học có tên \"Cơ sở dữ liệu\".",
    "output": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\""
  },
  {
    "instruction": "",
    "input": "Địa chỉ của các tác giả hoặc gia sư khóa học có tên cá nhân là \"Cathrine\"",
    "output": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\""
  },
  {
    "instruction": "",
    "input": "Trả về địa chỉ của các tác giả hoặc biên tập viên khóa học có tên cá nhân là \"Catherine\".",
    "output": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\""
  },
  {
    "instruction": "",
    "input": "Liệt kê các địa chỉ của tất cả các tác giả hoặc gia sư khóa học.",
    "output": "SELECT address_line_1 FROM Course_Authors_and_Tutors"
  },
  {
    "instruction": "",
    "input": "Địa chỉ của mỗi tác giả hoặc gia sư khóa học là gì?",
    "output": "SELECT address_line_1 FROM Course_Authors_and_Tutors"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên đăng nhập và tên gia đình của tất nhiên là tác giả và gia sư.",
    "output": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors"
  },
  {
    "instruction": "",
    "input": "Tên đăng nhập và tên gia đình của tất nhiên là tác giả và gia sư là gì?",
    "output": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các ngày tuyển sinh và hoàn thành học sinh.",
    "output": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment"
  },
  {
    "instruction": "",
    "input": "Tất cả các ngày ghi danh và hoàn thành trong hồ sơ là gì?",
    "output": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên riêng biệt được ghi danh vào các khóa học?",
    "output": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sinh viên riêng biệt đăng ký vào các khóa học.",
    "output": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khóa học riêng biệt được ghi danh bởi sinh viên?",
    "output": "SELECT count(course_id) FROM Student_Course_Enrolment"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các khóa học riêng biệt đã đăng ký sinh viên.",
    "output": "SELECT count(course_id) FROM Student_Course_Enrolment"
  },
  {
    "instruction": "",
    "input": "Tìm ngày của các bài kiểm tra được thực hiện với kết quả \"vượt qua\".",
    "output": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\""
  },
  {
    "instruction": "",
    "input": "Những bài kiểm tra nào có kết quả \"vượt qua\"?Trả lại ngày khi các bài kiểm tra được thực hiện.",
    "output": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài kiểm tra có kết quả \"thất bại\"?",
    "output": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"Fail\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng bài kiểm tra với kết quả \"thất bại\".",
    "output": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"Fail\""
  },
  {
    "instruction": "",
    "input": "Tên đăng nhập của các sinh viên có tên gia đình \"Ward\" là gì?",
    "output": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\""
  },
  {
    "instruction": "",
    "input": "Trả lại tên đăng nhập của các sinh viên có tên gia đình là \"Ward\".",
    "output": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\""
  },
  {
    "instruction": "",
    "input": "Những ngày đăng nhập mới nhất của các sinh viên có tên gia đình \"Jaskolski\" hoặc \"Langosh\" là gì?",
    "output": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\""
  },
  {
    "instruction": "",
    "input": "Tìm ngày đăng nhập mới nhất của các sinh viên có tên gia đình là \"Jaskolski\" hoặc \"Langosh\".",
    "output": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh có tên cá nhân chứa từ \"con trai\"?",
    "output": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sinh viên có từ \"con trai\" bằng tên cá nhân của họ.",
    "output": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên chủ đề.",
    "output": "SELECT subject_name FROM SUBJECTS"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các đối tượng là gì.",
    "output": "SELECT subject_name FROM SUBJECTS"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các thông tin về các tác giả khóa học và gia sư theo thứ tự bảng chữ cái của tên cá nhân.",
    "output": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name"
  },
  {
    "instruction": "",
    "input": "Sắp xếp thông tin về các tác giả khóa học và gia sư theo thứ tự bảng chữ cái của tên cá nhân.",
    "output": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên cá nhân và tên gia đình của tất cả các sinh viên theo thứ tự bảng chữ cái của tên gia đình.",
    "output": "SELECT personal_name ,  family_name FROM Students ORDER BY family_name"
  },
  {
    "instruction": "",
    "input": "Tên cá nhân và tên gia đình của các sinh viên là gì?Sắp xếp kết quả theo thứ tự bảng chữ cái của tên gia đình.",
    "output": "SELECT personal_name ,  family_name FROM Students ORDER BY family_name"
  },
  {
    "instruction": "",
    "input": "Liệt kê từng kết quả kiểm tra và số lượng của nó theo thứ tự giảm dần.",
    "output": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi kết quả kiểm tra riêng biệt, hãy tìm số lượng sinh viên có kết quả.",
    "output": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC"
  },
  {
    "instruction": "",
    "input": "Tìm tên đăng nhập của tác giả khóa học dạy khóa học với tên \"Cơ sở dữ liệu nâng cao\".",
    "output": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"advanced database\""
  },
  {
    "instruction": "",
    "input": "Tác giả khóa học nào dạy khóa học \"cơ sở dữ liệu nâng cao\"?Cho tôi tên đăng nhập của anh ấy hoặc cô ấy.",
    "output": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"advanced database\""
  },
  {
    "instruction": "",
    "input": "Tìm địa chỉ của các tác giả khóa học dạy khóa học với tên \"Hệ điều hành\" hoặc \"Cấu trúc dữ liệu\".",
    "output": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\""
  },
  {
    "instruction": "",
    "input": "Địa chỉ của các tác giả khóa học dạy khóa học \"hệ điều hành\" hoặc \"cấu trúc dữ liệu\".",
    "output": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\""
  },
  {
    "instruction": "",
    "input": "Tìm tên cá nhân, tên gia đình và ID tác giả của tác giả khóa học dạy nhiều khóa học nhất.",
    "output": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên cá nhân, tên gia đình và ID tác giả của tác giả khóa học dạy nhiều khóa học nhất là gì?",
    "output": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm địa chỉ và ID tác giả của các tác giả khóa học dạy ít nhất hai khóa học.",
    "output": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Các tác giả khóa học nào dạy hai hoặc nhiều khóa học?Cho tôi địa chỉ của họ và ID tác giả.",
    "output": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các khóa học được dạy bởi gia sư có tên cá nhân \"Julio\".",
    "output": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\""
  },
  {
    "instruction": "",
    "input": "Tên của các khóa học được dạy bởi gia sư có tên cá nhân là \"Julio\" là gì?",
    "output": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\""
  },
  {
    "instruction": "",
    "input": "Tìm tên và mô tả của các khóa học thuộc chủ đề có tên là \"Khoa học máy tính\".",
    "output": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\""
  },
  {
    "instruction": "",
    "input": "Tên và mô tả của tất cả các khóa học theo chủ đề \"Khoa học máy tính\" là gì?",
    "output": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\""
  },
  {
    "instruction": "",
    "input": "Tìm ID chủ đề, tên chủ đề và số lượng các khóa học có sẵn tương ứng cho từng môn học.",
    "output": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id"
  },
  {
    "instruction": "",
    "input": "ID chủ đề, tên chủ đề và số lượng các khóa học có sẵn cho mỗi môn học là gì?",
    "output": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id"
  },
  {
    "instruction": "",
    "input": "Tìm ID chủ đề, tên của chủ đề và số lượng khóa học tương ứng cho từng môn học và sắp xếp theo số lượng khóa học theo thứ tự tăng dần.",
    "output": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID chủ đề, tên của chủ đề và số lượng khóa học có sẵn cho từng môn học theo thứ tự tăng dần của số lượng khóa học.",
    "output": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC"
  },
  {
    "instruction": "",
    "input": "Ngày đăng ký khóa học có tên là \"Tây Ban Nha\" là gì?",
    "output": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Spanish\""
  },
  {
    "instruction": "",
    "input": "Tìm ngày ghi danh của khóa học \"Tây Ban Nha\".",
    "output": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Spanish\""
  },
  {
    "instruction": "",
    "input": "Tên của khóa học có nhiều tuyển sinh nhất là gì?",
    "output": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Khóa học nào được ghi danh bởi nhiều sinh viên nhất?Cho tôi tên khóa học.",
    "output": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của các khóa học có chính xác 1 tuyển sinh sinh viên là gì?",
    "output": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các khóa học chỉ có một sinh viên tuyển sinh.",
    "output": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Các mô tả và tên của các khóa học có tuyển sinh sinh viên lớn hơn 2 là gì?",
    "output": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Trả lại các mô tả và tên của các khóa học có nhiều hơn hai sinh viên đăng ký.",
    "output": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Tên của mỗi khóa học là gì và số lượng đăng ký học sinh tương ứng là gì?",
    "output": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và số lượng sinh viên đăng ký cho mỗi khóa học.",
    "output": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name"
  },
  {
    "instruction": "",
    "input": "Ngày đăng ký của tất cả các bài kiểm tra có kết quả là \"vượt qua\" là gì?",
    "output": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Pass\""
  },
  {
    "instruction": "",
    "input": "Tìm ngày đăng ký cho tất cả các bài kiểm tra có kết quả \"vượt qua\".",
    "output": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Pass\""
  },
  {
    "instruction": "",
    "input": "Ngày hoàn thành của tất cả các bài kiểm tra có kết quả là \"thất bại\" là gì?",
    "output": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Fail\""
  },
  {
    "instruction": "",
    "input": "Trả về ngày hoàn thành cho tất cả các bài kiểm tra có kết quả \"thất bại\".",
    "output": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Fail\""
  },
  {
    "instruction": "",
    "input": "Liệt kê các ngày đăng ký và hoàn thành học sinh với tên cá nhân \"Karson\".",
    "output": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\""
  },
  {
    "instruction": "",
    "input": "Vào ngày nào học sinh có tên cá nhân là \"Karson\" đăng ký và hoàn thành các khóa học?",
    "output": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\""
  },
  {
    "instruction": "",
    "input": "Liệt kê các ngày đăng ký và hoàn thành học sinh với tên gia đình \"Zieme\" và tên cá nhân \"Bernie\".",
    "output": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\""
  },
  {
    "instruction": "",
    "input": "Vào ngày nào học sinh có tên gia đình \"Zieme\" và tên cá nhân \"Bernie\" đăng ký và hoàn thành các khóa học?",
    "output": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\""
  },
  {
    "instruction": "",
    "input": "Tìm id sinh viên và tên đăng nhập của học sinh với số lượng đăng ký khóa học nhất",
    "output": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID sinh viên và tên đăng nhập của học sinh được ghi danh vào các khóa học nhất là gì?",
    "output": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID sinh viên và tên cá nhân của học sinh với ít nhất hai số đăng ký.",
    "output": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Học sinh nào được ghi danh vào ít nhất hai khóa học?Cho tôi ID sinh viên và tên cá nhân.",
    "output": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tìm ID sinh viên và tên đệm cho tất cả các sinh viên có tối đa hai số đăng ký.",
    "output": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2"
  },
  {
    "instruction": "",
    "input": "ID sinh viên và tên đệm của các sinh viên đã đăng ký nhiều nhất là gì?",
    "output": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2"
  },
  {
    "instruction": "",
    "input": "Tìm tên cá nhân của học sinh không đăng ký vào bất kỳ khóa học nào.",
    "output": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id"
  },
  {
    "instruction": "",
    "input": "Học sinh nào không đăng ký vào bất kỳ khóa học nào?Tìm tên cá nhân của họ.",
    "output": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên không có bất kỳ ghi danh khóa học?",
    "output": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng sinh viên không đăng ký vào bất kỳ khóa học nào.",
    "output": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)"
  },
  {
    "instruction": "",
    "input": "Tìm tên đăng nhập phổ biến của các tác giả và sinh viên khóa học.",
    "output": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students"
  },
  {
    "instruction": "",
    "input": "Tên đăng nhập được sử dụng cả bởi một số tác giả khóa học và một số sinh viên là gì?",
    "output": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students"
  },
  {
    "instruction": "",
    "input": "Tìm tên cá nhân chung của các tác giả và sinh viên khóa học.",
    "output": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students"
  },
  {
    "instruction": "",
    "input": "Tên cá nhân được sử dụng cả bởi một số tác giả khóa học và một số sinh viên là gì?",
    "output": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students"
  },
  {
    "instruction": "",
    "input": "Khiếu nại nào gây ra nhiều hơn 2 khu định cư hoặc có giá trị yêu cầu tối đa?Liệt kê ngày yêu cầu được đưa ra và ID yêu cầu.",
    "output": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )"
  },
  {
    "instruction": "",
    "input": "Tìm các yêu cầu dẫn đến nhiều hơn hai khu định cư hoặc có giá trị yêu cầu tối đa.Đối với mỗi người trong số họ, trả lại ngày yêu cầu được đưa ra và ID của yêu cầu bồi thường.",
    "output": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )"
  },
  {
    "instruction": "",
    "input": "Khách hàng nào có ít nhất 2 chính sách nhưng không nộp bất kỳ khiếu nại nào?Liệt kê các chi tiết khách hàng và ID.",
    "output": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi chi tiết khách hàng và ID cho các khách hàng có hai hoặc nhiều chính sách nhưng không nộp bất kỳ khiếu nại nào.",
    "output": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id"
  },
  {
    "instruction": "",
    "input": "Liệt kê phương thức, ngày và số tiền của tất cả các khoản thanh toán, theo thứ tự tăng dần của ngày.",
    "output": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC"
  },
  {
    "instruction": "",
    "input": "Phương thức, ngày và số tiền của mỗi khoản thanh toán là gì?Sắp xếp danh sách theo thứ tự tăng dần của ngày.",
    "output": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC"
  },
  {
    "instruction": "",
    "input": "Trong số tất cả các khiếu nại, số tiền giải quyết của yêu cầu với số tiền yêu cầu lớn nhất là bao nhiêu?Liệt kê cả số tiền giải quyết và số tiền yêu cầu.",
    "output": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số tiền giải quyết của yêu cầu bồi thường với số tiền yêu cầu lớn nhất.Hiển thị cả số tiền giải quyết và số tiền yêu cầu.",
    "output": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trong số tất cả các khiếu nại, số tiền được yêu cầu trong khiếu nại với số tiền ít nhất được giải quyết là bao nhiêu?Liệt kê cả số tiền giải quyết và số tiền yêu cầu.",
    "output": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số tiền được yêu cầu trong yêu cầu với số tiền ít nhất được giải quyết.Hiển thị cả số tiền giải quyết và số tiền yêu cầu.",
    "output": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trong số tất cả các khiếu nại, những tuyên bố nào có số tiền được yêu cầu lớn hơn mức trung bình?Liệt kê ngày yêu cầu được đưa ra và ngày được giải quyết.",
    "output": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi ngày yêu cầu, ngày giải quyết cho tất cả các khiếu nại có số tiền được yêu cầu lớn hơn mức trung bình.",
    "output": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )"
  },
  {
    "instruction": "",
    "input": "Trong số tất cả các khiếu nại, những khu định cư nào có số tiền được yêu cầu không hơn mức trung bình?Liệt kê ngày bắt đầu yêu cầu.",
    "output": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )"
  },
  {
    "instruction": "",
    "input": "Trả lại ngày bắt đầu yêu cầu cho các yêu cầu có số tiền được yêu cầu không nhiều hơn mức trung bình",
    "output": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khu định cư mỗi yêu cầu tương ứng với?Liệt kê ID yêu cầu và số lượng các khu định cư.",
    "output": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các khu định cư mỗi yêu cầu tương ứng với.Hiển thị số cùng với ID yêu cầu.",
    "output": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id"
  },
  {
    "instruction": "",
    "input": "Yêu cầu nào phát sinh số lượng lớn các khu định cư nhất?Liệt kê ID yêu cầu, ngày yêu cầu được thực hiện và số.",
    "output": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID yêu cầu và ngày yêu cầu bồi thường phát sinh số lượng giải quyết nhiều nhất.Cũng cho tôi biết số đếm.",
    "output": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khu định cư đã được thực hiện trên yêu cầu bồi thường với ngày giải quyết yêu cầu gần đây nhất?Liệt kê số và ID yêu cầu.",
    "output": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID yêu cầu và số lượng các khu định cư được thực hiện cho yêu cầu bồi thường với ngày giải quyết gần đây nhất.",
    "output": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trong tất cả các khiếu nại, ngày sớm nhất khi có bất kỳ yêu cầu nào được đưa ra?",
    "output": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết ngày khi yêu cầu đầu tiên được đưa ra.",
    "output": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tổng số lượng giải quyết được thực hiện cho tất cả các khu định cư là bao nhiêu?",
    "output": "SELECT sum(Amount_Settled) FROM Settlements"
  },
  {
    "instruction": "",
    "input": "Tính tổng số lượng giải quyết trên tất cả các khu định cư.",
    "output": "SELECT sum(Amount_Settled) FROM Settlements"
  },
  {
    "instruction": "",
    "input": "Ai là khách hàng có nhiều hơn 1 chính sách?Liệt kê các chi tiết khách hàng và ID.",
    "output": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm chi tiết khách hàng và ID cho khách hàng có nhiều chính sách.",
    "output": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Ngày yêu cầu và ngày giải quyết của tất cả các khu định cư là gì?",
    "output": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết ngày yêu cầu và ngày giải quyết cho mỗi trường hợp giải quyết.",
    "output": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements"
  },
  {
    "instruction": "",
    "input": "Phương thức thanh toán phổ biến nhất là gì?",
    "output": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Phương thức thanh toán nào được sử dụng thường xuyên nhất?",
    "output": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Với loại phương thức thanh toán nào là số lượng thanh toán ít nhất được xử lý?",
    "output": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Phương thức thanh toán được sử dụng ít nhất là thường xuyên?",
    "output": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền thanh toán là bao nhiêu?",
    "output": "SELECT sum(Amount_Payment) FROM Payments"
  },
  {
    "instruction": "",
    "input": "Tính tổng số tiền thanh toán được xử lý.",
    "output": "SELECT sum(Amount_Payment) FROM Payments"
  },
  {
    "instruction": "",
    "input": "Tất cả các chi tiết riêng biệt của khách hàng là gì?",
    "output": "SELECT DISTINCT customer_details FROM Customers"
  },
  {
    "instruction": "",
    "input": "Trả lại các chi tiết khách hàng riêng biệt.",
    "output": "SELECT DISTINCT customer_details FROM Customers"
  },
  {
    "instruction": "",
    "input": "Loại chính sách nào được chọn bởi hầu hết các khách hàng?",
    "output": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm loại chính sách mà nhiều khách hàng chọn nhất.",
    "output": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu khu định cư?",
    "output": "SELECT count(*) FROM Settlements"
  },
  {
    "instruction": "",
    "input": "Đếm tổng số khu định cư được thực hiện.",
    "output": "SELECT count(*) FROM Settlements"
  },
  {
    "instruction": "",
    "input": "Những khoản thanh toán nào được xử lý với Visa?Liệt kê ID thanh toán, ngày và số tiền.",
    "output": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi ID thanh toán, ngày và số tiền cho tất cả các khoản thanh toán được xử lý bằng Visa.",
    "output": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'"
  },
  {
    "instruction": "",
    "input": "Liệt kê các chi tiết của các khách hàng không có bất kỳ chính sách nào.",
    "output": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id"
  },
  {
    "instruction": "",
    "input": "Những khách hàng nào không có chính sách nào?Tìm các chi tiết của những khách hàng này.",
    "output": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id"
  },
  {
    "instruction": "",
    "input": "Liệt kê ngày yêu cầu được đưa ra, ngày được giải quyết và số tiền được giải quyết cho tất cả các khiếu nại có chính xác một giải quyết.",
    "output": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Những tuyên bố nào có chính xác một giải quyết?Đối với mỗi người, hãy cho tôi biết ngày yêu cầu được đưa ra, ngày nó được giải quyết và số tiền được giải quyết.",
    "output": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số lượng yêu cầu của tất cả các khiếu nại.",
    "output": "SELECT sum(Amount_Claimed) FROM Claims"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền được yêu cầu tổng hợp trên tất cả các khiếu nại là bao nhiêu?",
    "output": "SELECT sum(Amount_Claimed) FROM Claims"
  },
  {
    "instruction": "",
    "input": "Bộ phận nào có số lượng nhân viên lớn nhất?",
    "output": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tìm bộ phận với nhiều nhân viên nhất.",
    "output": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "ID nhân viên của người đứng đầu có bộ phận nhân viên ít nhất là gì?",
    "output": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết ID nhân viên của người đứng đầu bộ phận với ít nhân viên nhất.",
    "output": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tên và vị trí của người đứng đầu có bộ phận có số lượng nhân viên ít nhất là gì?",
    "output": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tìm tên và vị trí của người đứng đầu bộ phận với những nhân viên ít nhất.",
    "output": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tên của những bệnh nhân đã hẹn một cuộc hẹn là gì?",
    "output": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của những bệnh nhân đã hẹn.",
    "output": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn"
  },
  {
    "instruction": "",
    "input": "Tên và số điện thoại của bệnh nhân có nhiều hơn một cuộc hẹn là gì?",
    "output": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Bệnh nhân nào đã thực hiện nhiều hơn một cuộc hẹn?Cho tôi biết tên và số điện thoại của những bệnh nhân này.",
    "output": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm ID của cuộc hẹn với ngày bắt đầu gần đây nhất?",
    "output": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của cuộc hẹn bắt đầu gần đây nhất là gì?",
    "output": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các bác sĩ đã lấy một số cuộc hẹn.",
    "output": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bác sĩ đã tham gia các cuộc hẹn là gì.",
    "output": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các bác sĩ không bao giờ có cuộc hẹn.",
    "output": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"
  },
  {
    "instruction": "",
    "input": "Những bác sĩ nào chưa bao giờ lấy bất kỳ cuộc hẹn?Tìm tên của họ.",
    "output": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các bác sĩ và tên của các khoa liên kết chính của họ.",
    "output": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1"
  },
  {
    "instruction": "",
    "input": "Tên và chủ yếu tên khoa liên kết của mỗi bác sĩ là gì?",
    "output": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1"
  },
  {
    "instruction": "",
    "input": "Tên của bệnh nhân đã thực hiện cuộc hẹn gần đây nhất là gì?",
    "output": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của bệnh nhân đã hẹn với ngày bắt đầu gần đây nhất.",
    "output": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bệnh nhân ở trong phòng 112?",
    "output": "SELECT count(patient) FROM stay WHERE room  =  112"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng bệnh nhân ở trong phòng 112.",
    "output": "SELECT count(patient) FROM stay WHERE room  =  112"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu đơn thuốc của bệnh nhân được thực hiện bởi bác sĩ John Dorian?",
    "output": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng bác sĩ kê đơn của bệnh nhân John Dorian thực hiện.",
    "output": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\""
  },
  {
    "instruction": "",
    "input": "Tìm tên thuốc được sử dụng trên bệnh nhân ở trong phòng 111?",
    "output": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111"
  },
  {
    "instruction": "",
    "input": "Tên của thuốc được sử dụng cho bệnh nhân ở phòng 111 là gì?",
    "output": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111"
  },
  {
    "instruction": "",
    "input": "Tìm bệnh nhân gần đây nhất ở phòng 111.",
    "output": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của bệnh nhân ở trong phòng 111 gần đây nhất là gì?",
    "output": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của y tá có nhiều cuộc hẹn nhất là gì?",
    "output": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của y tá có số lượng cuộc hẹn lớn nhất.",
    "output": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mỗi bác sĩ chăm sóc bao nhiêu bệnh nhân?Liệt kê tên và số bệnh nhân của họ họ chăm sóc.",
    "output": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của mỗi bác sĩ và số bệnh nhân mà anh ấy hoặc cô ấy điều trị.",
    "output": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các bác sĩ chịu trách nhiệm của nhiều bệnh nhân.",
    "output": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Những bác sĩ nào chịu trách nhiệm của nhiều bệnh nhân?Cho tôi tên của họ.",
    "output": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng phòng nằm trên mỗi tầng khối.",
    "output": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor"
  },
  {
    "instruction": "",
    "input": "Mỗi tầng có bao nhiêu phòng?",
    "output": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng phòng cho mã khối khác nhau?",
    "output": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phòng được đặt cho mỗi mã khối?",
    "output": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode"
  },
  {
    "instruction": "",
    "input": "Các mã khối độc đáo có phòng có sẵn là gì?",
    "output": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết các mã khối riêng biệt nơi có sẵn một số phòng.",
    "output": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại phòng khác nhau?",
    "output": "SELECT count(DISTINCT roomtype) FROM room"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các loại phòng riêng biệt có sẵn.",
    "output": "SELECT count(DISTINCT roomtype) FROM room"
  },
  {
    "instruction": "",
    "input": "Tên của các bác sĩ kê toa luận án thuốc là gì?",
    "output": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các bác sĩ kê đơn luận văn là thuốc.",
    "output": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\""
  },
  {
    "instruction": "",
    "input": "Tìm tên và vị trí của các bác sĩ kê đơn một số loại thuốc có thương hiệu là X?",
    "output": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\""
  },
  {
    "instruction": "",
    "input": "Bác sĩ nào kê đơn thuốc của thương hiệu X?Hãy cho tôi biết tên và vị trí của các bác sĩ.",
    "output": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng thuốc quy định cho mỗi thương hiệu.",
    "output": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại thuốc được kê đơn cho mỗi thương hiệu?",
    "output": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các bác sĩ có tiêu đề vị trí chứa từ 'cao cấp'.",
    "output": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'"
  },
  {
    "instruction": "",
    "input": "Tên của các bác sĩ có 'cao cấp' trong danh hiệu của họ.",
    "output": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'"
  },
  {
    "instruction": "",
    "input": "Tìm bệnh nhân có điều trị gần đây nhất?",
    "output": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Bệnh nhân nào đang trải qua điều trị gần đây nhất?",
    "output": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các bệnh nhân được điều trị đang được điều trị và đang ở trong phòng 111.",
    "output": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111"
  },
  {
    "instruction": "",
    "input": "Tên của những bệnh nhân đang ở trong phòng 111 và được điều trị là gì?",
    "output": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các y tá riêng biệt được đặt hàng theo thứ tự bảng chữ cái?",
    "output": "SELECT DISTINCT name FROM nurse ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Danh sách theo thứ tự bảng chữ cái của tất cả các tên riêng biệt của các y tá là gì?",
    "output": "SELECT DISTINCT name FROM nurse ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các y tá đang điều trị điều trị.",
    "output": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID"
  },
  {
    "instruction": "",
    "input": "Những y tá phụ trách bệnh nhân đang điều trị?",
    "output": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các loại thuốc riêng biệt, được đặt hàng theo thứ tự bảng chữ cái.",
    "output": "SELECT DISTINCT name FROM medication ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Danh sách theo thứ tự bảng chữ cái của tất cả các loại thuốc riêng biệt là gì?",
    "output": "SELECT DISTINCT name FROM medication ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Tên của bác sĩ đã kê đơn liều cao nhất là gì?",
    "output": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm bác sĩ đã kê đơn liều cao nhất.Tên của anh ấy hoặc cô ấy là gì?",
    "output": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID nhân viên của các bác sĩ cùng với ID ID của các bộ phận liên kết chính của họ.",
    "output": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1"
  },
  {
    "instruction": "",
    "input": "ID nhân viên và ID nhân viên của mỗi bác sĩ là gì chủ yếu liên kết.",
    "output": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các phòng ban nơi một số bác sĩ chủ yếu liên kết với.",
    "output": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1"
  },
  {
    "instruction": "",
    "input": "Tên của các phòng ban có chủ yếu là bác sĩ liên kết.",
    "output": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1"
  },
  {
    "instruction": "",
    "input": "Những y tá đang gọi với Block Tầng 1 và mã khối 1?Cho tôi biết tên của họ.",
    "output": "SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1"
  },
  {
    "instruction": "",
    "input": "Tìm ID của các y tá đang gọi trong Block Tầng 1 và mã khối 1.",
    "output": "SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1"
  },
  {
    "instruction": "",
    "input": "Chi phí cao nhất, chi phí thấp nhất và chi phí thủ tục trung bình là gì?",
    "output": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết chi phí thủ tục cao nhất, thấp nhất và trung bình.",
    "output": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và chi phí của tất cả các thủ tục được sắp xếp theo chi phí từ mức cao nhất đến thấp nhất.",
    "output": "SELECT name ,  cost FROM procedures ORDER BY cost DESC"
  },
  {
    "instruction": "",
    "input": "Sắp xếp danh sách các tên và chi phí của tất cả các thủ tục theo thứ tự giảm giá của chi phí.",
    "output": "SELECT name ,  cost FROM procedures ORDER BY cost DESC"
  },
  {
    "instruction": "",
    "input": "Tìm ba thủ tục đắt nhất.",
    "output": "SELECT name FROM procedures ORDER BY cost LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Ba thủ tục tốn kém nhất là gì?",
    "output": "SELECT name FROM procedures ORDER BY cost LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tìm các bác sĩ được đào tạo trong một thủ tục có giá hơn 5000.",
    "output": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000"
  },
  {
    "instruction": "",
    "input": "Những bác sĩ nào được đào tạo về các thủ tục đắt hơn 5000?",
    "output": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000"
  },
  {
    "instruction": "",
    "input": "Tìm bác sĩ đã được đào tạo trong thủ tục đắt nhất?",
    "output": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mà bác sĩ đã được đào tạo về thủ tục có giá nhiều nhất.",
    "output": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Chi phí trung bình của các thủ tục mà bác sĩ John Wen đã được đào tạo là bao nhiêu?",
    "output": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
  },
  {
    "instruction": "",
    "input": "Tính giá trung bình của các thủ tục bác sĩ John Wen đã được đào tạo.",
    "output": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các thủ tục mà bác sĩ John Wen đã được đào tạo.",
    "output": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
  },
  {
    "instruction": "",
    "input": "Tên của các thủ tục bác sĩ John Wen đã được đào tạo là gì?",
    "output": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các thủ tục có giá hơn 1000 hoặc bác sĩ John Wen đã được đào tạo.",
    "output": "SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
  },
  {
    "instruction": "",
    "input": "Các thủ tục có giá hơn 1000 hoặc được bác sĩ John Wen chuyên dụng là gì?",
    "output": "SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các thủ tục có giá hơn 1000 nhưng bác sĩ John Wen không được đào tạo?",
    "output": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
  },
  {
    "instruction": "",
    "input": "Trong số các thủ tục có giá hơn 1000, không được bác sĩ John Wen chuyên dụng?",
    "output": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các thủ tục sao cho chi phí dưới 5000 và bác sĩ John Wen đã được đào tạo.",
    "output": "SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
  },
  {
    "instruction": "",
    "input": "Những thủ tục nào có giá dưới 5000 và John Wen là một bác sĩ được đào tạo?",
    "output": "SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các bác sĩ có liên kết với cả khoa phẫu thuật và tâm thần học.",
    "output": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Psychiatry'"
  },
  {
    "instruction": "",
    "input": "Những bác sĩ nào liên kết với cả khoa phẫu thuật và tâm thần học?Cho tôi biết tên của họ.",
    "output": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Psychiatry'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các bác sĩ có liên kết với phẫu thuật hoặc khoa tâm thần.",
    "output": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'"
  },
  {
    "instruction": "",
    "input": "Những bác sĩ nào liên kết với khoa phẫu thuật hoặc tâm thần?Cho tôi tên của họ.",
    "output": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những bệnh nhân không sử dụng thuốc của Procrastin-X.",
    "output": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X'"
  },
  {
    "instruction": "",
    "input": "Tên của những bệnh nhân không dùng thuốc của Procrastin-X.",
    "output": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng bệnh nhân không sử dụng thuốc của Procrastin-X.",
    "output": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bệnh nhân không sử dụng Procrastin-X làm thuốc?",
    "output": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cuộc hẹn?",
    "output": "SELECT count(*) FROM appointment"
  },
  {
    "instruction": "",
    "input": "Đếm tổng cộng bao nhiêu cuộc hẹn đã được thực hiện.",
    "output": "SELECT count(*) FROM appointment"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các y tá đang gọi.",
    "output": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse"
  },
  {
    "instruction": "",
    "input": "Tên riêng biệt của các y tá khi gọi là gì?",
    "output": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tàu?",
    "output": "SELECT count(*) FROM ship"
  },
  {
    "instruction": "",
    "input": "Số lượng tàu là bao nhiêu?",
    "output": "SELECT count(*) FROM ship"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các tàu theo thứ tự tăng dần của trọng tải.",
    "output": "SELECT Name FROM ship ORDER BY Tonnage ASC"
  },
  {
    "instruction": "",
    "input": "Tên của các tàu được đặt hàng bởi trọng tải tăng dần là gì?",
    "output": "SELECT Name FROM ship ORDER BY Tonnage ASC"
  },
  {
    "instruction": "",
    "input": "Loại và quốc tịch của tàu là gì?",
    "output": "SELECT TYPE ,  Nationality FROM ship"
  },
  {
    "instruction": "",
    "input": "Các loại và quốc tịch của mỗi con tàu là gì?",
    "output": "SELECT TYPE ,  Nationality FROM ship"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của những con tàu có quốc tịch không phải là \"Hoa Kỳ\".",
    "output": "SELECT Name FROM ship WHERE Nationality != \"United States\""
  },
  {
    "instruction": "",
    "input": "Tên của những con tàu không đến từ Hoa Kỳ là gì?",
    "output": "SELECT Name FROM ship WHERE Nationality != \"United States\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của những con tàu có quốc tịch là Hoa Kỳ hoặc Vương quốc Anh.",
    "output": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\""
  },
  {
    "instruction": "",
    "input": "Tên của những con tàu từ Mỹ hoặc Vương quốc Anh là gì?",
    "output": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\""
  },
  {
    "instruction": "",
    "input": "Tên của con tàu với trọng tải lớn nhất là gì?",
    "output": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Con tàu với số lượng trọng tải lớn nhất được gọi là gì?",
    "output": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các loại tàu khác nhau và số lượng tàu của từng loại.",
    "output": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi loại, có bao nhiêu tàu?",
    "output": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị loại tàu phổ biến nhất.",
    "output": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại tàu phổ biến nhất là gì?",
    "output": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các quốc gia có nhiều hơn hai tàu.",
    "output": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Các quốc gia có nhiều hơn hai tàu là gì?",
    "output": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị các loại tàu khác nhau và trọng tải trung bình của các tàu của từng loại.",
    "output": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi loại, trọng tải trung bình là gì?",
    "output": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã và số phận của các nhiệm vụ, và tên của những con tàu liên quan.",
    "output": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID"
  },
  {
    "instruction": "",
    "input": "Các mã nhiệm vụ, số phận và tên của các tàu có liên quan là gì?",
    "output": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của những con tàu liên quan đến một nhiệm vụ được đưa ra sau năm 1928.",
    "output": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928"
  },
  {
    "instruction": "",
    "input": "Tên của những con tàu có liên quan đến một nhiệm vụ được đưa ra sau năm 1928 là gì?",
    "output": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928"
  },
  {
    "instruction": "",
    "input": "Hiển thị số phận khác biệt của các nhiệm vụ liên quan đến các tàu có quốc tịch \"Hoa Kỳ\"",
    "output": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\""
  },
  {
    "instruction": "",
    "input": "Số phận khác nhau của nhiệm vụ liên quan đến các tàu từ Hoa Kỳ là gì?",
    "output": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của những con tàu không liên quan đến bất kỳ nhiệm vụ nào",
    "output": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)"
  },
  {
    "instruction": "",
    "input": "Tên của các tàu không liên quan đến bất kỳ nhiệm vụ nào?",
    "output": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các loại tàu có cả hai tàu có trọng tải lớn hơn 6000 và tàu có trọng tải nhỏ hơn 4000.",
    "output": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000"
  },
  {
    "instruction": "",
    "input": "Các loại tàu có cả hai shiip với trọng tải hơn 6000 và những con có trọng tải dưới 4000 là gì?",
    "output": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng học sinh trong tổng số.",
    "output": "SELECT count(*) FROM list"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên ở đó?",
    "output": "SELECT count(*) FROM list"
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của học sinh học trong phòng 111.",
    "output": "SELECT lastname FROM list WHERE classroom  =  111"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của học sinh trong phòng 111 là gì?",
    "output": "SELECT lastname FROM list WHERE classroom  =  111"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của học sinh học trong phòng 108.",
    "output": "SELECT firstname FROM list WHERE classroom  =  108"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của học sinh trong phòng 108 là gì?",
    "output": "SELECT firstname FROM list WHERE classroom  =  108"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của học sinh học ở phòng 107 là gì?",
    "output": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên đầu tiên của tất cả các sinh viên trong phòng 107.",
    "output": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi lớp học báo cáo lớp được dạy trong đó.Chỉ báo cáo số lớp và số lớp.",
    "output": "SELECT DISTINCT classroom ,  grade FROM list"
  },
  {
    "instruction": "",
    "input": "Số lớp và số lớp của mỗi lớp trong danh sách là gì?",
    "output": "SELECT DISTINCT classroom ,  grade FROM list"
  },
  {
    "instruction": "",
    "input": "Lớp nào đang học trong lớp 103?",
    "output": "SELECT DISTINCT grade FROM list WHERE classroom  =  103"
  },
  {
    "instruction": "",
    "input": "Tìm các lớp được dạy trong lớp học 103.",
    "output": "SELECT DISTINCT grade FROM list WHERE classroom  =  103"
  },
  {
    "instruction": "",
    "input": "Tìm lớp học trong phòng 105.",
    "output": "SELECT DISTINCT grade FROM list WHERE classroom  =  105"
  },
  {
    "instruction": "",
    "input": "Lớp nào đang học trong phòng 105?",
    "output": "SELECT DISTINCT grade FROM list WHERE classroom  =  105"
  },
  {
    "instruction": "",
    "input": "Những lớp học nào được sử dụng bởi lớp 4?",
    "output": "SELECT DISTINCT classroom FROM list WHERE grade  =  4"
  },
  {
    "instruction": "",
    "input": "Tìm các lớp học trong đó lớp 4 đang học.",
    "output": "SELECT DISTINCT classroom FROM list WHERE grade  =  4"
  },
  {
    "instruction": "",
    "input": "Những lớp học nào được sử dụng bởi Lớp 5?",
    "output": "SELECT DISTINCT classroom FROM list WHERE grade  =  5"
  },
  {
    "instruction": "",
    "input": "Cho tôi xem các lớp học lớp 5 đang sử dụng.",
    "output": "SELECT DISTINCT classroom FROM list WHERE grade  =  5"
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của các giáo viên dạy lớp năm.",
    "output": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của các giáo viên dạy lớp 5 là gì?",
    "output": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của các giáo viên dạy lớp một.",
    "output": "SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  1"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của các giáo viên dạy lớp 1 là gì?",
    "output": "SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  1"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của tất cả các giáo viên dạy trong lớp 110.",
    "output": "SELECT firstname FROM teachers WHERE classroom  =  110"
  },
  {
    "instruction": "",
    "input": "Giáo viên nào dạy trong lớp 110?Cho tôi biết tên của họ.",
    "output": "SELECT firstname FROM teachers WHERE classroom  =  110"
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của giáo viên giảng dạy trong lớp 109.",
    "output": "SELECT lastname FROM teachers WHERE classroom  =  109"
  },
  {
    "instruction": "",
    "input": "Giáo viên nào dạy trong lớp 109?Cho tôi tên cuối cùng của họ.",
    "output": "SELECT lastname FROM teachers WHERE classroom  =  109"
  },
  {
    "instruction": "",
    "input": "Báo cáo tên và họ của tất cả các giáo viên.",
    "output": "SELECT DISTINCT firstname ,  lastname FROM teachers"
  },
  {
    "instruction": "",
    "input": "Tên và họ của tất cả các giáo viên là gì?",
    "output": "SELECT DISTINCT firstname ,  lastname FROM teachers"
  },
  {
    "instruction": "",
    "input": "Báo cáo tên và họ của tất cả các sinh viên.",
    "output": "SELECT DISTINCT firstname ,  lastname FROM list"
  },
  {
    "instruction": "",
    "input": "Hiển thị họ và họ của mỗi học sinh.",
    "output": "SELECT DISTINCT firstname ,  lastname FROM list"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các sinh viên được dạy bởi Otha Moyer.Đầu ra tên đầu tiên và cuối cùng của các sinh viên.",
    "output": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\""
  },
  {
    "instruction": "",
    "input": "Học sinh nào học theo giáo viên tên là Otha Moyer?Hãy cho tôi tên đầu tiên và cuối cùng của các sinh viên.",
    "output": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các sinh viên được dạy bởi Marrotte Kirk.Đầu ra đầu tiên và họ của học sinh.",
    "output": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"MARROTTE\" AND T2.lastname  =  \"KIRK\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của các sinh viên được dạy bởi Kirk Kirk được dạy là gì?",
    "output": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"MARROTTE\" AND T2.lastname  =  \"KIRK\""
  },
  {
    "instruction": "",
    "input": "Tìm họ và họ của tất cả các giáo viên dạy Evelina Bromley.",
    "output": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\""
  },
  {
    "instruction": "",
    "input": "Giáo viên nào dạy học sinh tên Evelina Bromley?Hãy cho tôi họ và họ của các giáo viên.",
    "output": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\""
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của tất cả các giáo viên dạy Gell Tami.",
    "output": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"GELL\" AND T1.lastname  =  \"TAMI\""
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của các giáo viên dạy học sinh tên là Gell Tami là gì?",
    "output": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"GELL\" AND T1.lastname  =  \"TAMI\""
  },
  {
    "instruction": "",
    "input": "Loria ondersma dạy có bao nhiêu học sinh?",
    "output": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"LORIA\" AND T2.lastname  =  \"ONDERSMA\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng học sinh mà giáo viên Loria Ondersma dạy.",
    "output": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"LORIA\" AND T2.lastname  =  \"ONDERSMA\""
  },
  {
    "instruction": "",
    "input": "Kawa Gordon dạy có bao nhiêu học sinh?",
    "output": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"KAWA\" AND T2.lastname  =  \"GORDON\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng học sinh được dạy bởi giáo viên Kawa Gordon.",
    "output": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"KAWA\" AND T2.lastname  =  \"GORDON\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng học sinh được dạy bằng cách tarring Leia.",
    "output": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"TARRING\" AND T2.lastname  =  \"LEIA\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh được dạy bởi giáo viên Tarring Leia?",
    "output": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"TARRING\" AND T2.lastname  =  \"LEIA\""
  },
  {
    "instruction": "",
    "input": "Học sinh tên Chrissy Nabozny có bao nhiêu giáo viên?",
    "output": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"CHRISSY\" AND T1.lastname  =  \"NABOZNY\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng giáo viên dạy học sinh tên là Chrissy Nabozny.",
    "output": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"CHRISSY\" AND T1.lastname  =  \"NABOZNY\""
  },
  {
    "instruction": "",
    "input": "Học sinh tên là Madlock Ray có bao nhiêu giáo viên?",
    "output": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"MADLOCK\" AND T1.lastname  =  \"RAY\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng giáo viên dạy học sinh tên là Madlock Ray.",
    "output": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"MADLOCK\" AND T1.lastname  =  \"RAY\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả học sinh lớp một không được dạy bởi Otha Moyer.Báo cáo họ và họ của họ.",
    "output": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của các học sinh lớp một không được dạy bởi giáo viên Otha Moyer là gì?",
    "output": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\""
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của các học sinh lớp ba không được dạy bởi Covin Jerome.",
    "output": "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"COVIN\" AND T2.lastname != \"JEROME\""
  },
  {
    "instruction": "",
    "input": "Học sinh lớp ba không được dạy bởi giáo viên Covin Jerome?Cho tôi tên cuối cùng của các sinh viên.",
    "output": "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"COVIN\" AND T2.lastname != \"JEROME\""
  },
  {
    "instruction": "",
    "input": "Đối với mỗi lớp, báo cáo lớp, số lớp học được dạy và tổng số học sinh trong lớp.",
    "output": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi lớp, trả lại số lớp, số lượng lớp học được sử dụng cho lớp và tổng số học sinh đăng ký vào lớp.",
    "output": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi lớp học, báo cáo số lớp học và số lượng lớp sử dụng nó.",
    "output": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi lớp học, hãy hiển thị số lớp học và đếm số lượng điểm riêng biệt sử dụng phòng.",
    "output": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom"
  },
  {
    "instruction": "",
    "input": "Lớp học nào có nhiều sinh viên nhất?",
    "output": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm lớp học mà nhiều sinh viên sử dụng nhất.",
    "output": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Báo cáo số lượng học sinh trong mỗi lớp học.",
    "output": "SELECT classroom ,  count(*) FROM list GROUP BY classroom"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi lớp học, hãy hiển thị số lớp học và tìm thấy có bao nhiêu học sinh đang sử dụng nó.",
    "output": "SELECT classroom ,  count(*) FROM list GROUP BY classroom"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi lớp 0, báo cáo tổng số học sinh.",
    "output": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi lớp 0, hãy trả lại số lớp và số lượng học sinh.",
    "output": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom"
  },
  {
    "instruction": "",
    "input": "Báo cáo tổng số học sinh cho mỗi lớp học lớp bốn.",
    "output": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi lớp học lớp bốn, hãy hiển thị số lớp học và tổng số học sinh sử dụng nó.",
    "output": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom"
  },
  {
    "instruction": "",
    "input": "Tìm tên của giáo viên dạy số lượng học sinh lớn nhất.",
    "output": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Giáo viên nào dạy nhiều học sinh nhất?Cho tôi tên và họ của giáo viên.",
    "output": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng học sinh trong một lớp học.",
    "output": "SELECT count(*) ,  classroom FROM list GROUP BY classroom"
  },
  {
    "instruction": "",
    "input": "Một học sinh có bao nhiêu học sinh?",
    "output": "SELECT count(*) ,  classroom FROM list GROUP BY classroom"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu công ty có trụ sở tại Mỹ?",
    "output": "SELECT count(*) FROM company WHERE Headquarters  =  'USA'"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các công ty bằng cách tăng số lượng bán hàng.",
    "output": "SELECT Name FROM company ORDER BY Sales_in_Billion ASC"
  },
  {
    "instruction": "",
    "input": "Trụ sở chính và ngành công nghiệp của tất cả các công ty là gì?",
    "output": "SELECT Headquarters ,  Industry FROM company"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các công ty trong ngành ngân hàng hoặc bán lẻ?",
    "output": "SELECT Name FROM company WHERE Industry  =  \"Banking\" OR Industry  =  \"Retailing\""
  },
  {
    "instruction": "",
    "input": "Giá trị thị trường tối đa và tối thiểu của các công ty là gì?",
    "output": "SELECT max(Market_Value_in_Billion) ,  min(Market_Value_in_Billion) FROM company"
  },
  {
    "instruction": "",
    "input": "Trụ sở chính của công ty có doanh số lớn nhất là gì?",
    "output": "SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các trụ sở khác nhau và số lượng các công ty tại mỗi trụ sở chính.",
    "output": "SELECT Headquarters ,  COUNT(*) FROM company GROUP BY Headquarters"
  },
  {
    "instruction": "",
    "input": "Hiển thị trụ sở phổ biến nhất cho các công ty.",
    "output": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị trụ sở có ít nhất hai công ty.",
    "output": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị trụ sở có cả hai công ty trong ngành ngân hàng và công ty trong ngành dầu khí.",
    "output": "SELECT Headquarters FROM company WHERE Industry  =  \"Banking\" INTERSECT SELECT Headquarters FROM company WHERE Industry  =  \"Oil and gas\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các công ty và nhân viên.",
    "output": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các công ty và nhân viên theo thứ tự giảm dần số năm làm việc cho nhân viên đó.",
    "output": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID ORDER BY T1.Year_working"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của nhân viên làm việc cho các công ty có doanh số lớn hơn 200.",
    "output": "SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID WHERE T3.Sales_in_Billion  >  200"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các công ty và số lượng nhân viên họ có",
    "output": "SELECT T3.Name ,  COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID GROUP BY T3.Name"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của những người không được sử dụng bởi bất kỳ công ty nào",
    "output": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM employment)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các công ty có hơn 200 doanh số theo thứ tự giảm giá và lợi nhuận.",
    "output": "SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bộ phim?",
    "output": "SELECT count(*) FROM film"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng phim.",
    "output": "SELECT count(*) FROM film"
  },
  {
    "instruction": "",
    "input": "Liệt kê các đạo diễn riêng biệt của tất cả các bộ phim.",
    "output": "SELECT DISTINCT Director FROM film"
  },
  {
    "instruction": "",
    "input": "Các đạo diễn phim khác nhau là gì?",
    "output": "SELECT DISTINCT Director FROM film"
  },
  {
    "instruction": "",
    "input": "Tổng doanh số bán vé trung bình tính bằng đô la của phim là bao nhiêu?",
    "output": "SELECT avg(Gross_in_dollar) FROM film"
  },
  {
    "instruction": "",
    "input": "Trả lại tổng doanh thu trung bình bằng đô la trên tất cả các bộ phim.",
    "output": "SELECT avg(Gross_in_dollar) FROM film"
  },
  {
    "instruction": "",
    "input": "Các ước tính thấp và cao của thị trường phim là gì?",
    "output": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation"
  },
  {
    "instruction": "",
    "input": "Trả lại ước tính thấp và cao cho tất cả các thị trường phim.",
    "output": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation"
  },
  {
    "instruction": "",
    "input": "Các loại ước tính thị trường phim trong năm 1995 là gì?",
    "output": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995"
  },
  {
    "instruction": "",
    "input": "Trả lại các loại ước tính thị trường phim vào năm 1995.",
    "output": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995"
  },
  {
    "instruction": "",
    "input": "Số lượng thành phố tối đa và tối thiểu trong tất cả các thị trường là gì.",
    "output": "SELECT max(Number_cities) ,  min(Number_cities) FROM market"
  },
  {
    "instruction": "",
    "input": "Trả lại số lượng thành phố tối đa và tối thiểu trên tất cả các thị trường.",
    "output": "SELECT max(Number_cities) ,  min(Number_cities) FROM market"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thị trường có số lượng thành phố nhỏ hơn 300?",
    "output": "SELECT count(*) FROM market WHERE Number_cities  <  300"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng thị trường có một số thành phố thấp hơn 300.",
    "output": "SELECT count(*) FROM market WHERE Number_cities  <  300"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các quốc gia thị trường theo thứ tự bảng chữ cái tăng dần.",
    "output": "SELECT Country FROM market ORDER BY Country ASC"
  },
  {
    "instruction": "",
    "input": "Các quốc gia cho mỗi thị trường, được đặt hàng theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT Country FROM market ORDER BY Country ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các quốc gia thị trường theo thứ tự giảm dần của số lượng thành phố.",
    "output": "SELECT Country FROM market ORDER BY Number_cities DESC"
  },
  {
    "instruction": "",
    "input": "Các quốc gia cho mỗi thị trường được đặt hàng bằng cách giảm số lượng thành phố là gì?",
    "output": "SELECT Country FROM market ORDER BY Number_cities DESC"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các tiêu đề của phim và các loại ước tính thị trường.",
    "output": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của phim và các loại ước tính thị trường tương ứng là gì?",
    "output": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị đạo diễn riêng biệt của các bộ phim với ước tính thị trường vào năm 1995.",
    "output": "SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995"
  },
  {
    "instruction": "",
    "input": "Ai là đạo diễn khác nhau của các bộ phim có ước tính thị trường vào năm 1995?",
    "output": "SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995"
  },
  {
    "instruction": "",
    "input": "Số lượng trung bình của các thành phố thị trường với ước tính thị trường phim thấp lớn hơn 10000 là bao nhiêu?",
    "output": "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000"
  },
  {
    "instruction": "",
    "input": "Cung cấp số lượng thành phố trung bình trong các thị trường có ước tính thị trường thấp lớn hơn 10000?",
    "output": "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000"
  },
  {
    "instruction": "",
    "input": "Vui lòng liệt kê các quốc gia và năm ước tính thị trường phim.",
    "output": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID"
  },
  {
    "instruction": "",
    "input": "Các quốc gia thị trường và những năm ước tính thị trường tương ứng của họ là gì?",
    "output": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID"
  },
  {
    "instruction": "",
    "input": "Vui lòng liệt kê các năm ước tính thị trường phim khi thị trường nằm ở \"Nhật Bản\" theo thứ tự giảm dần.",
    "output": "SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  \"Japan\" ORDER BY T1.Year DESC"
  },
  {
    "instruction": "",
    "input": "Những năm ước tính thị trường phim cho thị trường Nhật Bản là gì, được đặt hàng theo năm là gì?",
    "output": "SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  \"Japan\" ORDER BY T1.Year DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê các hãng phim của mỗi bộ phim và số lượng phim được sản xuất bởi hãng phim đó.",
    "output": "SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio"
  },
  {
    "instruction": "",
    "input": "Làm thế nào các bộ phim được sản xuất bởi mỗi studio?",
    "output": "SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của studio phim có số lượng phim nhiều nhất.",
    "output": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của hãng phim tạo ra nhiều bộ phim nhất là gì?",
    "output": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các hãng phim có ít nhất hai bộ phim.",
    "output": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tên của các hãng phim đã làm hai hoặc nhiều bộ phim là gì?",
    "output": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tiêu đề của các bộ phim không có bất kỳ ước tính thị trường.",
    "output": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của các bộ phim không có ước tính thị trường phim là gì?",
    "output": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các hãng phim đã sản xuất các bộ phim với đạo diễn \"Nicholas Meyer\" và \"Walter Hill\".",
    "output": "SELECT Studio FROM film WHERE Director  =  \"Nicholas Meyer\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\""
  },
  {
    "instruction": "",
    "input": "Tên của các hãng phim đã sản xuất các bộ phim với cả Nicholas Meyer và Walter Hill là gì?",
    "output": "SELECT Studio FROM film WHERE Director  =  \"Nicholas Meyer\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\""
  },
  {
    "instruction": "",
    "input": "Tìm các tiêu đề và hãng phim của các bộ phim được sản xuất bởi một số hãng phim có chứa từ \"Universal\".",
    "output": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\""
  },
  {
    "instruction": "",
    "input": "Các tiêu đề và hãng phim của các bộ phim đã được sản xuất bởi một hãng phim có tên chứa \"Universal\" là gì?",
    "output": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\""
  },
  {
    "instruction": "",
    "input": "Hiển thị các hãng phim không sản xuất phim với đạo diễn \"Walter Hill\".",
    "output": "SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\""
  },
  {
    "instruction": "",
    "input": "Những hãng phim nào chưa bao giờ làm việc với đạo diễn Walter Hill?",
    "output": "SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\""
  },
  {
    "instruction": "",
    "input": "Liệt kê các hãng phim tổng trung bình là trên 4500000.",
    "output": "SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000"
  },
  {
    "instruction": "",
    "input": "Những hãng phim nào có tổng trung bình trên 4500000?",
    "output": "SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000"
  },
  {
    "instruction": "",
    "input": "Tiêu đề của bộ phim có ước tính thị trường cao cao nhất.",
    "output": "SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tiêu đề của bộ phim với ước tính cao nhất?",
    "output": "SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề và đạo diễn của các bộ phim không bao giờ được trình bày ở Trung Quốc là gì?",
    "output": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')"
  },
  {
    "instruction": "",
    "input": "Trả lại các tiêu đề và đạo diễn của các bộ phim chưa bao giờ có mặt trên thị trường của Trung Quốc.",
    "output": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu mặt hàng lịch?",
    "output": "SELECT count(*) FROM Ref_calendar"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng của tất cả các mục lịch.",
    "output": "SELECT count(*) FROM Ref_calendar"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các ngày lịch và số ngày.",
    "output": "SELECT calendar_date ,  day_Number FROM Ref_calendar"
  },
  {
    "instruction": "",
    "input": "Tất cả các ngày lịch và số ngày là gì?",
    "output": "SELECT calendar_date ,  day_Number FROM Ref_calendar"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng các loại tài liệu.",
    "output": "SELECT count(*) FROM Ref_document_types"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại tài liệu?",
    "output": "SELECT count(*) FROM Ref_document_types"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các mã loại tài liệu và tên loại tài liệu.",
    "output": "SELECT document_type_code ,  document_type_name FROM Ref_document_types"
  },
  {
    "instruction": "",
    "input": "Tất cả các mã loại tài liệu và tên loại tài liệu là gì?",
    "output": "SELECT document_type_code ,  document_type_name FROM Ref_document_types"
  },
  {
    "instruction": "",
    "input": "Tên và mô tả cho mã loại tài liệu RV là gì?",
    "output": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\""
  },
  {
    "instruction": "",
    "input": "Cho tôi tên và mô tả của mã loại tài liệu RV.",
    "output": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\""
  },
  {
    "instruction": "",
    "input": "Mã loại tài liệu cho loại tài liệu \"giấy\" là gì?",
    "output": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\""
  },
  {
    "instruction": "",
    "input": "Tìm mã của loại tài liệu \"Giấy\".",
    "output": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\""
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng tài liệu với mã tài liệu CV hoặc BK.",
    "output": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"CV\" OR document_type_code  =  \"BK\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài liệu có mã tài liệu CV hoặc BK?",
    "output": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"CV\" OR document_type_code  =  \"BK\""
  },
  {
    "instruction": "",
    "input": "Ngày mà tài liệu \"Married CV\" được lưu trữ là gì?",
    "output": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\""
  },
  {
    "instruction": "",
    "input": "Tài liệu có tên là \"Married CV\" được lưu trữ?Cho tôi ngày.",
    "output": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\""
  },
  {
    "instruction": "",
    "input": "Số ngày và ngày của tất cả các tài liệu là bao nhiêu?",
    "output": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date"
  },
  {
    "instruction": "",
    "input": "Trả lại số ngày và ngày lưu trữ cho tất cả các tài liệu.",
    "output": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date"
  },
  {
    "instruction": "",
    "input": "Tên loại tài liệu cho tài liệu có tên \"Cách đọc sách\" là gì?",
    "output": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\""
  },
  {
    "instruction": "",
    "input": "Tìm tên loại tài liệu của tài liệu có tên \"Cách đọc sách\".",
    "output": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\""
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng vị trí.",
    "output": "SELECT count(*) FROM Ref_locations"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu vị trí được liệt kê trong cơ sở dữ liệu?",
    "output": "SELECT count(*) FROM Ref_locations"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các mã vị trí và tên vị trí.",
    "output": "SELECT location_code ,  location_name FROM Ref_locations"
  },
  {
    "instruction": "",
    "input": "Tất cả các mã vị trí và tên vị trí là gì?",
    "output": "SELECT location_code ,  location_name FROM Ref_locations"
  },
  {
    "instruction": "",
    "input": "Tên và mô tả cho mã vị trí x là gì?",
    "output": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\""
  },
  {
    "instruction": "",
    "input": "Cho tôi tên và mô tả về vị trí với mã x.",
    "output": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\""
  },
  {
    "instruction": "",
    "input": "Mã vị trí cho quốc gia \"Canada\" là gì?",
    "output": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\""
  },
  {
    "instruction": "",
    "input": "Hiển thị mã vị trí của đất nước \"Canada\".",
    "output": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu vai trò?",
    "output": "SELECT count(*) FROM ROLES"
  },
  {
    "instruction": "",
    "input": "Đếm tổng số vai trò được liệt kê.",
    "output": "SELECT count(*) FROM ROLES"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các mã vai trò, tên vai trò và mô tả vai trò.",
    "output": "SELECT role_code ,  role_name ,  role_description FROM ROLES"
  },
  {
    "instruction": "",
    "input": "Tất cả các mã vai trò, tên vai trò và mô tả vai trò là gì?",
    "output": "SELECT role_code ,  role_name ,  role_description FROM ROLES"
  },
  {
    "instruction": "",
    "input": "Tên và mô tả cho mã vai trò \"mg\" là gì?",
    "output": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\""
  },
  {
    "instruction": "",
    "input": "Tìm tên và mô tả về vai trò với mã \"mg\".",
    "output": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\""
  },
  {
    "instruction": "",
    "input": "Hiển thị mô tả cho tên vai trò \"đầu đọc bằng chứng\".",
    "output": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\""
  },
  {
    "instruction": "",
    "input": "Mô tả về vai trò có tên là \"đầu đọc bằng chứng\" là gì?",
    "output": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\""
  },
  {
    "instruction": "",
    "input": "Chúng tôi có bao nhiêu nhân viên?",
    "output": "SELECT count(*) FROM Employees"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng nhân viên chúng tôi có.",
    "output": "SELECT count(*) FROM Employees"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, mã vai trò và ngày sinh cho nhân viên có tên 'Armani'.",
    "output": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'"
  },
  {
    "instruction": "",
    "input": "Tên, mã vai trò và ngày sinh của nhân viên tên là 'Armani' là gì?",
    "output": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'"
  },
  {
    "instruction": "",
    "input": "ID cho nhân viên được gọi là EBBA là gì?",
    "output": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\""
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của nhân viên tên EBBA.",
    "output": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của tất cả các nhân viên có vai trò \"HR\".",
    "output": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\""
  },
  {
    "instruction": "",
    "input": "Nhân viên nào có vai trò với mã \"HR\"?Tìm tên của họ.",
    "output": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các mã vai trò và số lượng nhân viên trong mỗi vai trò.",
    "output": "SELECT role_code ,  count(*) FROM Employees GROUP BY role_code"
  },
  {
    "instruction": "",
    "input": "Mã của từng vai trò và số lượng nhân viên trong mỗi vai trò là gì?",
    "output": "SELECT role_code ,  count(*) FROM Employees GROUP BY role_code"
  },
  {
    "instruction": "",
    "input": "Mã vai trò với số lượng nhân viên lớn nhất là gì?",
    "output": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm mã của vai trò có nhiều nhân viên nhất.",
    "output": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các mã vai trò với ít nhất 3 nhân viên.",
    "output": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Vai trò với ba hoặc nhiều nhân viên là gì?Cho tôi mã vai trò.",
    "output": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã vai trò với nhân viên ít nhất.",
    "output": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Vai trò với số lượng nhân viên nhỏ nhất là gì?Tìm mã vai trò.",
    "output": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên vai trò và mô tả vai trò cho nhân viên được gọi là EBBA là gì?",
    "output": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và mô tả về vai trò của nhân viên có tên EBBA.",
    "output": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của nhân viên với trình chỉnh sửa tên.",
    "output": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các nhân viên có tên vai trò là \"biên tập viên\".",
    "output": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\""
  },
  {
    "instruction": "",
    "input": "Hiển thị ID nhân viên cho tất cả nhân viên có tên vai trò là \"nguồn nhân lực\" hoặc \"người quản lý\".",
    "output": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Human Resource\" OR T2.role_name  =  \"Manager\""
  },
  {
    "instruction": "",
    "input": "ID nhân viên của các nhân viên có tên vai trò là \"nguồn nhân lực\" hoặc \"người quản lý\" là gì?",
    "output": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Human Resource\" OR T2.role_name  =  \"Manager\""
  },
  {
    "instruction": "",
    "input": "Các mã vị trí khác nhau cho tài liệu là gì?",
    "output": "SELECT DISTINCT location_code FROM Document_locations"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi tất cả các mã vị trí riêng biệt cho các tài liệu.",
    "output": "SELECT DISTINCT location_code FROM Document_locations"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên vị trí cho tài liệu \"Robin CV\".",
    "output": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\""
  },
  {
    "instruction": "",
    "input": "Tên vị trí của tài liệu \"Robin CV\" là gì?",
    "output": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\""
  },
  {
    "instruction": "",
    "input": "Hiển thị mã vị trí, ngày bắt đầu và dữ liệu kết thúc ở vị trí đó cho tất cả các tài liệu.",
    "output": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations"
  },
  {
    "instruction": "",
    "input": "Mã vị trí của mỗi tài liệu, ngày bắt đầu và dữ liệu kết thúc ở vị trí đó là gì?",
    "output": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations"
  },
  {
    "instruction": "",
    "input": "\"Ngày ở vị trí từ\" và \"ngày ở vị trí đến\" cho tài liệu có tên \"Robin CV\"?",
    "output": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\""
  },
  {
    "instruction": "",
    "input": "Tìm ngày bắt đầu và dữ liệu kết thúc ở vị trí cho tài liệu có tên \"Robin CV\".",
    "output": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\""
  },
  {
    "instruction": "",
    "input": "Hiển thị mã vị trí và số lượng tài liệu ở mỗi vị trí.",
    "output": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code"
  },
  {
    "instruction": "",
    "input": "Mã của từng vị trí và số lượng tài liệu ở vị trí đó là gì?",
    "output": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code"
  },
  {
    "instruction": "",
    "input": "Mã vị trí với nhiều tài liệu nhất là gì?",
    "output": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm mã của vị trí với số lượng tài liệu lớn nhất.",
    "output": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã vị trí với ít nhất 3 tài liệu.",
    "output": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Các mã của các vị trí có ít nhất ba tài liệu là gì?",
    "output": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên vị trí và mã với các tài liệu ít nhất.",
    "output": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và mã của vị trí với số lượng tài liệu nhỏ nhất là gì?",
    "output": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của các nhân viên đã ủy quyền phá hủy và các nhân viên đã phá hủy các tài liệu tương ứng là gì?",
    "output": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các nhân viên ủy quyền phá hủy các tài liệu và các nhân viên đã phá hủy các tài liệu tương ứng.",
    "output": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của từng nhân viên và số lượng tài liệu phá hủy được ủy quyền bởi nhân viên đó.",
    "output": "SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID"
  },
  {
    "instruction": "",
    "input": "ID của mỗi nhân viên và số lượng tài liệu phá hủy được ủy quyền bởi nhân viên đó là gì?",
    "output": "SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID nhân viên và số lượng tài liệu bị phá hủy bởi mỗi nhân viên.",
    "output": "SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID"
  },
  {
    "instruction": "",
    "input": "ID của mỗi nhân viên và số lượng tài liệu bị phá hủy bởi nhân viên đó là gì?",
    "output": "SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của các nhân viên không cho phép phá hủy cho bất kỳ tài liệu nào.",
    "output": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "instruction": "",
    "input": "Nhân viên nào không cho phép phá hủy cho bất kỳ tài liệu nào?Cho tôi ID nhân viên của họ.",
    "output": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của tất cả các nhân viên đã ủy quyền phá hủy.",
    "output": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các nhân viên cho phép phá hủy tài liệu là gì?",
    "output": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của tất cả các nhân viên đã phá hủy một tài liệu.",
    "output": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các nhân viên đã phá hủy tài liệu là gì?",
    "output": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của tất cả các nhân viên không phá hủy bất kỳ tài liệu nào.",
    "output": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "instruction": "",
    "input": "Nhân viên nào không phá hủy bất kỳ tài liệu nào?Tìm ID nhân viên của họ.",
    "output": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của tất cả các nhân viên đã phá hủy một tài liệu hoặc ủy quyền để làm điều này.",
    "output": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "instruction": "",
    "input": "Nhân viên nào đã phá hủy một tài liệu hoặc ủy quyền để làm như vậy?Trả lại ID nhân viên của họ.",
    "output": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu câu lạc bộ?",
    "output": "SELECT count(*) FROM club"
  },
  {
    "instruction": "",
    "input": "Đếm tổng số câu lạc bộ.",
    "output": "SELECT count(*) FROM club"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các câu lạc bộ là gì?",
    "output": "SELECT clubname FROM club"
  },
  {
    "instruction": "",
    "input": "Cho tôi tên của mỗi câu lạc bộ.",
    "output": "SELECT clubname FROM club"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên ở đó?",
    "output": "SELECT count(*) FROM student"
  },
  {
    "instruction": "",
    "input": "Đếm tổng số sinh viên.",
    "output": "SELECT count(*) FROM student"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các sinh viên là gì?",
    "output": "SELECT DISTINCT fname FROM student"
  },
  {
    "instruction": "",
    "input": "Tìm tên của mỗi học sinh.",
    "output": "SELECT DISTINCT fname FROM student"
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của các thành viên của câu lạc bộ \"Bootup Baltimore\".",
    "output": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\""
  },
  {
    "instruction": "",
    "input": "Ai là thành viên của câu lạc bộ có tên là \"Bootup Baltimore\"?Cho tôi tên cuối cùng của họ.",
    "output": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\""
  },
  {
    "instruction": "",
    "input": "Ai là thành viên của câu lạc bộ có tên là \"Doanh nghiệp sinh viên Hopkins\"?Hiển thị họ.",
    "output": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\""
  },
  {
    "instruction": "",
    "input": "Trả lại tên cuối cùng cho các thành viên của câu lạc bộ có tên là \"Doanh nghiệp sinh viên Hopkins\".",
    "output": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\""
  },
  {
    "instruction": "",
    "input": "Câu lạc bộ \"Câu lạc bộ quần vợt\" có bao nhiêu thành viên?",
    "output": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\""
  },
  {
    "instruction": "",
    "input": "Đếm các thành viên của câu lạc bộ \"Câu lạc bộ quần vợt\".",
    "output": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng thành viên của câu lạc bộ \"chơi game bút và giấy\".",
    "output": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Pen and Paper Gaming\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người có tư cách thành viên trong câu lạc bộ \"chơi game bút và giấy\"?",
    "output": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Pen and Paper Gaming\""
  },
  {
    "instruction": "",
    "input": "\"Linda Smith\" thuộc bao nhiêu câu lạc bộ?",
    "output": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Linda\" AND t3.lname  =  \"Smith\""
  },
  {
    "instruction": "",
    "input": "\"Linda Smith\" có bao nhiêu câu lạc bộ?",
    "output": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Linda\" AND t3.lname  =  \"Smith\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng câu lạc bộ trong đó \"Tracy Kim\" là thành viên.",
    "output": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Tracy\" AND t3.lname  =  \"Kim\""
  },
  {
    "instruction": "",
    "input": "Đối với có bao nhiêu câu lạc bộ là \"Tracy Kim\" là một thành viên?",
    "output": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Tracy\" AND t3.lname  =  \"Kim\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các thành viên nữ của câu lạc bộ \"Bootup Baltimore\".Hiển thị tên và họ.",
    "output": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\""
  },
  {
    "instruction": "",
    "input": "Cho tôi tên và họ cho tất cả các thành viên nữ của câu lạc bộ \"Bootup Baltimore\".",
    "output": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các thành viên nam của câu lạc bộ \"doanh nghiệp sinh viên Hopkins\".Hiển thị tên và họ.",
    "output": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\""
  },
  {
    "instruction": "",
    "input": "Tên và họ của mỗi thành viên nam trong câu lạc bộ \"doanh nghiệp sinh viên Hopkins\" là gì?",
    "output": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các thành viên của \"Bootup Baltimore\" có chuyên ngành \"600\".Hiển thị tên và họ.",
    "output": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\""
  },
  {
    "instruction": "",
    "input": "Những thành viên nào của \"Bootup Baltimore\" chuyên ngành \"600\"?Cho tôi tên và họ của họ.",
    "output": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\""
  },
  {
    "instruction": "",
    "input": "Câu lạc bộ nào có nhiều thành viên nhất trong \"600\"?",
    "output": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \"600\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm câu lạc bộ có số lượng thành viên lớn nhất trong \"600\".",
    "output": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \"600\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của câu lạc bộ có nhiều sinh viên nữ nhất.",
    "output": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \"F\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Câu lạc bộ nào có nhiều sinh viên nữ nhất là thành viên của họ?Cho tôi tên của câu lạc bộ.",
    "output": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \"F\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mô tả của câu lạc bộ có tên là \"Câu lạc bộ quần vợt\" là gì?",
    "output": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\""
  },
  {
    "instruction": "",
    "input": "Tìm mô tả của câu lạc bộ được gọi là \"Câu lạc bộ quần vợt\".",
    "output": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\""
  },
  {
    "instruction": "",
    "input": "Tìm mô tả của câu lạc bộ \"Bút và trò chơi giấy\".",
    "output": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\""
  },
  {
    "instruction": "",
    "input": "Mô tả của câu lạc bộ \"chơi game bút và giấy\" là gì?",
    "output": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\""
  },
  {
    "instruction": "",
    "input": "Vị trí của câu lạc bộ có tên là \"Câu lạc bộ quần vợt\" là gì?",
    "output": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\""
  },
  {
    "instruction": "",
    "input": "Nơi chúng tôi câu lạc bộ có tên là \"Câu lạc bộ quần vợt\" nằm?",
    "output": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\""
  },
  {
    "instruction": "",
    "input": "Tìm vị trí của câu lạc bộ \"chơi game bút và giấy\".",
    "output": "SELECT clublocation FROM club WHERE clubname  =  \"Pen and Paper Gaming\""
  },
  {
    "instruction": "",
    "input": "Câu lạc bộ \"chơi game và giấy\" của câu lạc bộ nằm ở đâu?",
    "output": "SELECT clublocation FROM club WHERE clubname  =  \"Pen and Paper Gaming\""
  },
  {
    "instruction": "",
    "input": "Câu lạc bộ là \"doanh nghiệp sinh viên Hopkins\" ở đâu?",
    "output": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\""
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết vị trí của câu lạc bộ \"doanh nghiệp sinh viên Hopkins\".",
    "output": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các câu lạc bộ tại \"AKW\".",
    "output": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\""
  },
  {
    "instruction": "",
    "input": "Những câu lạc bộ nào được đặt tại \"AKW\"?Trả lại tên câu lạc bộ.",
    "output": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu câu lạc bộ được đặt tại \"HHH\"?",
    "output": "SELECT count(*) FROM club WHERE clublocation  =  \"HHH\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng câu lạc bộ nằm ở \"HHH\".",
    "output": "SELECT count(*) FROM club WHERE clublocation  =  \"HHH\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của Chủ tịch Câu lạc bộ \"Bootup Baltimore\" là gì?",
    "output": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"President\""
  },
  {
    "instruction": "",
    "input": "Ai là chủ tịch của câu lạc bộ \"Bootup Baltimore\"?Cho tôi tên đầu tiên và cuối cùng.",
    "output": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"President\""
  },
  {
    "instruction": "",
    "input": "Ai là \"CTO\" của câu lạc bộ \"doanh nghiệp sinh viên Hopkins\"?Hiển thị tên và họ.",
    "output": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\""
  },
  {
    "instruction": "",
    "input": "Tìm tên và họ cho \"CTO\" của câu lạc bộ \"Doanh nghiệp sinh viên Hopkins\"?",
    "output": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu vai trò khác nhau trong câu lạc bộ \"Bootup Baltimore\"?",
    "output": "SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  \"Bootup Baltimore\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các vị trí khác nhau trong câu lạc bộ \"Bootup Baltimore\".",
    "output": "SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  \"Bootup Baltimore\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành viên của \"Bootup Baltimore\" lớn hơn 18?",
    "output": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  >  18"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng thành viên trong câu lạc bộ \"Bootup Baltimore\" có tuổi trên 18.",
    "output": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  >  18"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành viên của câu lạc bộ \"Bootup Baltimore\" trẻ hơn 18 tuổi?",
    "output": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  <  18"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng thành viên trong câu lạc bộ \"Bootup Baltimore\" có tuổi dưới 18.",
    "output": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  <  18"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các câu lạc bộ có ít nhất một thành viên từ thành phố có mã thành phố \"BAL\".",
    "output": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"BAL\""
  },
  {
    "instruction": "",
    "input": "Những câu lạc bộ nào có một hoặc nhiều thành viên từ thành phố có mã \"BAL\"?Cho tôi tên của các câu lạc bộ.",
    "output": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"BAL\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các câu lạc bộ có ít nhất một thành viên từ thành phố có mã thành phố \"Hou\".",
    "output": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"HOU\""
  },
  {
    "instruction": "",
    "input": "Những câu lạc bộ nào có một hoặc nhiều thành viên từ thành phố có mã \"Hou\"?Cho tôi tên của các câu lạc bộ.",
    "output": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"HOU\""
  },
  {
    "instruction": "",
    "input": "Học sinh tên là \"Eric Tai\" thuộc bao nhiêu câu lạc bộ?",
    "output": "SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Eric\" AND t3.lname  =  \"Tai\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng câu lạc bộ mà học sinh đặt tên là \"Eric Tai\" là một thành viên.",
    "output": "SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Eric\" AND t3.lname  =  \"Tai\""
  },
  {
    "instruction": "",
    "input": "Liệt kê các câu lạc bộ có \"Davis Steven\" với tư cách là thành viên.",
    "output": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Davis\" AND t3.lname  =  \"Steven\""
  },
  {
    "instruction": "",
    "input": "Tên của các câu lạc bộ có \"Davis Steven\" là thành viên là gì?",
    "output": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Davis\" AND t3.lname  =  \"Steven\""
  },
  {
    "instruction": "",
    "input": "Liệt kê các câu lạc bộ có ít nhất một thành viên với cố vấn \"1121\".",
    "output": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121"
  },
  {
    "instruction": "",
    "input": "Những câu lạc bộ nào có một hoặc nhiều thành viên có cố vấn là \"1121\"?",
    "output": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình của các thành viên của câu lạc bộ \"Bootup Baltimore\" là bao nhiêu?",
    "output": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\""
  },
  {
    "instruction": "",
    "input": "Tìm độ tuổi trung bình của các thành viên trong câu lạc bộ \"Bootup Baltimore\".",
    "output": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\""
  },
  {
    "instruction": "",
    "input": "Tìm độ tuổi trung bình của các thành viên của câu lạc bộ \"doanh nghiệp sinh viên Hopkins\".",
    "output": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\""
  },
  {
    "instruction": "",
    "input": "Trung bình, các thành viên trong câu lạc bộ \"doanh nghiệp sinh viên Hopkins\" bao nhiêu tuổi?",
    "output": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\""
  },
  {
    "instruction": "",
    "input": "Lấy tuổi trung bình của các thành viên của câu lạc bộ \"Câu lạc bộ quần vợt\".",
    "output": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\""
  },
  {
    "instruction": "",
    "input": "Tính độ tuổi trung bình của các thành viên trong câu lạc bộ \"Câu lạc bộ quần vợt\".",
    "output": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\""
  },
  {
    "instruction": "",
    "input": "Số tiền tài trợ riêng biệt cho các khoản tài trợ nơi các tài liệu được gửi trước '1986-08-26 20:49:27' và Grant đã kết thúc sau '1989-03-16 18:27:16'?",
    "output": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'"
  },
  {
    "instruction": "",
    "input": "Số tiền tài trợ khác nhau cho các tài liệu được gửi trước '1986-08-26 20:49:27' và sau khi khoản tài trợ kết thúc vào năm 1989-03-16 18:27:16 '?",
    "output": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'"
  },
  {
    "instruction": "",
    "input": "Liệt kê các chi tiết dự án của dự án cả sản xuất bằng sáng chế và giấy là kết quả.",
    "output": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'"
  },
  {
    "instruction": "",
    "input": "Các chi tiết của dự án đang sản xuất cả bằng sáng chế và giấy tờ là kết quả là gì?",
    "output": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền tài trợ của các tổ chức được mô tả là gì?",
    "output": "SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research'"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền tài trợ cho nghiên cứu là bao nhiêu?",
    "output": "SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research'"
  },
  {
    "instruction": "",
    "input": "Liệt kê từ ngày nào và ngày làm việc này: Nhân viên dự án của dự án thuê nhiều nhân viên nhất",
    "output": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader'"
  },
  {
    "instruction": "",
    "input": "Từ ngày nào và nhân viên làm việc trong một dự án có nhiều nhân viên nhất và có nhân viên trong vai trò lãnh đạo?",
    "output": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader'"
  },
  {
    "instruction": "",
    "input": "Tìm ID tổ chức và chi tiết của các tổ chức có liên quan đến",
    "output": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000"
  },
  {
    "instruction": "",
    "input": "ID và chi tiết cho tất cả các tổ chức có khoản trợ cấp hơn 6000 đô la là gì?",
    "output": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000"
  },
  {
    "instruction": "",
    "input": "Loại tổ chức và ID của tổ chức có số lượng nhân viên nghiên cứu nhiều nhất là gì?",
    "output": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại và ID của tổ chức có nhiều nhân viên nghiên cứu nhất là gì?",
    "output": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những tổ chức nào loại nhân viên nghiên cứu nhất?",
    "output": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Kiểu tổ chức với các nhân viên nghiên cứu nhất là gì?",
    "output": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm hiểu ngày gửi của các tài liệu với số tiền cấp hơn 5000 đã được cấp theo loại tổ chức được mô tả",
    "output": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'"
  },
  {
    "instruction": "",
    "input": "Ngày gửi cho tất cả các tài liệu có số tiền cấp hơn 5000 và có liên quan đến nghiên cứu là gì?",
    "output": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'"
  },
  {
    "instruction": "",
    "input": "Ngày nhận được phản hồi cho các tài liệu được mô tả là 'thường xuyên' hoặc được cấp với hơn 100?",
    "output": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100"
  },
  {
    "instruction": "",
    "input": "Ngày phản hồi nhận được cho tài liệu được mô tả là thường xuyên được cấp hơn 100 đô la là gì?",
    "output": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100"
  },
  {
    "instruction": "",
    "input": "Liệt kê các chi tiết dự án của các dự án không thuê bất kỳ nhân viên nào cho vai trò nhà nghiên cứu.",
    "output": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )"
  },
  {
    "instruction": "",
    "input": "Các chi tiết cho tất cả các dự án không thuê bất kỳ nhân viên nào trong vai trò nghiên cứu là gì?",
    "output": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )"
  },
  {
    "instruction": "",
    "input": "Các chi tiết nhiệm vụ, ID nhiệm vụ và ID dự án cho các dự án được chi tiết là 'OMNI' hoặc có nhiều hơn 2 kết quả?",
    "output": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Các chi tiết nhiệm vụ, ID tác vụ và ID dự án cho các chương trình được chi tiết là 'OMNI' hoặc có ít nhất 3 kết quả?",
    "output": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Khi nào tất cả các nhân viên vai trò của nhà nghiên cứu bắt đầu làm việc, và khi nào họ ngừng làm việc?",
    "output": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'"
  },
  {
    "instruction": "",
    "input": "Khi nào các nhà nghiên cứu bắt đầu và ngừng làm việc?",
    "output": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại vai trò cho nhân viên?",
    "output": "SELECT count(DISTINCT role_code) FROM Project_Staff"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu vai trò khác nhau trong nhân viên dự án?",
    "output": "SELECT count(DISTINCT role_code) FROM Project_Staff"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền tài trợ được đưa ra bởi mỗi tổ chức là bao nhiêu?Cũng liệt kê ID tổ chức.",
    "output": "SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id"
  },
  {
    "instruction": "",
    "input": "Tổng số tiền tài trợ được cung cấp cho mỗi tổ chức là bao nhiêu và ID của nó là bao nhiêu?",
    "output": "SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id"
  },
  {
    "instruction": "",
    "input": "Liệt kê các chi tiết dự án của các dự án với kết quả nghiên cứu được mô tả với \"được xuất bản\".",
    "output": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'"
  },
  {
    "instruction": "",
    "input": "Các chi tiết cho dự án có nghiên cứu đã được công bố là gì?",
    "output": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'"
  },
  {
    "instruction": "",
    "input": "Mỗi dự án có bao nhiêu nhân viên?Liệt kê ID dự án và số theo thứ tự tăng dần.",
    "output": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ID dự án, nó có bao nhiêu nhân viên?Liệt kê chúng theo thứ tự ngày càng tăng.",
    "output": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"
  },
  {
    "instruction": "",
    "input": "Mô tả đầy đủ về vai trò nhà nghiên cứu là gì.",
    "output": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'"
  },
  {
    "instruction": "",
    "input": "Mô tả đầy đủ về công việc của một nhà nghiên cứu là gì?",
    "output": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'"
  },
  {
    "instruction": "",
    "input": "Khi nào các nhân viên đầu tiên cho các dự án bắt đầu hoạt động?",
    "output": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Khi nào nhân viên đầu tiên bắt đầu làm việc?",
    "output": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Dự án nào đã tạo ra nhiều kết quả nhất?Liệt kê các chi tiết dự án và ID dự án.",
    "output": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các chi tiết và ID của dự án với nhiều kết quả nhất là gì?",
    "output": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những dự án nào không có kết quả?Liệt kê các chi tiết dự án.",
    "output": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )"
  },
  {
    "instruction": "",
    "input": "Các chi tiết của dự án không có kết quả là gì?",
    "output": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )"
  },
  {
    "instruction": "",
    "input": "Tổ chức nào thuê số lượng nhân viên nghiên cứu nhất?Liệt kê ID tổ chức, loại và chi tiết.",
    "output": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID, loại và chi tiết của tổ chức với các nhân viên nghiên cứu nhất là gì?",
    "output": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị mô tả vai trò và ID của nhân viên dự án tham gia vào hầu hết các kết quả dự án?",
    "output": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ID nhân viên, mô tả về vai trò liên quan đến số lượng dự án nhiều nhất là gì?",
    "output": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại tài liệu nào được mô tả với tiền tố 'ban đầu'?",
    "output": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'"
  },
  {
    "instruction": "",
    "input": "Loại tài liệu có mô tả bắt đầu bằng từ 'ban đầu' là gì?",
    "output": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'"
  },
  {
    "instruction": "",
    "input": "Đối với các khoản tài trợ với cả hai tài liệu được mô tả là 'thông thường' và các tài liệu được mô tả là 'ứng dụng ban đầu', hãy liệt kê ngày bắt đầu.",
    "output": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Initial Application'"
  },
  {
    "instruction": "",
    "input": "Đối với các khoản tài trợ có mô tả về các ứng dụng thông thường và ban đầu, ngày bắt đầu của họ là gì?",
    "output": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Initial Application'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài liệu có thể có nhiều tài liệu có thể có nhiều nhất?Liệt kê ID cấp và số.",
    "output": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ID cấp, nó có bao nhiêu tài liệu và cái nào có nhiều nhất?",
    "output": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm mô tả loại tổ chức của tổ chức được chi tiết là 'quo'.",
    "output": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo'"
  },
  {
    "instruction": "",
    "input": "Mô tả loại của tổ chức có chi tiết được liệt kê là 'quo' là gì?",
    "output": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo'"
  },
  {
    "instruction": "",
    "input": "Tất cả các chi tiết của các tổ chức được mô tả là 'nhà tài trợ' là gì?Sắp xếp kết quả theo thứ tự tăng dần.",
    "output": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details"
  },
  {
    "instruction": "",
    "input": "Các chi tiết của tất cả các tổ chức được mô tả là nhà tài trợ và sắp xếp kết quả theo thứ tự tăng dần là gì?",
    "output": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu kết quả bằng sáng chế được tạo ra từ tất cả các dự án?",
    "output": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu kết quả bằng sáng chế được liệt kê cho tất cả các dự án?",
    "output": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhân viên dự án làm việc với tư cách là nhà lãnh đạo hoặc bắt đầu làm việc trước '1989-04-24 23:51:54'?",
    "output": "SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành viên dự án là nhà lãnh đạo hoặc bắt đầu làm việc trước '1989-04-24 23:51:54'?",
    "output": "SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54'"
  },
  {
    "instruction": "",
    "input": "Ngày cuối cùng của nhân viên rời khỏi các dự án là gì?",
    "output": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Ngày cuối cùng mà một nhân viên rời khỏi một dự án là gì?",
    "output": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mô tả kết quả của dự án có chi tiết là 'sint' là gì?",
    "output": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'"
  },
  {
    "instruction": "",
    "input": "Mô tả cho các kết quả có chi tiết dự án là 'sint' là gì?",
    "output": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID tổ chức với số lượng kết quả tối đa và số đếm.",
    "output": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của tổ chức với số lượng kết quả tối đa là gì và có bao nhiêu kết quả?",
    "output": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các chi tiết dự án của các dự án được đưa ra bởi tổ chức",
    "output": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )"
  },
  {
    "instruction": "",
    "input": "Các chi tiết cho các dự án được tổ chức đưa ra với nhiều dự án nhất là gì?",
    "output": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )"
  },
  {
    "instruction": "",
    "input": "Liệt kê các chi tiết nhân viên nghiên cứu, và đặt hàng theo thứ tự tăng dần.",
    "output": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC"
  },
  {
    "instruction": "",
    "input": "Những chi tiết nào có trong các nhân viên nghiên cứu?Liệt kê kết quả trong thứ tự bảng chữ cái tăng dần.",
    "output": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu nhiệm vụ?",
    "output": "SELECT count(*) FROM Tasks"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhiệm vụ?",
    "output": "SELECT count(*) FROM Tasks"
  },
  {
    "instruction": "",
    "input": "Mỗi dự án có bao nhiêu nhiệm vụ?Liệt kê số lượng nhiệm vụ và chi tiết dự án.",
    "output": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ID dự án, có bao nhiêu nhiệm vụ?",
    "output": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id"
  },
  {
    "instruction": "",
    "input": "Vai trò nhân viên của các nhân viên là gì",
    "output": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'"
  },
  {
    "instruction": "",
    "input": "Các nhân viên đã đóng vai trò gì trong khoảng thời gian '2003-04-19 15:06:20' và '2016-03-15 00:33:18'?",
    "output": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'"
  },
  {
    "instruction": "",
    "input": "Các mô tả của tất cả các kết quả dự án là gì?",
    "output": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code"
  },
  {
    "instruction": "",
    "input": "Liệt kê mô tả về kết quả cho tất cả các dự án.",
    "output": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code"
  },
  {
    "instruction": "",
    "input": "Vai trò nào là phổ biến nhất cho nhân viên?",
    "output": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Vai trò phổ biến nhất cho nhân viên là gì?",
    "output": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Dan có bao nhiêu người bạn?",
    "output": "SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan'"
  },
  {
    "instruction": "",
    "input": "Dan có bao nhiêu người bạn?",
    "output": "SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan'"
  },
  {
    "instruction": "",
    "input": "Mạng này có bao nhiêu nữ?",
    "output": "SELECT count(*) FROM Person WHERE gender  =  'female'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nữ trong mạng?",
    "output": "SELECT count(*) FROM Person WHERE gender  =  'female'"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình cho tất cả người là bao nhiêu?",
    "output": "SELECT avg(age) FROM Person"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình cho tất cả mọi người trong bảng là gì?",
    "output": "SELECT avg(age) FROM Person"
  },
  {
    "instruction": "",
    "input": "Họ đến từ bao nhiêu thành phố khác nhau?",
    "output": "SELECT count(DISTINCT city) FROM Person"
  },
  {
    "instruction": "",
    "input": "Mọi người bắt nguồn từ bao nhiêu thành phố khác nhau?",
    "output": "SELECT count(DISTINCT city) FROM Person"
  },
  {
    "instruction": "",
    "input": "Họ có bao nhiêu loại công việc?",
    "output": "SELECT count(DISTINCT job) FROM Person"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu công việc khác nhau được liệt kê?",
    "output": "SELECT count(DISTINCT job) FROM Person"
  },
  {
    "instruction": "",
    "input": "Ai là người lớn tuổi nhất?",
    "output": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)"
  },
  {
    "instruction": "",
    "input": "Tên của người lớn tuổi nhất là gì?",
    "output": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)"
  },
  {
    "instruction": "",
    "input": "Ai là người lớn tuổi nhất có công việc là sinh viên?",
    "output": "SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )"
  },
  {
    "instruction": "",
    "input": "Tên của học sinh lớn nhất là gì?",
    "output": "SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )"
  },
  {
    "instruction": "",
    "input": "Ai là người đàn ông trẻ nhất?",
    "output": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )"
  },
  {
    "instruction": "",
    "input": "Tên của người đàn ông trẻ nhất là gì?",
    "output": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )"
  },
  {
    "instruction": "",
    "input": "Bác sĩ tên Zach bao nhiêu tuổi?",
    "output": "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'"
  },
  {
    "instruction": "",
    "input": "Tuổi của bác sĩ tên là Zach là gì?",
    "output": "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'"
  },
  {
    "instruction": "",
    "input": "Ai là người có tuổi dưới 30?",
    "output": "SELECT name FROM Person WHERE age  <  30"
  },
  {
    "instruction": "",
    "input": "Tên của người có tuổi dưới 30 là gì?",
    "output": "SELECT name FROM Person WHERE age  <  30"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người có tuổi 30 và công việc là kỹ sư?",
    "output": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu kỹ sư lớn tuổi hơn 30?",
    "output": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình cho mỗi giới là bao nhiêu?",
    "output": "SELECT avg(age) ,  gender FROM Person GROUP BY gender"
  },
  {
    "instruction": "",
    "input": "Trung bình mỗi giới tính bao nhiêu tuổi?",
    "output": "SELECT avg(age) ,  gender FROM Person GROUP BY gender"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình cho chức danh công việc khác nhau là gì?",
    "output": "SELECT avg(age) ,  job FROM Person GROUP BY job"
  },
  {
    "instruction": "",
    "input": "Người bình thường bao nhiêu tuổi cho mỗi công việc?",
    "output": "SELECT avg(age) ,  job FROM Person GROUP BY job"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình của nam giới cho chức danh công việc khác nhau là gì?",
    "output": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình của nam giới trong mỗi công việc là bao nhiêu?",
    "output": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job"
  },
  {
    "instruction": "",
    "input": "Tuổi tối thiểu cho chức danh công việc khác nhau là gì?",
    "output": "SELECT min(age) ,  job FROM Person GROUP BY job"
  },
  {
    "instruction": "",
    "input": "Người trẻ nhất bao nhiêu tuổi cho mỗi công việc?",
    "output": "SELECT min(age) ,  job FROM Person GROUP BY job"
  },
  {
    "instruction": "",
    "input": "Tìm số người dưới 40 tuổi cho mỗi giới.",
    "output": "SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người dưới 40 cho mỗi giới?",
    "output": "SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những người có tuổi lớn hơn bất kỳ kỹ sư nào được sắp xếp theo tuổi của họ.",
    "output": "SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả những người già hơn ít nhất một kỹ sư là gì?Đặt hàng theo độ tuổi.",
    "output": "SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age"
  },
  {
    "instruction": "",
    "input": "Tìm số người có tuổi lớn hơn tất cả các kỹ sư.",
    "output": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer')"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người già hơn mọi kỹ sư?",
    "output": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer')"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên, tiêu đề công việc của tất cả mọi người được đặt hàng theo tên của họ.",
    "output": "SELECT name ,  job FROM Person ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Tên và tiêu đề công việc của mỗi người được đặt hàng theo thứ tự bảng chữ cái bằng tên là gì?",
    "output": "SELECT name ,  job FROM Person ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả những người được sắp xếp theo thứ tự giảm dần bằng tuổi.",
    "output": "SELECT name FROM Person ORDER BY age DESC"
  },
  {
    "instruction": "",
    "input": "Tên của mọi người được sắp xếp theo độ tuổi theo thứ tự giảm dần là gì?",
    "output": "SELECT name FROM Person ORDER BY age DESC"
  },
  {
    "instruction": "",
    "input": "Tìm tên và tuổi của tất cả nam giới theo thứ tự tuổi của họ.",
    "output": "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age"
  },
  {
    "instruction": "",
    "input": "Tên và tuổi của mỗi nam giới là gì?Đặt hàng kết quả theo độ tuổi.",
    "output": "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age"
  },
  {
    "instruction": "",
    "input": "Tìm tên và tuổi của người là bạn của cả Dan và Alice.",
    "output": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'"
  },
  {
    "instruction": "",
    "input": "Tên và tuổi của mọi người là bạn của cả Dan và Alice là gì?",
    "output": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'"
  },
  {
    "instruction": "",
    "input": "Tìm tên và tuổi của người là bạn của Dan hoặc Alice.",
    "output": "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'"
  },
  {
    "instruction": "",
    "input": "Những cái tên và tuổi khác nhau của mỗi người bạn của Dan hoặc Alice là gì?",
    "output": "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người có bạn bè trên 40 tuổi và dưới 30 tuổi?",
    "output": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"
  },
  {
    "instruction": "",
    "input": "Tên của mỗi người có một người bạn trên 40 tuổi và dưới 30 tuổi là gì?",
    "output": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người có bạn bè trên 40 tuổi nhưng không dưới 30 tuổi?",
    "output": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"
  },
  {
    "instruction": "",
    "input": "Tên của những người lớn tuổi hơn 40 nhưng không có bạn bè dưới 30 tuổi là gì?",
    "output": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của người không có bạn bè.",
    "output": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student'"
  },
  {
    "instruction": "",
    "input": "Tên của những người không có bạn bè là sinh viên là gì?",
    "output": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student'"
  },
  {
    "instruction": "",
    "input": "Tìm người có chính xác một người bạn.",
    "output": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả những người có chính xác một người bạn là gì?",
    "output": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Ai là bạn của Bob?",
    "output": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'"
  },
  {
    "instruction": "",
    "input": "Bạn của Bob là ai?",
    "output": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những người là bạn với Bob.",
    "output": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả những người bạn của Bob là gì?",
    "output": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những người phụ nữ là bạn với Zach",
    "output": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' AND T1.gender  =  'female'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả phụ nữ là bạn với Zach là gì?",
    "output": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' AND T1.gender  =  'female'"
  },
  {
    "instruction": "",
    "input": "Tìm những người bạn nữ của Alice.",
    "output": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'"
  },
  {
    "instruction": "",
    "input": "Tất cả những người bạn của Alice là nữ là gì?",
    "output": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'"
  },
  {
    "instruction": "",
    "input": "Tìm người bạn nam của Alice có công việc là bác sĩ?",
    "output": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'"
  },
  {
    "instruction": "",
    "input": "Ai là bạn của Alice là bác sĩ?",
    "output": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'"
  },
  {
    "instruction": "",
    "input": "Ai có một người bạn đến từ thành phố New York?",
    "output": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả những người bạn đến từ New York là gì?",
    "output": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'"
  },
  {
    "instruction": "",
    "input": "Ai có những người bạn trẻ hơn tuổi trung bình?",
    "output": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)"
  },
  {
    "instruction": "",
    "input": "Tên khác nhau của những người bạn trẻ hơn tuổi trung bình của một người bạn là gì?",
    "output": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)"
  },
  {
    "instruction": "",
    "input": "Ai có những người bạn lớn tuổi hơn tuổi trung bình?In bạn bè của họ và tuổi của họ",
    "output": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)"
  },
  {
    "instruction": "",
    "input": "Whare tên, bạn bè và lứa tuổi của tất cả những người lớn tuổi hơn tuổi trung bình của một người?",
    "output": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)"
  },
  {
    "instruction": "",
    "input": "Ai là bạn của Zach với mối quan hệ năm lâu đời nhất?",
    "output": "SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')"
  },
  {
    "instruction": "",
    "input": "Bạn của Zach có tình bạn lâu dài nhất?",
    "output": "SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')"
  },
  {
    "instruction": "",
    "input": "Tuổi của người bạn của Zach với mối quan hệ năm lâu đời nhất là gì?",
    "output": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')"
  },
  {
    "instruction": "",
    "input": "Độ tuổi của tất cả những người bạn của Zach đang trong mối quan hệ lâu nhất là gì?",
    "output": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những người là bạn với Alice trong những năm ngắn ngủi nhất.",
    "output": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả những người là bạn với Alice trong khoảng thời gian ngắn nhất là gì?",
    "output": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')"
  },
  {
    "instruction": "",
    "input": "Tìm tên, tuổi tác và tiêu đề công việc của những người là bạn với Alice trong những năm dài nhất.",
    "output": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')"
  },
  {
    "instruction": "",
    "input": "Tên, lứa tuổi và công việc của tất cả những người là bạn với Alice trong thời gian dài nhất là gì?",
    "output": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')"
  },
  {
    "instruction": "",
    "input": "Ai là người không có bạn?",
    "output": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả những người không có bạn bè là gì?",
    "output": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend"
  },
  {
    "instruction": "",
    "input": "Người nào có bạn bè có tuổi trung bình lâu đời nhất?",
    "output": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của người có tuổi trung bình lâu đời nhất cho bạn bè của họ là gì và tuổi trung bình đó là gì?",
    "output": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tổng số người không có bạn bè sống ở thành phố Austin là gì.",
    "output": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')"
  },
  {
    "instruction": "",
    "input": "Tổng số người không có bạn bè sống ở Austin là bao nhiêu?",
    "output": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')"
  },
  {
    "instruction": "",
    "input": "Tìm bạn bè của Alice of Friends.",
    "output": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả bạn bè của Alice là gì?",
    "output": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành viên?",
    "output": "SELECT count(*) FROM member"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các thành viên theo thứ tự bảng chữ cái tăng dần.",
    "output": "SELECT Name FROM member ORDER BY Name ASC"
  },
  {
    "instruction": "",
    "input": "Tên và quốc gia của các thành viên là gì?",
    "output": "SELECT Name ,  Country FROM member"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các thành viên có quốc gia là \"Hoa Kỳ\" hoặc \"Canada\".",
    "output": "SELECT Name FROM member WHERE Country  =  \"United States\" OR Country  =  \"Canada\""
  },
  {
    "instruction": "",
    "input": "Hiển thị các quốc gia khác nhau và số lượng thành viên từ mỗi quốc gia.",
    "output": "SELECT Country ,  COUNT(*) FROM member GROUP BY Country"
  },
  {
    "instruction": "",
    "input": "Hiển thị các quốc gia phổ biến nhất trên khắp các thành viên.",
    "output": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những quốc gia nào có nhiều hơn hai thành viên?",
    "output": "SELECT Country FROM member GROUP BY Country HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên người lãnh đạo và địa điểm của các trường đại học.",
    "output": "SELECT Leader_Name ,  College_Location FROM college"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các thành viên và tên của các trường đại học mà họ đến.",
    "output": "SELECT T2.Name ,  T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các thành viên và địa điểm của các trường đại học mà họ đến theo thứ tự bảng chữ cái của tên thành viên.",
    "output": "SELECT T2.Name ,  T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID ORDER BY T2.Name ASC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên lãnh đạo riêng biệt của các trường đại học liên quan đến các thành viên từ quốc gia \"Canada\".",
    "output": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID WHERE T2.Country  =  \"Canada\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các thành viên và các chủ đề trang trí mà họ có.",
    "output": "SELECT T1.Name ,  T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các thành viên có thứ hạng cao hơn 3.",
    "output": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID WHERE T2.Rank_in_Round  >  3"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các thành viên theo thứ tự tăng dần của thứ hạng của họ trong các vòng.",
    "output": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID ORDER BY Rank_in_Round ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các thành viên không tham gia vào bất kỳ vòng nào.",
    "output": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM round)"
  },
  {
    "instruction": "",
    "input": "Tìm tên và số lượng truy cập của tất cả các tài liệu, theo thứ tự chữ cái của tên tài liệu.",
    "output": "SELECT document_name ,  access_count FROM documents ORDER BY document_name"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các tài liệu, cũng như số lượng truy cập của mỗi tài liệu, được đặt hàng theo thứ tự bảng chữ cái?",
    "output": "SELECT document_name ,  access_count FROM documents ORDER BY document_name"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tài liệu đã được truy cập số lần lớn nhất, cũng như số lượng bao nhiêu lần nó đã được truy cập?",
    "output": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của tài liệu đã được truy cập nhiều lần nhất, cũng như số lần nó đã được truy cập?",
    "output": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm các loại tài liệu với hơn 4 tài liệu.",
    "output": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4"
  },
  {
    "instruction": "",
    "input": "Các mã của các loại tài liệu trong đó có hoặc nhiều hơn là gì?",
    "output": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số truy cập của tất cả các tài liệu trong loại tài liệu phổ biến nhất.",
    "output": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tổng số truy cập của các tài liệu thuộc loại tài liệu phổ biến nhất là gì?",
    "output": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Số lượng tài liệu truy cập trung bình là gì?",
    "output": "SELECT avg(access_count) FROM documents"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng truy cập trung bình trên tất cả các tài liệu?",
    "output": "SELECT avg(access_count) FROM documents"
  },
  {
    "instruction": "",
    "input": "Cấu trúc của tài liệu có số lượng truy cập ít nhất là gì?",
    "output": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về mô tả cấu trúc của tài liệu đã được truy cập ít lần nhất.",
    "output": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại tài liệu có tên là \"David CV\" là gì?",
    "output": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\""
  },
  {
    "instruction": "",
    "input": "Trả lại mã loại của tài liệu có tên \"David CV\".",
    "output": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\""
  },
  {
    "instruction": "",
    "input": "Tìm danh sách các tài liệu cả trong ba loại phổ biến nhất và có ba cấu trúc phổ biến nhất.",
    "output": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tên của các tài liệu có cả một trong ba loại phổ biến nhất và một trong ba cấu trúc phổ biến nhất là gì?",
    "output": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Những loại tài liệu nào có hơn 10000 tổng số truy cập.",
    "output": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000"
  },
  {
    "instruction": "",
    "input": "Trả về mã của các loại tài liệu không có tổng số truy cập trên 10000.",
    "output": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000"
  },
  {
    "instruction": "",
    "input": "Tất cả các tiêu đề của tài liệu có tên là \"David CV\" là gì?",
    "output": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\""
  },
  {
    "instruction": "",
    "input": "Cung cấp cho các tiêu đề của tài liệu với tên \"David CV\".",
    "output": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả tên của các tài liệu mà không có bất kỳ phần nào.",
    "output": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)"
  },
  {
    "instruction": "",
    "input": "Tên của các tài liệu không có phần nào?",
    "output": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả tên người dùng và mật khẩu của người dùng với vai trò phổ biến nhất.",
    "output": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên người dùng và mật khẩu của người dùng có vai trò phổ biến nhất là gì?",
    "output": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng truy cập trung bình của các tài liệu với khu vực chức năng \"xác nhận\".",
    "output": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"Acknowledgement\""
  },
  {
    "instruction": "",
    "input": "Số lượng truy cập trung bình của các tài liệu có mô tả khu vực chức năng là gì?",
    "output": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"Acknowledgement\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của tài liệu mà không có bất kỳ hình ảnh.",
    "output": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id"
  },
  {
    "instruction": "",
    "input": "Tên của các tài liệu không có hình ảnh nào?",
    "output": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id"
  },
  {
    "instruction": "",
    "input": "Tên của tài liệu với số phần nhiều nhất là gì?",
    "output": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về tên của tài liệu có nhiều phần nhất.",
    "output": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên tài liệu có chứa \"CV\".",
    "output": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\""
  },
  {
    "instruction": "",
    "input": "Tên của các tài liệu có chứa \"CV\" là gì?",
    "output": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người dùng được đăng nhập?",
    "output": "SELECT count(*) FROM users WHERE user_login  =  1"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng người dùng được đăng nhập.",
    "output": "SELECT count(*) FROM users WHERE user_login  =  1"
  },
  {
    "instruction": "",
    "input": "Tìm mô tả về vai trò phổ biến nhất trong số những người dùng đã đăng nhập.",
    "output": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Mô tả về vai trò phổ biến nhất trong số những người dùng đã đăng nhập là gì?",
    "output": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng truy cập trung bình của các tài liệu với cấu trúc ít phổ biến nhất.",
    "output": "SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Số lượng truy cập trung bình của các tài liệu có cấu trúc ít nhất là gì?",
    "output": "SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên hình ảnh và URL theo thứ tự tên của họ.",
    "output": "SELECT image_name ,  image_url FROM images ORDER BY image_name"
  },
  {
    "instruction": "",
    "input": "Tên và URL của hình ảnh, được sắp xếp theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT image_name ,  image_url FROM images ORDER BY image_name"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng người dùng trong mỗi vai trò.",
    "output": "SELECT count(*) ,  role_code FROM users GROUP BY role_code"
  },
  {
    "instruction": "",
    "input": "Các mã vai trò khác nhau cho người dùng là gì và mỗi người dùng có bao nhiêu người dùng?",
    "output": "SELECT count(*) ,  role_code FROM users GROUP BY role_code"
  },
  {
    "instruction": "",
    "input": "Những loại tài liệu nào có nhiều hơn 2 tài liệu tương ứng?",
    "output": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Cung cấp mã của các loại tài liệu có nhiều hơn 2 tài liệu tương ứng.",
    "output": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu công ty?",
    "output": "SELECT count(*) FROM Companies"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các công ty.",
    "output": "SELECT count(*) FROM Companies"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các công ty theo thứ tự giảm dần giá trị thị trường.",
    "output": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC"
  },
  {
    "instruction": "",
    "input": "Sắp xếp tên công ty theo thứ tự giảm dần giá trị thị trường của công ty.",
    "output": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC"
  },
  {
    "instruction": "",
    "input": "Tên của các công ty có trụ sở chính không phải là \"Hoa Kỳ\" là gì?",
    "output": "SELECT name FROM Companies WHERE Headquarters != 'USA'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các công ty có trụ sở chính không được đặt tại \"Hoa Kỳ\".",
    "output": "SELECT name FROM Companies WHERE Headquarters != 'USA'"
  },
  {
    "instruction": "",
    "input": "Tên và tài sản của mỗi công ty, được sắp xếp theo thứ tự tăng dần của tên công ty là gì?",
    "output": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và tài sản của mỗi công ty theo thứ tự tăng dần của tên công ty.",
    "output": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC"
  },
  {
    "instruction": "",
    "input": "Lợi nhuận trung bình của các công ty là gì?",
    "output": "SELECT avg(Profits_billion) FROM Companies"
  },
  {
    "instruction": "",
    "input": "Tính toán lợi nhuận trung bình các công ty thực hiện.",
    "output": "SELECT avg(Profits_billion) FROM Companies"
  },
  {
    "instruction": "",
    "input": "Doanh số tối đa và tối thiểu của các công ty có các ngành công nghiệp không \"ngân hàng\".",
    "output": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\""
  },
  {
    "instruction": "",
    "input": "Tìm doanh số tối đa và tối thiểu của các công ty không có trong ngành \"Ngân hàng\".",
    "output": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\""
  },
  {
    "instruction": "",
    "input": "Các công ty trong bao nhiêu ngành công nghiệp khác nhau?",
    "output": "SELECT count(DISTINCT Industry) FROM Companies"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các ngành công nghiệp khác biệt.",
    "output": "SELECT count(DISTINCT Industry) FROM Companies"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các tòa nhà theo thứ tự giảm dần chiều cao tòa nhà.",
    "output": "SELECT name FROM buildings ORDER BY Height DESC"
  },
  {
    "instruction": "",
    "input": "Tên của các tòa nhà được sắp xếp theo thứ tự giảm dần chiều cao tòa nhà là gì?",
    "output": "SELECT name FROM buildings ORDER BY Height DESC"
  },
  {
    "instruction": "",
    "input": "Tìm những câu chuyện của tòa nhà với chiều cao lớn nhất.",
    "output": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những câu chuyện về tòa nhà cao nhất là gì?",
    "output": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của một tòa nhà cùng với tên của một công ty có văn phòng trong tòa nhà.",
    "output": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi công ty, hãy trả lại tên công ty và tên của tòa nhà văn phòng của nó được đặt tại.",
    "output": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các tòa nhà có nhiều hơn một văn phòng công ty.",
    "output": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Những tòa nhà nào có nhiều hơn một văn phòng công ty?Cho tôi tên tòa nhà.",
    "output": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của tòa nhà có nhiều văn phòng công ty nhất.",
    "output": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tòa nhà nào có số lượng văn phòng công ty lớn nhất?Cho tôi tên tòa nhà.",
    "output": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị tên của các tòa nhà có địa vị \"đang giữ\", theo thứ tự tăng dần của các câu chuyện.",
    "output": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các tòa nhà trong trạng thái \"on-kold\" và sắp xếp chúng theo thứ tự tăng dần của các câu chuyện xây dựng.",
    "output": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị từng ngành và số lượng các công ty tương ứng trong ngành đó.",
    "output": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry"
  },
  {
    "instruction": "",
    "input": "Tên của mỗi ngành và số lượng các công ty trong ngành đó là gì?",
    "output": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các ngành công nghiệp của các công ty theo thứ tự giảm dần của số lượng các công ty.",
    "output": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC"
  },
  {
    "instruction": "",
    "input": "Sắp xếp tất cả các ngành công nghiệp theo thứ tự giảm dần của số lượng các công ty trong mỗi ngành",
    "output": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê ngành công nghiệp được chia sẻ bởi hầu hết các công ty.",
    "output": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Ngành công nghiệp nào có nhiều công ty nhất?",
    "output": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các tòa nhà không có văn phòng công ty.",
    "output": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)"
  },
  {
    "instruction": "",
    "input": "Những tòa nhà nào không có văn phòng công ty?Cho tôi tên tòa nhà.",
    "output": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các ngành công nghiệp được chia sẻ bởi các công ty có trụ sở chính là \"Hoa Kỳ\" và các công ty có trụ sở chính là \"Trung Quốc\".",
    "output": "SELECT Industry FROM Companies WHERE Headquarters  =  \"USA\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"China\""
  },
  {
    "instruction": "",
    "input": "Những ngành công nghiệp nào có cả hai công ty có trụ sở tại \"Hoa Kỳ\" và các công ty có trụ sở tại \"Trung Quốc\"?",
    "output": "SELECT Industry FROM Companies WHERE Headquarters  =  \"USA\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"China\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các công ty có ngành công nghiệp đang \"ngân hàng\" hoặc \"tập đoàn\",",
    "output": "SELECT count(*) FROM Companies WHERE Industry  =  \"Banking\" OR Industry  =  \"Conglomerate\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu công ty trong ngành công nghiệp \"ngân hàng\" hoặc \"tập đoàn\"?",
    "output": "SELECT count(*) FROM Companies WHERE Industry  =  \"Banking\" OR Industry  =  \"Conglomerate\""
  },
  {
    "instruction": "",
    "input": "Hiển thị trụ sở được chia sẻ bởi hơn hai công ty.",
    "output": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Những địa điểm trụ sở nào được sử dụng bởi hơn 2 công ty?",
    "output": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm?",
    "output": "SELECT count(*) FROM Products"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các sản phẩm theo thứ tự tăng dần của giá.",
    "output": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
  },
  {
    "instruction": "",
    "input": "Tên và mã loại sản phẩm là gì?",
    "output": "SELECT Product_Name ,  Product_Type_Code FROM Products"
  },
  {
    "instruction": "",
    "input": "Hiển thị giá của các sản phẩm có tên \"Ăn uống\" hoặc \"Chính sách giao dịch\".",
    "output": "SELECT Product_Price FROM Products WHERE Product_Name  =  \"Dining\" OR Product_Name  =  \"Trading Policy\""
  },
  {
    "instruction": "",
    "input": "Giá trung bình cho sản phẩm là bao nhiêu?",
    "output": "SELECT avg(Product_Price) FROM Products"
  },
  {
    "instruction": "",
    "input": "Tên của sản phẩm với giá cao nhất là gì?",
    "output": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các mã loại khác nhau của sản phẩm và số lượng sản phẩm với mỗi mã loại.",
    "output": "SELECT Product_Type_Code ,  COUNT(*) FROM Products GROUP BY Product_Type_Code"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã loại phổ biến nhất trên các sản phẩm.",
    "output": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các mã loại sản phẩm có ít nhất hai sản phẩm.",
    "output": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã loại sản phẩm có cả hai sản phẩm có giá cao hơn 4500 và các sản phẩm có giá thấp hơn 3000.",
    "output": "SELECT Product_Type_Code FROM Products WHERE Product_Price  >  4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price  <  3000"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của sản phẩm và số lượng sự kiện họ đang tham gia.",
    "output": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các sản phẩm và số lượng sự kiện họ tham gia, được sắp xếp theo số lượng sự kiện theo thứ tự giảm dần.",
    "output": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các sản phẩm trong ít nhất hai sự kiện.",
    "output": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các sản phẩm trong ít nhất hai sự kiện theo thứ tự bảng chữ cái tăng dần của tên sản phẩm.",
    "output": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2 ORDER BY T1.Product_Name"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các sản phẩm không có trong bất kỳ sự kiện nào.",
    "output": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events)"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tác phẩm nghệ thuật?",
    "output": "SELECT count(*) FROM artwork"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các tác phẩm nghệ thuật theo thứ tự bảng chữ cái tăng dần.",
    "output": "SELECT Name FROM artwork ORDER BY Name ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các tác phẩm nghệ thuật có loại không phải là \"chương trình tài năng chương trình\".",
    "output": "SELECT Name FROM artwork WHERE TYPE != \"Program Talent Show\""
  },
  {
    "instruction": "",
    "input": "Tên và địa điểm của các lễ hội là gì?",
    "output": "SELECT Festival_Name ,  LOCATION FROM festival_detail"
  },
  {
    "instruction": "",
    "input": "Tên của những chiếc ghế của các lễ hội, được sắp xếp theo thứ tự tăng dần của năm?",
    "output": "SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC"
  },
  {
    "instruction": "",
    "input": "Vị trí của lễ hội với số lượng khán giả lớn nhất là gì?",
    "output": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của các lễ hội được tổ chức vào năm 2007 là gì?",
    "output": "SELECT Festival_Name FROM festival_detail WHERE YEAR  =  2007"
  },
  {
    "instruction": "",
    "input": "Số lượng khán giả trung bình cho các lễ hội là gì?",
    "output": "SELECT avg(Num_of_Audience) FROM festival_detail"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của ba lễ hội gần đây nhất.",
    "output": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi đề cử, hãy hiển thị tên của tác phẩm nghệ thuật và tên của lễ hội nơi nó được đề cử.",
    "output": "SELECT T2.Name ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị các loại tác phẩm nghệ thuật riêng biệt được đề cử trong các lễ hội năm 2007.",
    "output": "SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T3.Year  =  2007"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các tác phẩm nghệ thuật theo thứ tự tăng dần của năm họ được đề cử.",
    "output": "SELECT T2.Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID ORDER BY T3.Year"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các lễ hội có các tác phẩm nghệ thuật được đề cử loại \"Chương trình tài năng chương trình\".",
    "output": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T2.Type  =  \"Program Talent Show\""
  },
  {
    "instruction": "",
    "input": "Hiển thị ID và tên của các lễ hội có ít nhất hai đề cử cho các tác phẩm nghệ thuật.",
    "output": "SELECT T1.Festival_ID ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID, tên của mỗi lễ hội và số lượng tác phẩm nghệ thuật mà nó đã đề cử.",
    "output": "SELECT T1.Festival_ID ,  T3.Festival_Name ,  COUNT(*) FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các loại tác phẩm nghệ thuật khác nhau với số lượng tác phẩm nghệ thuật tương ứng của từng loại.",
    "output": "SELECT TYPE ,  COUNT(*) FROM artwork GROUP BY TYPE"
  },
  {
    "instruction": "",
    "input": "Liệt kê các loại tác phẩm nghệ thuật phổ biến nhất.",
    "output": "SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê năm trong đó có nhiều hơn một lễ hội.",
    "output": "SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các tác phẩm nghệ thuật không được đề cử.",
    "output": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN (SELECT Artwork_ID FROM nomination)"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng khán giả trong năm 2008 hoặc 2010.",
    "output": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "Tổng số khán giả đã đến thăm bất kỳ lễ hội nào là gì?",
    "output": "SELECT sum(Num_of_Audience) FROM festival_detail"
  },
  {
    "instruction": "",
    "input": "Trong năm nào có lễ hội cả bên trong 'Hoa Kỳ' và bên ngoài 'Hoa Kỳ'?",
    "output": "SELECT YEAR FROM festival_detail WHERE LOCATION  =  'United States' INTERSECT SELECT YEAR FROM festival_detail WHERE LOCATION != 'United States'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cơ sở?",
    "output": "SELECT count(*) FROM premises"
  },
  {
    "instruction": "",
    "input": "Tất cả các loại tiền đề riêng biệt là gì?",
    "output": "SELECT DISTINCT premises_type FROM premises"
  },
  {
    "instruction": "",
    "input": "Tìm các loại và chi tiết cho tất cả các cơ sở và đặt hàng theo loại tiền đề.",
    "output": "SELECT premises_type ,  premise_details FROM premises ORDER BY premises_type"
  },
  {
    "instruction": "",
    "input": "Hiển thị từng loại tiền đề và số lượng cơ sở trong loại đó.",
    "output": "SELECT premises_type ,  count(*) FROM premises GROUP BY premises_type"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các loại sản phẩm riêng biệt cùng với số lượng thư trong mỗi danh mục.",
    "output": "SELECT product_category ,  count(*) FROM mailshot_campaigns GROUP BY product_category"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và điện thoại của khách hàng mà không có bất kỳ mailshot.",
    "output": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và điện thoại cho khách hàng với một mailshot có mã kết quả 'không có phản hồi'.",
    "output": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'No Response'"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã kết quả của các bức thư cùng với số lượng thư trong mỗi mã kết quả.",
    "output": "SELECT outcome_code ,  count(*) FROM mailshot_customers GROUP BY outcome_code"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của khách hàng có ít nhất 2 thư với mã kết quả 'đặt hàng'.",
    "output": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE outcome_code  =  'Order' GROUP BY T1.customer_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của những khách hàng có nhiều thư nhất.",
    "output": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và phương thức thanh toán của khách hàng có cả hai bức thư theo kết quả 'đặt hàng' và tin tức trong kết quả 'không có phản hồi'.",
    "output": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Order' INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'No Response'"
  },
  {
    "instruction": "",
    "input": "Hiển thị loại tiền đề và mã loại địa chỉ cho tất cả các địa chỉ khách hàng.",
    "output": "SELECT T2.premises_type ,  T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id  =  T2.premise_id"
  },
  {
    "instruction": "",
    "input": "Các mã loại địa chỉ riêng biệt cho tất cả các địa chỉ khách hàng là gì?",
    "output": "SELECT DISTINCT address_type_code FROM customer_addresses"
  },
  {
    "instruction": "",
    "input": "Hiển thị phí vận chuyển và ID khách hàng cho đơn đặt hàng của khách hàng với trạng thái đơn đặt hàng bị hủy hoặc thanh toán.",
    "output": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Cancelled' OR order_status_code  =  'Paid'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của khách hàng có đơn đặt hàng với phương thức vận chuyển FedEx và trạng thái đặt hàng được trả.",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE shipping_method_code  =  'FedEx' AND order_status_code  =  'Paid'"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu khóa học?",
    "output": "SELECT count(*) FROM COURSE"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các khóa học.",
    "output": "SELECT count(*) FROM COURSE"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khóa học có nhiều hơn 2 tín chỉ?",
    "output": "SELECT count(*) FROM COURSE WHERE Credits  >  2"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các khóa học với hơn 2 tín chỉ.",
    "output": "SELECT count(*) FROM COURSE WHERE Credits  >  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên của các khóa học với 1 tín dụng?",
    "output": "SELECT CName FROM COURSE WHERE Credits  =  1"
  },
  {
    "instruction": "",
    "input": "Tên của các khóa học với 1 tín dụng là gì?",
    "output": "SELECT CName FROM COURSE WHERE Credits  =  1"
  },
  {
    "instruction": "",
    "input": "Những khóa học nào được dạy vào ngày MTW?",
    "output": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\""
  },
  {
    "instruction": "",
    "input": "Tên khóa học cho các khóa học được dạy trên MTW là gì?",
    "output": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\""
  },
  {
    "instruction": "",
    "input": "Số lượng phòng ban trong bộ phận \"là\"?",
    "output": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bộ phận trong bộ phận như?",
    "output": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\""
  },
  {
    "instruction": "",
    "input": "Điện thoại của các phòng ban trong phòng 268 là gì?",
    "output": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268"
  },
  {
    "instruction": "",
    "input": "Đưa điện thoại cho các phòng ban trong phòng 268.",
    "output": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng học sinh có ít nhất một lớp \"B\".",
    "output": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh đã có ít nhất một lớp \"B\"?",
    "output": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\""
  },
  {
    "instruction": "",
    "input": "Tìm điểm tối đa và tối thiểu cho tất cả các lớp thư.",
    "output": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION"
  },
  {
    "instruction": "",
    "input": "Điểm tối đa và tối thiểu là gì?",
    "output": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của các sinh viên có tên đầu tiên chứa chữ \"A\".",
    "output": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên cho các sinh viên có \"A\" trong tên đầu tiên của họ là gì?",
    "output": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'"
  },
  {
    "instruction": "",
    "input": "Tìm tên và tên cuối cùng của các khoa nam (giới tính là M) sống trong việc xây dựng NEB.",
    "output": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\""
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của các khoa với sex m và những người sống trong việc xây dựng neb là gì?",
    "output": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\""
  },
  {
    "instruction": "",
    "input": "Tìm các phòng của các khoa với giáo sư cấp bậc sống trong việc xây dựng NEB.",
    "output": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\""
  },
  {
    "instruction": "",
    "input": "Các phòng cho các thành viên của các giảng viên là giáo sư và sống trong việc xây dựng NEB là gì?",
    "output": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\""
  },
  {
    "instruction": "",
    "input": "Tìm tên bộ phận đang xây dựng \"Mergenthaler\".",
    "output": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\""
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận trong tòa nhà Mergenthaler là gì?",
    "output": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả thông tin về các khóa học được sắp xếp theo các khoản tín dụng theo thứ tự tăng dần.",
    "output": "SELECT * FROM COURSE ORDER BY Credits"
  },
  {
    "instruction": "",
    "input": "Tất cả các thông tin về các khóa học, được đặt hàng bởi các khoản tín dụng tăng dần?",
    "output": "SELECT * FROM COURSE ORDER BY Credits"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên khóa học của các khóa học được sắp xếp theo tín dụng.",
    "output": "SELECT CName FROM COURSE ORDER BY Credits"
  },
  {
    "instruction": "",
    "input": "Tên khóa học, được đặt hàng bởi các khoản tín dụng là gì?",
    "output": "SELECT CName FROM COURSE ORDER BY Credits"
  },
  {
    "instruction": "",
    "input": "Tìm tên của học sinh theo thứ tự giảm dần của tuổi.",
    "output": "SELECT Fname FROM STUDENT ORDER BY Age DESC"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của học sinh, được đặt hàng theo độ tuổi từ lớn nhất đến ít nhất là gì?",
    "output": "SELECT Fname FROM STUDENT ORDER BY Age DESC"
  },
  {
    "instruction": "",
    "input": "Tìm họ của học sinh nữ (giới tính là F) theo thứ tự giảm dần của tuổi.",
    "output": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của các sinh viên nữ, được đặt hàng theo tuổi giảm dần là gì?",
    "output": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC"
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của các khoa trong việc xây dựng Barton theo thứ tự chữ cái.",
    "output": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của các giảng viên trong việc xây dựng Barton, được sắp xếp theo họ là gì?",
    "output": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của các khoa của giáo sư cấp bậc theo thứ tự chữ cái.",
    "output": "SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên cho tất cả các giáo sư giảng viên, được đặt hàng theo tên là gì?",
    "output": "SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname"
  },
  {
    "instruction": "",
    "input": "Tìm tên của bộ phận có số lượng sinh viên lớn nhất được khai thác?",
    "output": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận với nhiều sinh viên nhất trong đó là gì?",
    "output": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của bộ phận không có sinh viên khai thác?",
    "output": "SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận không có sinh viên chuyên ngành đó là gì?",
    "output": "SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO"
  },
  {
    "instruction": "",
    "input": "Tìm tên của bộ phận có ít thành viên nhất.",
    "output": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của bộ phận với ít thành viên nhất là gì?",
    "output": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm cấp bậc của các giảng viên mà các khoa ít nhất thuộc về.",
    "output": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Xếp hạng giảng viên ít phổ biến nhất là gì?",
    "output": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của các giảng viên dạy 3 số khóa học hàng đầu là gì?",
    "output": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của 3 người hướng dẫn dạy nhiều khóa học nhất là gì?",
    "output": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Người hướng dẫn dạy số lượng lớn nhất của tòa nhà sống nhất?",
    "output": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tòa nhà mà người hướng dẫn dạy số lượng lớn nhất các khóa học sống.",
    "output": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của các khóa học có ít nhất năm đăng ký là gì?",
    "output": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5"
  },
  {
    "instruction": "",
    "input": "Đặt tên của các khóa học với ít nhất năm đăng ký.",
    "output": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5"
  },
  {
    "instruction": "",
    "input": "Tìm tên và họ của người hướng dẫn tất nhiên có tên khóa học",
    "output": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"COMPUTER LITERACY\""
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của người hướng dẫn có một khóa học có tên là Biết chữ máy tính là gì?",
    "output": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"COMPUTER LITERACY\""
  },
  {
    "instruction": "",
    "input": "Tìm tên khoa và phòng của khóa học giới thiệu về khoa học máy tính.",
    "output": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\""
  },
  {
    "instruction": "",
    "input": "Tên khoa và phòng cho khóa học giới thiệu về khoa học máy tính là gì?",
    "output": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\""
  },
  {
    "instruction": "",
    "input": "Tìm học sinh đầu tiên và họ và điểm lớp của tất cả các số đăng ký.",
    "output": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ và Gradepoints cho tất cả các số đăng ký là gì?",
    "output": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID"
  },
  {
    "instruction": "",
    "input": "Tìm tên học sinh riêng biệt của tất cả các học sinh có điểm điểm ít nhất 3,8 trong một khóa học.",
    "output": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên khác biệt cho học sinh có điểm 3,8 trở lên trong ít nhất một khóa học là gì?",
    "output": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầy đủ của các khoa là thành viên của bộ phận với số 520.",
    "output": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của các giảng viên là một phần của Khoa 520 là gì?",
    "output": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520"
  },
  {
    "instruction": "",
    "input": "Tên và tên cuối cùng của các sinh viên là trẻ vị thành niên trong khoa với DNO 140.",
    "output": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140"
  },
  {
    "instruction": "",
    "input": "Tên đầy đủ của học sinh Minoring trong Khoa 140 là gì?",
    "output": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140"
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của các khoa là thành viên của Khoa Khoa học Máy tính.",
    "output": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Computer Science\""
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của các giảng viên là một phần của Khoa Khoa học Máy tính là gì?",
    "output": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Computer Science\""
  },
  {
    "instruction": "",
    "input": "Tìm điểm trung bình của học sinh có tên cuối cùng là Smith.",
    "output": "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  \"Smith\""
  },
  {
    "instruction": "",
    "input": "Gradepoint trung bình cho sinh viên có họ Smith là gì?",
    "output": "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  \"Smith\""
  },
  {
    "instruction": "",
    "input": "Điểm tối đa và tối thiểu của học sinh sống ở NYC là bao nhiêu?",
    "output": "SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"NYC\""
  },
  {
    "instruction": "",
    "input": "Cung cấp cho các học sinh tối đa và tối thiểu cho sinh viên sống ở NYC?",
    "output": "SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"NYC\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các khóa học có 3 tín dụng hoặc 1 tín dụng nhưng 4 giờ.",
    "output": "SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4"
  },
  {
    "instruction": "",
    "input": "Tên của các khóa học cung cấp cho 3 tín dụng, hoặc 1 tín dụng và 4 giờ là gì?",
    "output": "SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các bộ phận thuộc Bộ phận là hoặc trong Bộ phận EN và trong việc xây dựng NEB.",
    "output": "SELECT DName FROM DEPARTMENT WHERE Division  =  \"AS\" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  \"EN\" AND Building  =  \"NEB\""
  },
  {
    "instruction": "",
    "input": "Tên của các bộ phận trong bộ phận là, hoặc trong bộ phận en và trong việc xây dựng neb là gì?",
    "output": "SELECT DName FROM DEPARTMENT WHERE Division  =  \"AS\" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  \"EN\" AND Building  =  \"NEB\""
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của sinh viên không đăng ký vào bất kỳ khóa học nào.",
    "output": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các sinh viên không được ghi danh vào các khóa học là gì?",
    "output": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)"
  },
  {
    "instruction": "",
    "input": "ID của ba sản phẩm hàng đầu được mua với số lượng lớn nhất là gì?",
    "output": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Cung cấp ID của ba sản phẩm được mua với số lượng lớn nhất.",
    "output": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "ID sản phẩm và loại sản phẩm của sản phẩm rẻ nhất là gì?",
    "output": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho ID và loại sản phẩm của sản phẩm với giá thấp nhất.",
    "output": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các loại sản phẩm khác nhau.",
    "output": "SELECT count(DISTINCT product_type_code) FROM products"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các loại sản phẩm riêng biệt.",
    "output": "SELECT count(DISTINCT product_type_code) FROM products"
  },
  {
    "instruction": "",
    "input": "Trả lại địa chỉ của khách hàng 10.",
    "output": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10"
  },
  {
    "instruction": "",
    "input": "Địa chỉ cho khách hàng có ID 10 là gì?",
    "output": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10"
  },
  {
    "instruction": "",
    "input": "ID nhân viên và giới tính của tất cả các nhân viên có chức danh công việc là người quản lý bộ phận là gì?",
    "output": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\""
  },
  {
    "instruction": "",
    "input": "Trả lại ID nhân viên và giới tính cho bất kỳ nhân viên nào với người quản lý bộ phận tiêu đề.",
    "output": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\""
  },
  {
    "instruction": "",
    "input": "Đối với mỗi phương thức thanh toán, trả lại số lượng khách hàng sử dụng nó.",
    "output": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng sử dụng mỗi phương thức thanh toán?",
    "output": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code"
  },
  {
    "instruction": "",
    "input": "ID của sản phẩm được đặt hàng thường xuyên nhất là gì?",
    "output": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cung cấp ID sản phẩm cho sản phẩm được đặt hàng thường xuyên nhất.",
    "output": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên, số điện thoại và địa chỉ email của khách hàng đã thực hiện số lượng đơn đặt hàng lớn nhất là gì?",
    "output": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về tên, số điện thoại và địa chỉ email cho khách hàng với nhiều đơn đặt hàng nhất.",
    "output": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Giá trung bình cho mỗi loại sản phẩm là bao nhiêu?",
    "output": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code"
  },
  {
    "instruction": "",
    "input": "Trả lại giá trung bình cho mỗi loại sản phẩm.",
    "output": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code"
  },
  {
    "instruction": "",
    "input": "Chuỗi cửa hàng phía nam có bao nhiêu cửa hàng bách hóa?",
    "output": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng cửa hàng mà chuỗi Nam có.",
    "output": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\""
  },
  {
    "instruction": "",
    "input": "Tên và tiêu đề công việc của các nhân viên được chỉ định mới nhất là gì?",
    "output": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên và tiêu đề công việc của nhân viên với ngày mới nhất được chỉ định.",
    "output": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi loại sản phẩm, tên và giá cho tất cả các sản phẩm được cung cấp bởi ID nhà cung cấp 3.",
    "output": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"
  },
  {
    "instruction": "",
    "input": "Trả lại loại sản phẩm, tên và giá cho các sản phẩm được cung cấp bởi Nhà cung cấp 3.",
    "output": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"
  },
  {
    "instruction": "",
    "input": "Trả về tên riêng biệt của khách hàng có trạng thái đặt hàng đang chờ xử lý, theo thứ tự ID khách hàng.",
    "output": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\" ORDER BY T2.customer_id"
  },
  {
    "instruction": "",
    "input": "Tên riêng biệt của khách hàng với trạng thái đặt hàng đang chờ xử lý, được sắp xếp theo ID khách hàng là gì?",
    "output": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\" ORDER BY T2.customer_id"
  },
  {
    "instruction": "",
    "input": "Tìm tên và địa chỉ của các khách hàng có cả đơn đặt hàng mới và đang chờ xử lý.",
    "output": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\""
  },
  {
    "instruction": "",
    "input": "Tên và địa chỉ của khách hàng có cả đơn đặt hàng mới và đang chờ xử lý là gì?",
    "output": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\""
  },
  {
    "instruction": "",
    "input": "ID trả lại của tất cả các sản phẩm được cung cấp bởi ID nhà cung cấp 2 và đắt hơn giá trung bình của tất cả các sản phẩm.",
    "output": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)"
  },
  {
    "instruction": "",
    "input": "ID của sản phẩm từ nhà cung cấp có ID 2, đắt hơn giá trung bình trên tất cả các sản phẩm là gì?",
    "output": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)"
  },
  {
    "instruction": "",
    "input": "ID và tên của cửa hàng bách hóa có cả bộ phận tiếp thị và quản lý là gì?",
    "output": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\""
  },
  {
    "instruction": "",
    "input": "ID và tên của các cửa hàng bách hóa với cả bộ phận tiếp thị và quản lý là gì?",
    "output": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\""
  },
  {
    "instruction": "",
    "input": "ID của hai chuỗi cửa hàng bách hóa với số lượng lớn nhất các cửa hàng bách hóa là gì?",
    "output": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2"
  },
  {
    "instruction": "",
    "input": "Trả lại ID của hai chuỗi cửa hàng bách hóa với nhiều cửa hàng bách hóa nhất.",
    "output": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2"
  },
  {
    "instruction": "",
    "input": "ID của bộ phận có số lượng nhân viên ít nhất là gì?",
    "output": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại ID của bộ phận với ít nhiệm vụ nhân viên nhất.",
    "output": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi loại sản phẩm, trả lại giá tối đa và tối thiểu.",
    "output": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code"
  },
  {
    "instruction": "",
    "input": "Giá sản phẩm tối đa và tối thiểu cho từng loại sản phẩm là gì?",
    "output": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code"
  },
  {
    "instruction": "",
    "input": "Tìm loại sản phẩm có giá trung bình cao hơn giá trung bình của tất cả các sản phẩm.",
    "output": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)"
  },
  {
    "instruction": "",
    "input": "Mã của loại sản phẩm với giá trung bình cao hơn giá trung bình của tất cả các sản phẩm là bao nhiêu?",
    "output": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)"
  },
  {
    "instruction": "",
    "input": "Tìm ID và tên của các nhân viên đã được chỉ định trong thời gian ngắn nhất.",
    "output": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID và tên của các nhân viên đã được chỉ định ít nhất thời gian?",
    "output": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về tên và ID của tất cả các sản phẩm có giá từ 600 đến 700.",
    "output": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700"
  },
  {
    "instruction": "",
    "input": "Tên và ID của sản phẩm có giá từ 600 đến 700 là gì?",
    "output": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700"
  },
  {
    "instruction": "",
    "input": "Tìm ID của tất cả các khách hàng riêng biệt đã đặt hàng sau một số đơn đặt hàng bị hủy bỏ.",
    "output": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")"
  },
  {
    "instruction": "",
    "input": "ID riêng biệt của khách hàng đã đặt hàng sau khi có đơn đặt hàng nào bị hủy bỏ là gì?",
    "output": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")"
  },
  {
    "instruction": "",
    "input": "ID của nhân viên đã có một nhiệm vụ của bộ phận nhân viên sớm hơn bất kỳ nhân viên giáo sĩ nào là gì?",
    "output": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')"
  },
  {
    "instruction": "",
    "input": "Trả lại ID của nhân viên có nhiệm vụ của bộ phận nhân viên sớm hơn bất kỳ nhân viên văn thư nào.",
    "output": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')"
  },
  {
    "instruction": "",
    "input": "Tên và ID của khách hàng có địa chỉ chứa TN là gì?",
    "output": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\""
  },
  {
    "instruction": "",
    "input": "Trả về tên và ID của khách hàng có TN trong địa chỉ của họ.",
    "output": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\""
  },
  {
    "instruction": "",
    "input": "Trả lại tên và giới tính của các nhân viên được chỉ định vào năm 2016.",
    "output": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\""
  },
  {
    "instruction": "",
    "input": "Tên và giới tính của nhân viên được chỉ định trong năm 2016 là gì?",
    "output": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của nhân viên đã được giao nhiều công việc.",
    "output": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tên của nhân viên đã được giao nhiều công việc là gì?",
    "output": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và số điện thoại của tất cả các nhà cung cấp theo thứ tự bảng chữ cái của địa chỉ của họ.",
    "output": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details"
  },
  {
    "instruction": "",
    "input": "Tên và số điện thoại cho tất cả các nhà cung cấp, được sắp xếp theo thứ tự bảng chữ cái của họ được địa chỉ là gì?",
    "output": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details"
  },
  {
    "instruction": "",
    "input": "Số điện thoại của tất cả khách hàng và nhà cung cấp là gì.",
    "output": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers"
  },
  {
    "instruction": "",
    "input": "Trả lại số điện thoại cho tất cả khách hàng và nhà cung cấp.",
    "output": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers"
  },
  {
    "instruction": "",
    "input": "Trả lại ID của tất cả các sản phẩm được đặt hàng hơn ba lần hoặc được cung cấp hơn 80000.",
    "output": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các sản phẩm được đặt hàng hơn 3 lần hoặc có số tiền tích lũy được mua trên 80000?",
    "output": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000"
  },
  {
    "instruction": "",
    "input": "ID và tên của các sản phẩm có giá thấp hơn 600 hoặc cao hơn 900 là gì?",
    "output": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900"
  },
  {
    "instruction": "",
    "input": "Cung cấp ID và tên của các sản phẩm có giá thấp hơn 600 hoặc cao hơn 900.",
    "output": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900"
  },
  {
    "instruction": "",
    "input": "Tìm ID của các nhà cung cấp có số tiền trung bình được mua cho mỗi sản phẩm là trên 50000 hoặc dưới 30000.",
    "output": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000"
  },
  {
    "instruction": "",
    "input": "ID của các nhà cung cấp có số tiền trung bình được mua trên 50000 hoặc dưới 30000 là gì?",
    "output": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000"
  },
  {
    "instruction": "",
    "input": "Số tiền trung bình đã mua và giá trị được mua cho nhà cung cấp cung cấp nhiều sản phẩm nhất.",
    "output": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Trả lại tổng số tiền trung bình đã mua và tổng giá trị đã mua cho nhà cung cấp cung cấp số lượng sản phẩm lớn nhất.",
    "output": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Mã khách hàng lớn nhất và nhỏ nhất là gì?",
    "output": "SELECT max(customer_code) ,  min(customer_code) FROM Customers"
  },
  {
    "instruction": "",
    "input": "Trả lại mã khách hàng tối đa và tối thiểu.",
    "output": "SELECT max(customer_code) ,  min(customer_code) FROM Customers"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các khách hàng riêng biệt đã mua bàn phím.",
    "output": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\""
  },
  {
    "instruction": "",
    "input": "Tên riêng biệt của khách hàng đã mua bàn phím là gì?",
    "output": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\""
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên và số điện thoại của tất cả các nhà cung cấp riêng biệt cung cấp quần jean màu đỏ.",
    "output": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\""
  },
  {
    "instruction": "",
    "input": "Các tên và số điện thoại riêng biệt cho các nhà cung cấp có quần jean đỏ là gì?",
    "output": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\""
  },
  {
    "instruction": "",
    "input": "Giá sản phẩm cao nhất và thấp nhất, được nhóm lại và đặt hàng theo thứ tự bảng chữ cái theo loại sản phẩm là gì?",
    "output": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code"
  },
  {
    "instruction": "",
    "input": "Cung cấp giá sản phẩm tối đa và tối thiểu cho từng loại sản phẩm, được nhóm và đặt hàng theo loại sản phẩm.",
    "output": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID đặt hàng, ID khách hàng cho các đơn đặt hàng ở trạng thái bị hủy, được đặt hàng theo ngày đặt hàng của họ.",
    "output": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date"
  },
  {
    "instruction": "",
    "input": "ID đặt hàng và ID khách hàng cho các đơn đặt hàng đã bị hủy, được sắp xếp theo ngày đặt hàng của họ là gì?",
    "output": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sản phẩm được mua bởi ít nhất hai khách hàng riêng biệt.",
    "output": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2"
  },
  {
    "instruction": "",
    "input": "Các tên riêng biệt của các sản phẩm được mua bởi ít nhất hai khách hàng khác nhau là gì?",
    "output": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng đã mua bởi ít nhất ba sản phẩm riêng biệt.",
    "output": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3"
  },
  {
    "instruction": "",
    "input": "Tên riêng biệt của khách hàng đã mua ít nhất ba sản phẩm khác nhau là gì?",
    "output": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3"
  },
  {
    "instruction": "",
    "input": "Tìm tên và giới tính của các nhân viên đã được giao công việc của nhân viên bán hàng nhưng không bao giờ nhân viên giáo sĩ.",
    "output": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\""
  },
  {
    "instruction": "",
    "input": "Tên và giới tính của nhân viên đã giữ nhân viên bán hàng, nhưng không bao giờ nhân viên giáo sĩ?",
    "output": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\""
  },
  {
    "instruction": "",
    "input": "Tìm ID và tên của khách hàng có địa chỉ chứa trạng thái WY và không sử dụng thẻ tín dụng để thanh toán.",
    "output": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\""
  },
  {
    "instruction": "",
    "input": "ID và tên của khách hàng có địa chỉ có chứa WY là gì và ai không sử dụng thẻ tín dụng để thanh toán?",
    "output": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\""
  },
  {
    "instruction": "",
    "input": "Tìm giá trung bình của tất cả quần áo sản phẩm.",
    "output": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'"
  },
  {
    "instruction": "",
    "input": "Giá quần áo trung bình là bao nhiêu?",
    "output": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của sản phẩm phần cứng đắt nhất.",
    "output": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của sản phẩm phần cứng với giá cả lớn nhất là gì?",
    "output": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu máy bay?",
    "output": "SELECT count(*) FROM aircraft"
  },
  {
    "instruction": "",
    "input": "Số lượng máy bay là bao nhiêu?",
    "output": "SELECT count(*) FROM aircraft"
  },
  {
    "instruction": "",
    "input": "Liệt kê mô tả của tất cả các máy bay.",
    "output": "SELECT Description FROM aircraft"
  },
  {
    "instruction": "",
    "input": "Các mô tả cho máy bay là gì?",
    "output": "SELECT Description FROM aircraft"
  },
  {
    "instruction": "",
    "input": "Số lượng hành khách quốc tế trung bình của tất cả các sân bay là bao nhiêu?",
    "output": "SELECT avg(International_Passengers) FROM airport"
  },
  {
    "instruction": "",
    "input": "Số lượng hành khách quốc tế trung bình cho một sân bay là bao nhiêu?",
    "output": "SELECT avg(International_Passengers) FROM airport"
  },
  {
    "instruction": "",
    "input": "Số lượng hành khách quốc tế và trong nước của sân bay có tên London là \"Heathrow\" là gì?",
    "output": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu hành khách quốc tế và trong nước ở sân bay London Heathrow?",
    "output": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\""
  },
  {
    "instruction": "",
    "input": "Tổng số hành khách trong nước của các sân bay có chứa từ \"London\".",
    "output": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\""
  },
  {
    "instruction": "",
    "input": "Tổng số hành khách trong nước tại tất cả các sân bay ở London là gì?",
    "output": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\""
  },
  {
    "instruction": "",
    "input": "Số lượng hành khách quá cảnh tối đa và tối thiểu là gì của tất cả các sân bay.",
    "output": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport"
  },
  {
    "instruction": "",
    "input": "Số lượng hành khách vận chuyển tối đa và tối thiểu cho tất cả các sân bay là bao nhiêu?",
    "output": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport"
  },
  {
    "instruction": "",
    "input": "Tên của các phi công từ 25 tuổi trở lên là gì?",
    "output": "SELECT Name FROM pilot WHERE Age  >=  25"
  },
  {
    "instruction": "",
    "input": "Tên của mỗi phi công ít nhất 25 tuổi là gì?",
    "output": "SELECT Name FROM pilot WHERE Age  >=  25"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên thí điểm theo thứ tự bảng chữ cái tăng dần.",
    "output": "SELECT Name FROM pilot ORDER BY Name ASC"
  },
  {
    "instruction": "",
    "input": "Tên của các phi công theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT Name FROM pilot ORDER BY Name ASC"
  },
  {
    "instruction": "",
    "input": "Danh sách tên của tất cả các phi công từ 30 tuổi trở xuống theo thứ tự bảng chữ cái giảm dần.",
    "output": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các phi công 30 tuổi hoặc trẻ theo thứ tự bảng chữ cái giảm dần là gì?",
    "output": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị tên của các máy bay liên quan đến sân bay với tên \"London Gatwick\".",
    "output": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các máy bay liên quan đến sân bay London Gatwick là gì?",
    "output": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\""
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị tên và mô tả về máy bay liên quan đến các sân bay có tổng số hành khách lớn hơn 10000000.",
    "output": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000"
  },
  {
    "instruction": "",
    "input": "Tên và mô tả về máy bay liên quan đến một sân bay có tổng số hành khách hơn 10000000?",
    "output": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000"
  },
  {
    "instruction": "",
    "input": "Tổng số hành khách trung bình của các sân bay có liên quan đến máy bay \"Robinson R-22\" là bao nhiêu?",
    "output": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\""
  },
  {
    "instruction": "",
    "input": "Tổng số hành khách trung bình cho tất cả các sân bay mà máy bay \"Robinson R-22\" ghé thăm là bao nhiêu?",
    "output": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\""
  },
  {
    "instruction": "",
    "input": "Vui lòng liệt kê vị trí và tên máy bay chiến thắng.",
    "output": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft"
  },
  {
    "instruction": "",
    "input": "Vị trí và tên của máy bay chiến thắng là gì?",
    "output": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của chiếc máy bay đã được đặt tên là máy bay chiến thắng nhiều lần nhất.",
    "output": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của máy bay đã giành được một giải thưởng nhiều nhất là gì?",
    "output": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của máy bay và số lần nó thắng trận đấu.",
    "output": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi chiếc máy bay đã giành được một giải thưởng, tên của nó là gì và bao nhiêu thời gian đã giành được?",
    "output": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft"
  },
  {
    "instruction": "",
    "input": "Danh sách tên của tất cả các phi công theo thứ tự giảm dần của tuổi.",
    "output": "SELECT Name FROM pilot ORDER BY Age DESC"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các phi công được liệt kê bởi tuổi giảm dần là gì?",
    "output": "SELECT Name FROM pilot ORDER BY Age DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của máy bay và chiến thắng trận đấu ít nhất hai lần.",
    "output": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các máy bay đã thắng một trận đấu ít nhất hai lần là gì?",
    "output": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của máy bay và điều đó không thắng bất kỳ trận đấu nào.",
    "output": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các máy bay chưa bao giờ thắng bất kỳ trận đấu nào?",
    "output": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các máy bay có liên quan đến cả một sân bay có tên là \"London Heathrow\" và một sân bay có tên là \"London Gatwick\"",
    "output": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các máy bay có liên quan đến cả hai sân bay London Heathrow và Gatwick là gì?",
    "output": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả thông tin về sân bay có số lượng hành khách quốc tế lớn nhất.",
    "output": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tất cả thông tin trên sân bay với số lượng hành khách quốc tế lớn nhất là gì?",
    "output": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên và tuổi của phi công đã giành được nhiều lần nhất trong số các phi công dưới 30 tuổi.",
    "output": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và tuổi của phi công trẻ hơn 30 tuổi, người đã giành được nhiều lần nhất?",
    "output": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và tuổi của phi công chiến thắng trẻ nhất là gì?",
    "output": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Phi công chiến thắng trẻ nhất bao nhiêu tuổi và tên của họ là gì?",
    "output": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các phi công đã không thắng các trận đấu được tổ chức tại đất nước Úc.",
    "output": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')"
  },
  {
    "instruction": "",
    "input": "Tên của các phi công chưa thắng bất kỳ trận đấu nào ở Úc là gì?",
    "output": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')"
  },
  {
    "instruction": "",
    "input": "Mỗi tài sản có bao nhiêu cư dân?Liệt kê ID tài sản và số lượng thường trú.",
    "output": "SELECT T1.property_id ,  count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.property_id"
  },
  {
    "instruction": "",
    "input": "Các loại dịch vụ riêng biệt được cung cấp bởi tổ chức có chi tiết 'Denesik và Sons Party' là gì?",
    "output": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id  =  T2.organization_id WHERE T2.organization_details  =  'Denesik and Sons Party'"
  },
  {
    "instruction": "",
    "input": "Mỗi cư dân yêu cầu có bao nhiêu dịch vụ?Liệt kê ID thường trú, chi tiết và số lượng theo thứ tự giảm dần của số đếm.",
    "output": "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC"
  },
  {
    "instruction": "",
    "input": "Số lượng tối đa mà một dịch vụ nhất định được cung cấp là bao nhiêu?Liệt kê ID dịch vụ, chi tiết và số.",
    "output": "SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID và loại của mỗi thứ, và các chi tiết của tổ chức sở hữu nó.",
    "output": "SELECT T1.thing_id ,  T1.type_of_Thing_Code ,  T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id  =  T2.organization_id"
  },
  {
    "instruction": "",
    "input": "ID và chi tiết của khách hàng có ít nhất 3 sự kiện là gì?",
    "output": "SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "Ngày của mỗi khách hàng là gì và ID khách hàng tương ứng là gì?",
    "output": "SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id"
  },
  {
    "instruction": "",
    "input": "Những sự kiện nào có số lượng ghi chú từ một và ba?Liệt kê ID sự kiện và ID thuộc tính.",
    "output": "SELECT T1.Customer_Event_ID  ,  T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID  =  T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count(*) BETWEEN 1 AND 3"
  },
  {
    "instruction": "",
    "input": "ID riêng biệt và loại thứ có trạng thái 'đóng' hoặc có bản ghi trạng thái trước ngày '2017-06-19 02:59:21'",
    "output": "SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu địa điểm riêng biệt có những thứ có chi tiết dịch vụ 'không hài lòng' được đặt ở?",
    "output": "SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Unsatisfied'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mã trạng thái khác nhau của mọi thứ?",
    "output": "SELECT count(DISTINCT Status_of_Thing_Code) FROM Timed_Status_of_Things"
  },
  {
    "instruction": "",
    "input": "Những tổ chức nào không phải là tổ chức phụ huynh của người khác?Liệt kê ID tổ chức.",
    "output": "SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations"
  },
  {
    "instruction": "",
    "input": "Khi nào là ngày cuối cùng mà bất kỳ cư dân nào chuyển đến?",
    "output": "SELECT max(date_moved_in) FROM Residents"
  },
  {
    "instruction": "",
    "input": "Các chi tiết cư trú có chứa \"miss 'là gì?",
    "output": "SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%'"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID sự kiện khách hàng và chuyển động tương ứng trong ngày và ID thuộc tính.",
    "output": "SELECT customer_event_id ,  date_moved_in ,  property_id FROM customer_events"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng không có bất kỳ sự kiện nào?",
    "output": "SELECT count(*) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events )"
  },
  {
    "instruction": "",
    "input": "Động thái khác biệt trong ngày của cư dân là gì?",
    "output": "SELECT DISTINCT date_moved_in FROM residents"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường học?",
    "output": "SELECT count(*) FROM school"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng trường học.",
    "output": "SELECT count(*) FROM school"
  },
  {
    "instruction": "",
    "input": "Liệt kê các địa điểm của các trường theo thứ tự tăng dần của tuyển sinh.",
    "output": "SELECT LOCATION FROM school ORDER BY Enrollment ASC"
  },
  {
    "instruction": "",
    "input": "Danh sách các địa điểm trường học được sắp xếp theo thứ tự tăng dần của việc đăng ký trường học là gì?",
    "output": "SELECT LOCATION FROM school ORDER BY Enrollment ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê các địa điểm của các trường theo thứ tự giảm dần của năm thành lập.",
    "output": "SELECT LOCATION FROM school ORDER BY Founded DESC"
  },
  {
    "instruction": "",
    "input": "Danh sách các địa điểm trường học được sắp xếp theo thứ tự giảm dần của Foundation Foundation là gì?",
    "output": "SELECT LOCATION FROM school ORDER BY Founded DESC"
  },
  {
    "instruction": "",
    "input": "Việc ghi danh của các trường có giáo phái không phải là \"Công giáo\" là gì?",
    "output": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\""
  },
  {
    "instruction": "",
    "input": "Liệt kê việc đăng ký cho mỗi trường không có \"Công giáo\" là giáo phái.",
    "output": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\""
  },
  {
    "instruction": "",
    "input": "Ghi danh trung bình của các trường học là gì?",
    "output": "SELECT avg(Enrollment) FROM school"
  },
  {
    "instruction": "",
    "input": "Lấy trung bình của tuyển sinh của trường.",
    "output": "SELECT avg(Enrollment) FROM school"
  },
  {
    "instruction": "",
    "input": "Các đội của người chơi, được sắp xếp theo thứ tự bảng chữ cái tăng dần là gì?",
    "output": "SELECT Team FROM player ORDER BY Team ASC"
  },
  {
    "instruction": "",
    "input": "Tìm nhóm của mỗi người chơi và sắp xếp chúng theo thứ tự bảng chữ cái tăng dần.",
    "output": "SELECT Team FROM player ORDER BY Team ASC"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu vị trí khác nhau của người chơi?",
    "output": "SELECT count(DISTINCT POSITION) FROM player"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng vị trí người chơi riêng biệt.",
    "output": "SELECT count(DISTINCT POSITION) FROM player"
  },
  {
    "instruction": "",
    "input": "Tìm đội của người chơi ở độ tuổi cao nhất.",
    "output": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đội nào có cầu thủ lâu đời nhất?",
    "output": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các đội của các cầu thủ có 5 lứa tuổi lớn nhất.",
    "output": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Các đội có 5 người chơi lâu đời nhất là gì?",
    "output": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi người chơi, hãy cho đội và vị trí của trường họ thuộc về.",
    "output": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID"
  },
  {
    "instruction": "",
    "input": "Đội và vị trí của trường mỗi người chơi thuộc về?",
    "output": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị vị trí của các trường có hơn 1 người chơi.",
    "output": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Những trường nào có nhiều hơn 1 người chơi?Cho tôi các địa điểm trường học.",
    "output": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Hiển thị mệnh giá của trường có nhiều người chơi nhất.",
    "output": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mệnh giá của trường mà người chơi nhiều nhất thuộc về là gì?",
    "output": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị địa điểm và biệt danh của các trường.",
    "output": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID"
  },
  {
    "instruction": "",
    "input": "Vị trí và biệt danh của mỗi trường là gì?",
    "output": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các mệnh giá khác nhau và số lượng trường tương ứng.",
    "output": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi mệnh giá, trả lại mệnh giá và số lượng các trường học với giáo phái đó.",
    "output": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các mệnh giá khác nhau và số trường tương ứng theo thứ tự giảm dần.",
    "output": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC"
  },
  {
    "instruction": "",
    "input": "Đơn đặt hàng các mệnh giá theo thứ tự giảm dần của số lượng trường học với giáo phái.Trả lại từng mệnh giá với số lượng trường học.",
    "output": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê màu trường của trường có số lượng tuyển sinh lớn nhất.",
    "output": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Màu trường của trường có số lượng tuyển sinh lớn nhất là gì?",
    "output": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các địa điểm của các trường không có bất kỳ người chơi.",
    "output": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)"
  },
  {
    "instruction": "",
    "input": "Những trường nào không có người chơi?Cho tôi các địa điểm trường học.",
    "output": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)"
  },
  {
    "instruction": "",
    "input": "Hiển thị mệnh giá được chia sẻ bởi các trường được thành lập trước năm 1890 và các trường được thành lập sau năm 1900",
    "output": "SELECT Denomination FROM school WHERE Founded  <  1890 INTERSECT SELECT Denomination FROM school WHERE Founded  >  1900"
  },
  {
    "instruction": "",
    "input": "Các giáo phái được sử dụng bởi cả hai trường được thành lập trước năm 1890 và các trường được thành lập sau năm 1900 là gì?",
    "output": "SELECT Denomination FROM school WHERE Founded  <  1890 INTERSECT SELECT Denomination FROM school WHERE Founded  >  1900"
  },
  {
    "instruction": "",
    "input": "Hiển thị biệt danh của các trường học không có trong Phân khu 1.",
    "output": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\""
  },
  {
    "instruction": "",
    "input": "Biệt danh của các trường có bộ phận không phải là 1 là gì?",
    "output": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\""
  },
  {
    "instruction": "",
    "input": "Hiển thị mệnh giá được chia sẻ bởi nhiều trường học.",
    "output": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Các giáo phái có nhiều hơn một trường học?",
    "output": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các tên quận riêng biệt được đặt hàng bởi khu vực thành phố giảm dần.",
    "output": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC"
  },
  {
    "instruction": "",
    "input": "Các tên quận khác nhau theo thứ tự khu vực thành phố giảm dần là gì?",
    "output": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC"
  },
  {
    "instruction": "",
    "input": "Tìm danh sách kích thước trang có hơn 3 sản phẩm được liệt kê",
    "output": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3"
  },
  {
    "instruction": "",
    "input": "Kích thước trang tối đa cho mọi thứ có hơn 3 sản phẩm được liệt kê là gì?",
    "output": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3"
  },
  {
    "instruction": "",
    "input": "Tìm tên và dân số của Quận với dân số từ năm 20000 đến 200000",
    "output": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000"
  },
  {
    "instruction": "",
    "input": "Tên quận và dân số thành phố cho tất cả các quận từ 200.000 đến 2.000.000 cư dân là gì?",
    "output": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000"
  },
  {
    "instruction": "",
    "input": "Tìm tên tất cả các quận có diện tích thành phố lớn hơn 10 hoặc dân số lớn hơn 100000",
    "output": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các quận có khu vực thành phố lớn hơn 10 hoặc có hơn 100000 người sống ở đó là gì?",
    "output": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000"
  },
  {
    "instruction": "",
    "input": "Quận nào có dân số lớn nhất?",
    "output": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của quận với nhiều cư dân nhất là gì?",
    "output": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Quận nào có diện tích ít nhất?",
    "output": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của quận với khu vực nhỏ nhất là gì?",
    "output": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tổng dân số của 3 quận hàng đầu với khu vực lớn nhất.",
    "output": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tổng số cư dân cho các quận có 3 khu vực lớn nhất là bao nhiêu?",
    "output": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các loại cửa hàng và số lượng của chúng.",
    "output": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi loại cửa hàng, có bao nhiêu trong số chúng ở đó?",
    "output": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các cửa hàng ở quận Khanewal.",
    "output": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các cửa hàng nằm ở quận Khanewal là gì?",
    "output": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các cửa hàng trong quận với dân số nhất.",
    "output": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các cửa hàng trong quận lớn nhất theo dân số là gì?",
    "output": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Thành phố nào là trụ sở của cửa hàng có tên là \"Blackville\"?",
    "output": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\""
  },
  {
    "instruction": "",
    "input": "Trụ sở chính của cửa hàng Blackville là thành phố nào?",
    "output": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng cửa hàng trong mỗi thành phố.",
    "output": "SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cửa hàng có trụ sở tại mỗi thành phố?",
    "output": "SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city"
  },
  {
    "instruction": "",
    "input": "Tìm thành phố với số lượng cửa hàng nhiều nhất.",
    "output": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Thành phố có số lượng cửa hàng hàng đầu nhất là gì?",
    "output": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các trang trung bình mỗi phút là gì?",
    "output": "SELECT avg(pages_per_minute_color) FROM product"
  },
  {
    "instruction": "",
    "input": "Số lượng trang trung bình mỗi phút là bao nhiêu?",
    "output": "SELECT avg(pages_per_minute_color) FROM product"
  },
  {
    "instruction": "",
    "input": "Những sản phẩm nào có sẵn tại cửa hàng có tên \"Miramichi\"?",
    "output": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\""
  },
  {
    "instruction": "",
    "input": "Những sản phẩm nào được bán tại cửa hàng tên Miramichi?",
    "output": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\""
  },
  {
    "instruction": "",
    "input": "Tìm các sản phẩm có kích thước trang tối đa là \"A4\" và các trang mỗi phút màu nhỏ hơn 5.",
    "output": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5"
  },
  {
    "instruction": "",
    "input": "Các sản phẩm có kích thước trang tối đa A4 cũng có một trang mỗi phút nhỏ hơn 5?",
    "output": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5"
  },
  {
    "instruction": "",
    "input": "Tìm sản phẩm có kích thước trang tối đa là \"A4\" hoặc các trang mỗi phút màu nhỏ hơn 5.",
    "output": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5"
  },
  {
    "instruction": "",
    "input": "Các sản phẩm có kích thước trang tối đa bằng A4 hoặc một trang mỗi phút nhỏ hơn 5?",
    "output": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các sản phẩm có tên chứa từ \"máy quét\".",
    "output": "SELECT product FROM product WHERE product LIKE \"%Scanner%\""
  },
  {
    "instruction": "",
    "input": "Tất cả các sản phẩm có tên bao gồm \"Máy quét\" phụ là gì?",
    "output": "SELECT product FROM product WHERE product LIKE \"%Scanner%\""
  },
  {
    "instruction": "",
    "input": "Tìm kích thước trang tối đa nổi bật nhất trong số tất cả các sản phẩm.",
    "output": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Kích thước trang tối đa phổ biến nhất là gì?",
    "output": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sản phẩm không sử dụng kích thước trang tối đa được sử dụng thường xuyên nhất.",
    "output": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các sản phẩm không phải là kích thước trang tối đa được sử dụng thường xuyên nhất là gì?",
    "output": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tìm tổng dân số của các quận nơi khu vực này lớn hơn khu vực thành phố trung bình.",
    "output": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)"
  },
  {
    "instruction": "",
    "input": "Tổng dân số cho tất cả các quận có diện tích lớn hơn khu vực thành phố trung bình là bao nhiêu?",
    "output": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các quận nơi có cả cửa hàng cửa hàng thành phố và cửa hàng làng.",
    "output": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\""
  },
  {
    "instruction": "",
    "input": "Tên của các quận có cả cửa hàng kiểu cửa hàng trung tâm và làng cửa hàng là gì?",
    "output": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\""
  },
  {
    "instruction": "",
    "input": "Tổng số lượng tuyển sinh của tất cả các trường đại học là bao nhiêu?",
    "output": "SELECT sum(enr) FROM College"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên được ghi danh vào đại học?",
    "output": "SELECT sum(enr) FROM College"
  },
  {
    "instruction": "",
    "input": "Số đăng ký trung bình là gì?",
    "output": "SELECT avg(enr) FROM College"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên, trung bình, mỗi trường đại học đã ghi danh?",
    "output": "SELECT avg(enr) FROM College"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu trường đại học?",
    "output": "SELECT count(*) FROM College"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường đại học khác nhau?",
    "output": "SELECT count(*) FROM College"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người chơi có hơn 1000 giờ đào tạo?",
    "output": "SELECT count(*) FROM Player WHERE HS  >  1000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu người chơi khác nhau được đào tạo trong hơn 1000 giờ?",
    "output": "SELECT count(*) FROM Player WHERE HS  >  1000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường đại học có hơn 15000 sinh viên?",
    "output": "SELECT count(*) FROM College WHERE enr  >  15000"
  },
  {
    "instruction": "",
    "input": "Số lượng các trường đại học có dân số sinh viên lớn hơn 15000 là bao nhiêu?",
    "output": "SELECT count(*) FROM College WHERE enr  >  15000"
  },
  {
    "instruction": "",
    "input": "Giờ đào tạo trung bình của tất cả người chơi là gì?",
    "output": "SELECT avg(HS) FROM Player"
  },
  {
    "instruction": "",
    "input": "Người chơi trung bình đào tạo bao nhiêu giờ?",
    "output": "SELECT avg(HS) FROM Player"
  },
  {
    "instruction": "",
    "input": "Tìm tên và giờ đào tạo của người chơi có giờ dưới 1500.",
    "output": "SELECT pName ,  HS FROM Player WHERE HS  <  1500"
  },
  {
    "instruction": "",
    "input": "Tên và số giờ được đào tạo cho mỗi người chơi đào tạo trong ít hơn 1500 giờ là gì?",
    "output": "SELECT pName ,  HS FROM Player WHERE HS  <  1500"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường đại học khác nhau tham dự bài kiểm tra thử sức?",
    "output": "SELECT count(DISTINCT cName) FROM tryout"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường đại học khác nhau đã được đại diện tại thử việc?",
    "output": "SELECT count(DISTINCT cName) FROM tryout"
  },
  {
    "instruction": "",
    "input": "Các loại vị trí người chơi duy nhất trong thử nghiệm là gì?",
    "output": "SELECT count(DISTINCT pPos) FROM tryout"
  },
  {
    "instruction": "",
    "input": "Các loại vị trí người chơi khác nhau là gì?",
    "output": "SELECT count(DISTINCT pPos) FROM tryout"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên được chấp nhận sau khi thử sức?",
    "output": "SELECT count(*) FROM tryout WHERE decision  =  'yes'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên nhận được có từ thử việc?",
    "output": "SELECT count(*) FROM tryout WHERE decision  =  'yes'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên đang đóng vai trò của thủ môn?",
    "output": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'"
  },
  {
    "instruction": "",
    "input": "Số lượng sinh viên chơi như một thủ môn là bao nhiêu?",
    "output": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'"
  },
  {
    "instruction": "",
    "input": "Tìm giờ đào tạo tối đa, trung bình và tối thiểu của tất cả người chơi.",
    "output": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player"
  },
  {
    "instruction": "",
    "input": "Trung bình, tối đa và tối thiểu cho số giờ đào tạo là bao nhiêu?",
    "output": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player"
  },
  {
    "instruction": "",
    "input": "Ghi danh trung bình của các trường đại học trong tiểu bang FL là gì?",
    "output": "SELECT avg(enr) FROM College WHERE state  =  'FL'"
  },
  {
    "instruction": "",
    "input": "Số lượng sinh viên trung bình đăng ký vào các trường cao đẳng Florida là bao nhiêu?",
    "output": "SELECT avg(enr) FROM College WHERE state  =  'FL'"
  },
  {
    "instruction": "",
    "input": "Tên của những người chơi có giờ đào tạo là gì từ 500 đến 1500 là gì?",
    "output": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500"
  },
  {
    "instruction": "",
    "input": "Tên của những người chơi đào tạo từ 500 đến 1500 giờ là gì?",
    "output": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500"
  },
  {
    "instruction": "",
    "input": "Tìm người chơi có tên chứa chữ 'A'.",
    "output": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'"
  },
  {
    "instruction": "",
    "input": "Ai là người chơi có tên chứa chữ A?",
    "output": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'"
  },
  {
    "instruction": "",
    "input": "Tìm tên, tuyển sinh của các trường đại học có quy mô lớn hơn 10000 và vị trí ở bang LA.",
    "output": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\""
  },
  {
    "instruction": "",
    "input": "Các tên và số lượng ghi danh cho các trường đại học có hơn 10000 người đăng ký và được đặt tại Louisiana là gì?",
    "output": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả thông tin về trường đại học được sắp xếp theo số đăng ký theo thứ tự tăng dần.",
    "output": "SELECT * FROM College ORDER BY enr"
  },
  {
    "instruction": "",
    "input": "Bạn có thông tin gì trên các trường đại học được sắp xếp bằng cách tăng số lượng đăng ký?",
    "output": "SELECT * FROM College ORDER BY enr"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các trường đại học có số lượng tuyển sinh lớn hơn 18000 được sắp xếp theo tên của trường.",
    "output": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName"
  },
  {
    "instruction": "",
    "input": "Tên của mỗi trường đại học theo thứ tự bảng chữ cái có hơn 18000 sinh viên theo học?",
    "output": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những người chơi có thẻ có theo thứ tự giảm dần của giờ đào tạo.",
    "output": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC"
  },
  {
    "instruction": "",
    "input": "Tên của những người chơi đã nhận được một thẻ theo thứ tự giảm dần của giờ đào tạo là gì?",
    "output": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các trường đại học khác nhau liên quan đến việc thử sức theo thứ tự bảng chữ cái.",
    "output": "SELECT DISTINCT cName FROM tryout ORDER BY cName"
  },
  {
    "instruction": "",
    "input": "Các tên khác nhau của các trường đại học liên quan đến việc thử sức theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT DISTINCT cName FROM tryout ORDER BY cName"
  },
  {
    "instruction": "",
    "input": "Vị trí nào là phổ biến nhất trong số những người chơi trong buổi thử?",
    "output": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Vị trí phổ biến nhất trong việc thử là gì?",
    "output": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sinh viên tham gia thử sức cho mỗi trường đại học được đặt hàng theo số lượng giảm dần.",
    "output": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên đã tham gia vào buổi thử việc cho mỗi trường đại học bằng cách đếm descennding?",
    "output": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC"
  },
  {
    "instruction": "",
    "input": "Giờ tối thiểu của các sinh viên chơi ở vị trí khác nhau là bao nhiêu?",
    "output": "SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi vị trí, thời gian tối thiểu sinh viên dành cho việc luyện tập là gì?",
    "output": "SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos"
  },
  {
    "instruction": "",
    "input": "Tên của các trường có 3 kích thước lớn nhất là gì?",
    "output": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tên của các trường có 3 kích thước lớp lớn nhất là gì?",
    "output": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tên trường có số lượng đăng ký nhỏ nhất ở mỗi tiểu bang là gì?",
    "output": "SELECT cName ,  state ,  min(enr) FROM college GROUP BY state"
  },
  {
    "instruction": "",
    "input": "Tên của trường có quy mô tuyển sinh nhỏ nhất trên mỗi tiểu bang là gì?",
    "output": "SELECT cName ,  state ,  min(enr) FROM college GROUP BY state"
  },
  {
    "instruction": "",
    "input": "Tìm các tiểu bang nơi có một số sinh viên đại học trong thử việc.",
    "output": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName"
  },
  {
    "instruction": "",
    "input": "Các trạng thái khác nhau có học sinh đang thử là gì?",
    "output": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName"
  },
  {
    "instruction": "",
    "input": "Tìm các tiểu bang nơi có một số sinh viên đại học trong việc thử sức và quyết định của họ là có.",
    "output": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'"
  },
  {
    "instruction": "",
    "input": "Các trạng thái khác nhau đã có học sinh thử thành công là gì?",
    "output": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'"
  },
  {
    "instruction": "",
    "input": "Tìm tên và trường đại học của các sinh viên có quyết định có trong buổi thử sức.",
    "output": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các cầu thủ đã nhận được trong các buổi thử, và tên của các trường đại học của họ là gì?",
    "output": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các sinh viên trong buổi thử việc được sắp xếp theo thứ tự chữ cái.",
    "output": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các sinh viên đã thử theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName"
  },
  {
    "instruction": "",
    "input": "Tìm tên và giờ của các sinh viên có quyết định thử việc là có.",
    "output": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"
  },
  {
    "instruction": "",
    "input": "Những cái tên và giờ được thực hành của mỗi sinh viên đã nhận được có tại các buổi thử sức là gì?",
    "output": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"
  },
  {
    "instruction": "",
    "input": "Tìm các tiểu bang của các trường đại học có sinh viên trong buổi thử sức chơi ở vị trí tiền đạo.",
    "output": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'"
  },
  {
    "instruction": "",
    "input": "Các tiểu bang của các trường đại học nơi các sinh viên đã thử tham dự vị trí tiền đạo là gì?",
    "output": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sinh viên ở vị trí tiền đạo và có quyết định thử việc có.",
    "output": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các sinh viên đã thử thành công cho vị trí tiền đạo là gì?",
    "output": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker'"
  },
  {
    "instruction": "",
    "input": "Tìm tình trạng của trường đại học mà người chơi Charles đang theo học.",
    "output": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'"
  },
  {
    "instruction": "",
    "input": "Trường đại học mà Charles theo học tại bang nào?",
    "output": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'"
  },
  {
    "instruction": "",
    "input": "Tìm giờ trung bình và tối đa cho các sinh viên có quyết định thử việc là có.",
    "output": "SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"
  },
  {
    "instruction": "",
    "input": "Số giờ trung bình và tối đa của các sinh viên đã thực hiện nhóm là bao nhiêu?",
    "output": "SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"
  },
  {
    "instruction": "",
    "input": "Tìm giờ trung bình cho các sinh viên có quyết định thử việc là không.",
    "output": "SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no'"
  },
  {
    "instruction": "",
    "input": "Số giờ trung bình dành cho việc luyện tập cho sinh viên bị từ chối là bao nhiêu?",
    "output": "SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no'"
  },
  {
    "instruction": "",
    "input": "Giờ đào tạo tối đa cho các sinh viên có giờ đào tạo lớn hơn 1000 ở các vị trí khác nhau là bao nhiêu?",
    "output": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi vị trí, số giờ tối đa cho các sinh viên đã dành hơn 1000 giờ đào tạo là bao nhiêu?",
    "output": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos"
  },
  {
    "instruction": "",
    "input": "Những người chơi thử việc nào có tên bắt đầu bằng chữ D được gửi đến?",
    "output": "SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%'"
  },
  {
    "instruction": "",
    "input": "Mỗi người chơi có một trường đại học nào bắt đầu bằng chữ D đã thử đi?",
    "output": "SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%'"
  },
  {
    "instruction": "",
    "input": "Trường đại học nào có bất kỳ sinh viên nào là thủ môn và đã thành công trong việc thử sức.",
    "output": "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'"
  },
  {
    "instruction": "",
    "input": "Trường đại học nào có một sinh viên đã thành công đội bóng trong vai trò của một thủ môn?",
    "output": "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những người chơi thử sức ở trường đại học với quy mô lớn nhất.",
    "output": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả những người tham gia thử việc từ trường đại học lớn nhất là gì?",
    "output": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Nhà nước là gì và tuyển sinh của các trường đại học nơi có bất kỳ sinh viên nào được chấp nhận trong quyết định thử thách.",
    "output": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên được ghi danh vào các trường đại học có sinh viên được chấp nhận trong quá trình thử việc, và các trường đại học đó là tiểu bang nào?",
    "output": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của một trong hai trường đại học ở LA với kích thước lớn hơn 15000 hoặc ở tiểu bang AZ với ít hơn 13000 tuyển sinh.",
    "output": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\""
  },
  {
    "instruction": "",
    "input": "Tên của các trường đại học ở LA có hơn 15.000 sinh viên và các trường cao đẳng ở AZ với ít hơn 13.000 sinh viên là gì?",
    "output": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các trường có một số học sinh chơi ở vị trí thủ môn và vị trí giữa.",
    "output": "SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các trường có học sinh đang cố gắng cho vị trí mục tiêu và 'giữa'.",
    "output": "SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các tiểu bang có một số sinh viên đại học chơi ở vị trí thủ môn và vị trí giữa.",
    "output": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'"
  },
  {
    "instruction": "",
    "input": "Tên của các tiểu bang có một số sinh viên đại học chơi ở vị trí thủ môn và trung bình là gì?",
    "output": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường có một số học sinh chơi ở vị trí thủ môn và vị trí giữa.",
    "output": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trường có học sinh chơi ở vị trí thủ môn và trung bình?",
    "output": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các trường có một số người chơi ở vị trí giữa nhưng không phải ở vị trí thủ môn.",
    "output": "SELECT cName FROM  tryout WHERE pPos  =  'mid' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  'goalie'"
  },
  {
    "instruction": "",
    "input": "Tên của các trường với một số người chơi ở vị trí giữa nhưng không có thủ môn?",
    "output": "SELECT cName FROM  tryout WHERE pPos  =  'mid' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  'goalie'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các tiểu bang có một số sinh viên đại học chơi ở vị trí giữa nhưng không phải ở vị trí thủ môn.",
    "output": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các tiểu bang với sinh viên đại học chơi ở vị trí giữa nhưng không có thủ môn?",
    "output": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tiểu bang có một số sinh viên đại học chơi ở vị trí giữa nhưng không phải ở vị trí thủ môn.",
    "output": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')"
  },
  {
    "instruction": "",
    "input": "Số lượng các quốc gia với các sinh viên đại học chơi ở vị trí giữa nhưng không phải là thủ môn?",
    "output": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')"
  },
  {
    "instruction": "",
    "input": "Tìm các tiểu bang nơi các trường đại học có số lượng tuyển sinh ít hơn quy mô lớn nhất.",
    "output": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)"
  },
  {
    "instruction": "",
    "input": "Các tiểu bang có các trường đại học có số lượng tuyển sinh ít hơn một số trường đại học khác là gì?",
    "output": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các trường đại học có số lượng tuyển sinh lớn hơn một số (ít nhất một) trường đại học ở bang FL.",
    "output": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')"
  },
  {
    "instruction": "",
    "input": "Tên của các trường đại học lớn hơn ít nhất một trường đại học ở Florida là gì?",
    "output": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các trường đại học có số lượng tuyển sinh lớn hơn tất cả các trường đại học trong bang FL.",
    "output": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các trường đại học có số lượng tuyển sinh lớn hơn so với trường đại học lớn nhất ở Florida là gì?",
    "output": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')"
  },
  {
    "instruction": "",
    "input": "Tổng số lượng đăng ký của các trường không có bất kỳ cầu thủ thủ môn nào?",
    "output": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")"
  },
  {
    "instruction": "",
    "input": "Tổng số học sinh ghi danh vào trường mà không có bất kỳ thủ môn nào?",
    "output": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")"
  },
  {
    "instruction": "",
    "input": "Số lượng tiểu bang có một số trường đại học có số lượng tuyển sinh lớn hơn số lượng tuyển sinh trung bình là bao nhiêu?",
    "output": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tiểu bang có một trường đại học với nhiều sinh viên hơn trung bình?",
    "output": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)"
  },
  {
    "instruction": "",
    "input": "Số lượng các tiểu bang có một số trường đại học có số lượng tuyển sinh nhỏ hơn số lượng tuyển sinh trung bình là bao nhiêu?",
    "output": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tiểu bang có các trường đại học nhỏ hơn trung bình?",
    "output": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thiết bị?",
    "output": "SELECT count(*) FROM device"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng thiết bị.",
    "output": "SELECT count(*) FROM device"
  },
  {
    "instruction": "",
    "input": "Liệt kê các nhà mạng của các thiết bị theo thứ tự bảng chữ cái tăng dần.",
    "output": "SELECT Carrier FROM device ORDER BY Carrier ASC"
  },
  {
    "instruction": "",
    "input": "Các nhà mạng khác nhau cho các thiết bị, được liệt kê theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT Carrier FROM device ORDER BY Carrier ASC"
  },
  {
    "instruction": "",
    "input": "Các nhà mạng của các thiết bị có nền tảng phần mềm không phải là \"Android\" là gì?",
    "output": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'"
  },
  {
    "instruction": "",
    "input": "Trả về các nhà mạng thiết bị không có Android làm nền tảng phần mềm của họ.",
    "output": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'"
  },
  {
    "instruction": "",
    "input": "Tên của các cửa hàng theo thứ tự tăng dần của năm mở?",
    "output": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các cửa hàng, được đặt hàng theo năm mở tăng dần.",
    "output": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC"
  },
  {
    "instruction": "",
    "input": "Số lượng cổ phiếu trung bình là bao nhiêu?",
    "output": "SELECT avg(Quantity) FROM stock"
  },
  {
    "instruction": "",
    "input": "Cho số lượng trung bình của cổ phiếu.",
    "output": "SELECT avg(Quantity) FROM stock"
  },
  {
    "instruction": "",
    "input": "Tên và vị trí của các cửa hàng theo thứ tự theo thứ tự bảng chữ cái.",
    "output": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC"
  },
  {
    "instruction": "",
    "input": "Trả lại tên và vị trí của các cửa hàng, được đặt hàng theo tên theo thứ tự bảng chữ cái.",
    "output": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nền tảng phần mềm khác nhau cho các thiết bị?",
    "output": "SELECT count(DISTINCT Software_Platform) FROM device"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các nền tảng phần mềm khác nhau.",
    "output": "SELECT count(DISTINCT Software_Platform) FROM device"
  },
  {
    "instruction": "",
    "input": "Liệt kê ngày mở của năm mở cửa của cửa hàng có tên là \"Apple\".",
    "output": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\""
  },
  {
    "instruction": "",
    "input": "Những ngày mở cửa và năm cho cửa hàng tên là Apple là gì?",
    "output": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của cửa hàng với năm mở mới nhất.",
    "output": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên cửa hàng tương ứng với cửa hàng đã mở trong năm gần đây nhất?",
    "output": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các cửa hàng và người vận chuyển các thiết bị họ có trong kho.",
    "output": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID"
  },
  {
    "instruction": "",
    "input": "Tên của các cửa hàng thiết bị là gì và các nhà mạng mà họ mang theo thiết bị trong kho là gì?",
    "output": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các cửa hàng có nhiều hơn một loại thiết bị trong kho.",
    "output": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tên của các cửa hàng có nhiều hơn một loại thiết bị trong kho là gì?",
    "output": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của cửa hàng có nhiều loại thiết bị nhất trong kho.",
    "output": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của cửa hàng có các loại thiết bị khác nhau nhất trong kho là gì?",
    "output": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của cửa hàng có số lượng thiết bị lớn nhất trong kho.",
    "output": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của cửa hàng có số lượng thiết bị lớn nhất trong kho là gì?",
    "output": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các nền tảng phần mềm khác nhau và số lượng thiết bị tương ứng sử dụng mỗi thiết bị.",
    "output": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform"
  },
  {
    "instruction": "",
    "input": "Các nền tảng phần mềm khác nhau cho các thiết bị là gì và mỗi thiết bị có bao nhiêu thiết bị?",
    "output": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các nền tảng phần mềm của các thiết bị theo thứ tự giảm dần của số đếm.",
    "output": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC"
  },
  {
    "instruction": "",
    "input": "Các nền tảng phần mềm khác nhau cho các thiết bị, được đặt hàng theo tần số giảm dần là gì?",
    "output": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC"
  },
  {
    "instruction": "",
    "input": "Liệt kê nền tảng phần mềm được chia sẻ bởi số lượng thiết bị lớn nhất.",
    "output": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Nền tảng phần mềm phổ biến nhất trong số tất cả các thiết bị là gì?",
    "output": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các cửa hàng không có thiết bị trong kho.",
    "output": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)"
  },
  {
    "instruction": "",
    "input": "Tên của các cửa hàng không có bất kỳ thiết bị nào trong kho?",
    "output": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các địa điểm được chia sẻ bởi các cửa hàng với năm mở muộn hơn năm 2012 và các cửa hàng có năm mở trước năm 2008.",
    "output": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008"
  },
  {
    "instruction": "",
    "input": "Những địa điểm nào chứa cả hai cửa hàng mở sau năm 2012 và các cửa hàng mở cửa trước năm 2008?",
    "output": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008"
  },
  {
    "instruction": "",
    "input": "Liệt kê các nhà mạng của các thiết bị không có thiết bị trong kho.",
    "output": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)"
  },
  {
    "instruction": "",
    "input": "Các nhà mạng của các thiết bị không có trong kho ở bất cứ đâu?",
    "output": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các nhà mạng của các thiết bị trong kho tại nhiều cửa hàng.",
    "output": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Các nhà mạng của các thiết bị có trong kho trong nhiều hơn một cửa hàng là gì?",
    "output": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu đặt phòng?",
    "output": "SELECT count(*) FROM BOOKINGS"
  },
  {
    "instruction": "",
    "input": "Đếm tổng số đặt phòng được thực hiện.",
    "output": "SELECT count(*) FROM BOOKINGS"
  },
  {
    "instruction": "",
    "input": "Liệt kê ngày đặt hàng của tất cả các đặt phòng.",
    "output": "SELECT Order_Date FROM BOOKINGS"
  },
  {
    "instruction": "",
    "input": "Ngày đặt hàng của mỗi lần đặt phòng là bao nhiêu?",
    "output": "SELECT Order_Date FROM BOOKINGS"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các ngày giao hàng theo kế hoạch và ngày giao hàng thực tế của đặt phòng.",
    "output": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS"
  },
  {
    "instruction": "",
    "input": "Ngày giao hàng theo kế hoạch và ngày giao hàng thực tế cho mỗi lần đặt phòng là gì?",
    "output": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS"
  },
  {
    "instruction": "",
    "input": "Chúng tôi có bao nhiêu khách hàng?",
    "output": "SELECT count(*) FROM CUSTOMERS"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng khách hàng được ghi lại.",
    "output": "SELECT count(*) FROM CUSTOMERS"
  },
  {
    "instruction": "",
    "input": "Điện thoại và email cho khách hàng Harold là gì?",
    "output": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\""
  },
  {
    "instruction": "",
    "input": "Tìm số điện thoại và địa chỉ email của khách hàng \"Harold\".",
    "output": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các nhóm tập đoàn của các nhóm hội thảo kịch.",
    "output": "SELECT Store_Name FROM Drama_Workshop_Groups"
  },
  {
    "instruction": "",
    "input": "Tên cửa hàng của các nhóm hội thảo kịch là gì?",
    "output": "SELECT Store_Name FROM Drama_Workshop_Groups"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng tối thiểu, trung bình, tối đa của tất cả các hóa đơn.",
    "output": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES"
  },
  {
    "instruction": "",
    "input": "Số lượng tối thiểu, trung bình và tối đa được đặt hàng là gì?Kiểm tra tất cả các hóa đơn.",
    "output": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES"
  },
  {
    "instruction": "",
    "input": "Các mã phương thức thanh toán riêng biệt trong tất cả các hóa đơn là gì?",
    "output": "SELECT DISTINCT payment_method_code FROM INVOICES"
  },
  {
    "instruction": "",
    "input": "Cho tôi xem mã phương thức thanh toán riêng biệt từ bản ghi hóa đơn.",
    "output": "SELECT DISTINCT payment_method_code FROM INVOICES"
  },
  {
    "instruction": "",
    "input": "Mô tả của khu vực tiếp thị Trung Quốc là gì?",
    "output": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\""
  },
  {
    "instruction": "",
    "input": "Tìm mô tả khu vực tiếp thị của Trung Quốc?",
    "output": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên sản phẩm riêng biệt với giá cao hơn mức trung bình.",
    "output": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)"
  },
  {
    "instruction": "",
    "input": "Các tên riêng biệt của các sản phẩm có giá cao hơn mức trung bình là gì?",
    "output": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)"
  },
  {
    "instruction": "",
    "input": "Tên của sản phẩm đắt nhất là gì?",
    "output": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết tên của sản phẩm pricy nhất.",
    "output": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên sản phẩm theo thứ tự tăng dần của giá.",
    "output": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
  },
  {
    "instruction": "",
    "input": "Sắp xếp tên các sản phẩm theo thứ tự tăng dần của giá của họ.",
    "output": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
  },
  {
    "instruction": "",
    "input": "Số điện thoại của người biểu diễn Ashley là gì?",
    "output": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\""
  },
  {
    "instruction": "",
    "input": "Tìm số điện thoại của người biểu diễn \"Ashley\".",
    "output": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các mã phương thức thanh toán và số lượng đơn đặt hàng cho mỗi mã.",
    "output": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code"
  },
  {
    "instruction": "",
    "input": "Liệt kê các mã phương thức thanh toán riêng biệt với số lượng đơn đặt hàng",
    "output": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code"
  },
  {
    "instruction": "",
    "input": "Mã phương thức thanh toán được sử dụng bởi hầu hết các đơn đặt hàng là gì?",
    "output": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm phương thức thanh toán được sử dụng thường xuyên nhất trong tất cả các hóa đơn.Cho tôi mã của nó.",
    "output": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Thành phố nào là địa chỉ của cửa hàng có tên \"FJA quay phim\" nằm ở?",
    "output": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\""
  },
  {
    "instruction": "",
    "input": "Tìm thành phố mà cửa hàng có tên là \"FJA quay phim\" đang ở.",
    "output": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\""
  },
  {
    "instruction": "",
    "input": "Các tiểu bang hoặc quận của địa chỉ của các cửa hàng có mã khu vực tiếp thị \"CA\" là gì?",
    "output": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\""
  },
  {
    "instruction": "",
    "input": "Tìm các tiểu bang hoặc các quận nơi các cửa hàng có mã \"CA\" của Vùng tiếp thị.",
    "output": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\""
  },
  {
    "instruction": "",
    "input": "Tên của khu vực tiếp thị mà cửa hàng Rob Dinning thuộc về là gì?",
    "output": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\""
  },
  {
    "instruction": "",
    "input": "Trả về tên của khu vực tiếp thị mà cửa hàng Rob Dinning được đặt tại.",
    "output": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\""
  },
  {
    "instruction": "",
    "input": "Các mô tả của các loại dịch vụ với giá sản phẩm trên 100 là gì?",
    "output": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi các mô tả về các loại dịch vụ có giá hơn 100.",
    "output": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100"
  },
  {
    "instruction": "",
    "input": "Mô tả, mã và số lượng tương ứng của từng loại dịch vụ là gì?",
    "output": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code"
  },
  {
    "instruction": "",
    "input": "Liệt kê mô tả, mã và số lượng dịch vụ cho mỗi loại dịch vụ.",
    "output": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code"
  },
  {
    "instruction": "",
    "input": "Mô tả và mã của loại dịch vụ được thực hiện thường xuyên nhất là gì?",
    "output": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm mô tả và mã của loại dịch vụ được thực hiện nhiều lần nhất.",
    "output": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các điện thoại và email của các nhóm hội thảo trong đó các dịch vụ được thực hiện là gì?",
    "output": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi tất cả các số điện thoại và địa chỉ email của các nhóm hội thảo nơi các dịch vụ được thực hiện.",
    "output": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID"
  },
  {
    "instruction": "",
    "input": "Tên của các nhóm hội thảo trong đó các dịch vụ có tên sản phẩm \"Phim\" được thực hiện là gì?",
    "output": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các nhóm hội thảo nơi các dịch vụ có tên sản phẩm \"Phim\" được thực hiện.",
    "output": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\""
  },
  {
    "instruction": "",
    "input": "Tên sản phẩm khác nhau là gì?Giá sản phẩm trung bình cho mỗi người trong số họ là gì?",
    "output": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi tên sản phẩm riêng biệt, hiển thị giá sản phẩm trung bình của nó.",
    "output": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name"
  },
  {
    "instruction": "",
    "input": "Tên sản phẩm với giá sản phẩm trung bình nhỏ hơn 1000000 là gì?",
    "output": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000"
  },
  {
    "instruction": "",
    "input": "Tìm tên sản phẩm có giá sản phẩm trung bình dưới 1000000.",
    "output": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000"
  },
  {
    "instruction": "",
    "input": "Tổng số lượng đơn đặt hàng của các sản phẩm ảnh là gì?",
    "output": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"photo\""
  },
  {
    "instruction": "",
    "input": "Tính tổng số lượng đơn hàng của \"Ảnh\".",
    "output": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"photo\""
  },
  {
    "instruction": "",
    "input": "Các chi tiết đơn hàng của các sản phẩm có giá cao hơn 2000 là gì?",
    "output": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000"
  },
  {
    "instruction": "",
    "input": "Tìm chi tiết đơn đặt hàng cho các sản phẩm có giá trên 2000.",
    "output": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000"
  },
  {
    "instruction": "",
    "input": "Ngày giao hàng thực tế của các đơn đặt hàng với số lượng 1 là gì?",
    "output": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1"
  },
  {
    "instruction": "",
    "input": "Liệt kê ngày giao hàng thực tế cho tất cả các đơn đặt hàng có số lượng 1",
    "output": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1"
  },
  {
    "instruction": "",
    "input": "Ngày đặt hàng của các đơn đặt hàng có giá cao hơn 1000 là gì?",
    "output": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000"
  },
  {
    "instruction": "",
    "input": "Tìm ngày đặt hàng của các đơn đặt hàng có giá trên 1000.",
    "output": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mã tiền tệ riêng biệt cho tất cả các nhóm hội thảo kịch?",
    "output": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng mã tiền tệ riêng biệt được sử dụng trong các nhóm hội thảo kịch.",
    "output": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"
  },
  {
    "instruction": "",
    "input": "Tên của các nhóm hội thảo kịch với địa chỉ ở thành phố Feliciaberg là gì?",
    "output": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\""
  },
  {
    "instruction": "",
    "input": "Trả lại tên của các nhóm hội thảo kịch được đặt tại thành phố Feliciaberg.",
    "output": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\""
  },
  {
    "instruction": "",
    "input": "Các địa chỉ email của các nhóm hội thảo kịch với địa chỉ ở bang Alaska là gì?",
    "output": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\""
  },
  {
    "instruction": "",
    "input": "Liệt kê các địa chỉ email của các nhóm hội thảo kịch ở bang Alaska.",
    "output": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các thành phố cùng với số lượng các nhóm hội thảo kịch ở mỗi thành phố.",
    "output": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhóm hội thảo kịch tính ở mỗi thành phố?Trả lại cả thành phố và số đếm.",
    "output": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town"
  },
  {
    "instruction": "",
    "input": "Mã khu vực tiếp thị có các nhóm hội thảo kịch nhất là gì?",
    "output": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những khu vực tiếp thị nào có các nhóm hội thảo kịch nhất?Cho tôi mã khu vực.",
    "output": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các thành phố nơi ít nhất một khách hàng sống nhưng không có người biểu diễn nào sống.",
    "output": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID"
  },
  {
    "instruction": "",
    "input": "Những thành phố nào có ít nhất một khách hàng nhưng không có người biểu diễn?",
    "output": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID"
  },
  {
    "instruction": "",
    "input": "Tình trạng thường xuyên nhất của đặt phòng là gì?",
    "output": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mã trạng thái nào là phổ biến nhất trong tất cả các đặt phòng?",
    "output": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của các nhóm hội thảo có đặt phòng với mã trạng thái \"Dừng\" là gì?",
    "output": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\""
  },
  {
    "instruction": "",
    "input": "Những nhóm hội thảo nào có đặt phòng với mã trạng thái \"Dừng\"?Cho tôi tên.",
    "output": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của tất cả các khách hàng không có đặt phòng.",
    "output": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID"
  },
  {
    "instruction": "",
    "input": "Tên của các khách hàng không có đặt phòng là gì?",
    "output": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID"
  },
  {
    "instruction": "",
    "input": "Số lượng trung bình được đặt hàng với mã phương thức thanh toán \"MasterCard\" trên hóa đơn là gì?",
    "output": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\""
  },
  {
    "instruction": "",
    "input": "Kiểm tra bản ghi hóa đơn và tính toán số lượng trung bình được đặt hàng với phương thức thanh toán \"MasterCard\".",
    "output": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\""
  },
  {
    "instruction": "",
    "input": "ID sản phẩm của mặt hàng được đặt hàng thường xuyên nhất trên hóa đơn là gì?",
    "output": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID của sản phẩm được đặt hàng thường xuyên nhất trên hóa đơn.",
    "output": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mô tả của loại dịch vụ cung cấp cả sản phẩm ảnh và sản phẩm phim là gì?",
    "output": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi mô tả về loại dịch vụ không chỉ cung cấp sản phẩm ảnh mà còn cả sản phẩm phim.",
    "output": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ban nhạc?",
    "output": "SELECT count(*) FROM Band"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng ban nhạc.",
    "output": "SELECT count(*) FROM Band"
  },
  {
    "instruction": "",
    "input": "Tất cả các nhãn là gì?",
    "output": "SELECT DISTINCT label FROM Albums"
  },
  {
    "instruction": "",
    "input": "Các nhãn album khác nhau được liệt kê là gì?",
    "output": "SELECT DISTINCT label FROM Albums"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các album trong năm 2012.",
    "output": "SELECT * FROM Albums WHERE YEAR  =  2012"
  },
  {
    "instruction": "",
    "input": "Trả lại tất cả các cột của các album được tạo vào năm 2012.",
    "output": "SELECT * FROM Albums WHERE YEAR  =  2012"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các vị trí sân khấu của các nhạc sĩ có tên \"Solveig\"",
    "output": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"Solveig\""
  },
  {
    "instruction": "",
    "input": "Các vị trí giai đoạn khác nhau cho tất cả các nhạc sĩ có tên đầu tiên là \"Solveig\" là gì?",
    "output": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"Solveig\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài hát?",
    "output": "SELECT count(*) FROM Songs"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng bài hát.",
    "output": "SELECT count(*) FROM Songs"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các bài hát được thực hiện bởi nghệ sĩ với họ \"Heilo\"",
    "output": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  \"Heilo\""
  },
  {
    "instruction": "",
    "input": "Tên của các bài hát của nghệ sĩ có tên cuối cùng là \"Heilo\" là gì?",
    "output": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  \"Heilo\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhạc sĩ biểu diễn trong bài hát \"Flash\"?",
    "output": "SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  \"Flash\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhạc sĩ chơi trong bài hát \"Flash\"?",
    "output": "SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  \"Flash\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các bài hát được sản xuất bởi các nghệ sĩ có tên \"Marianne\".",
    "output": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bài hát được sản xuất bởi nghệ sĩ với tên đầu tiên \"Marianne\" là gì?",
    "output": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\""
  },
  {
    "instruction": "",
    "input": "Ai đã biểu diễn bài hát tên là \"Badlands\"?Hiển thị tên và họ.",
    "output": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của nghệ sĩ đã biểu diễn bài hát \"Badlands\" là gì?",
    "output": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\""
  },
  {
    "instruction": "",
    "input": "Ai đang biểu diễn ở vị trí giai đoạn sau cho bài hát \"Badlands\"?Hiển thị tên và họ.",
    "output": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của người biểu diễn ở vị trí giai đoạn sau cho bài hát \"Badlands\" là gì?",
    "output": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhãn độc đáo cho album?",
    "output": "SELECT count(DISTINCT label) FROM albums"
  },
  {
    "instruction": "",
    "input": "Các nhãn độc đáo cho các album là gì?",
    "output": "SELECT count(DISTINCT label) FROM albums"
  },
  {
    "instruction": "",
    "input": "Nhãn có nhiều album nhất là gì?",
    "output": "SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Nhãn với nhiều album nhất là gì?",
    "output": "SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của nhạc sĩ đã tạo ra nhiều bài hát nhất là gì?",
    "output": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của nhạc sĩ trong nhiều bài hát nhất là gì?",
    "output": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của nhạc sĩ đã ở vị trí phía sau nhiều nhất là gì?",
    "output": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \"back\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của các nhạc sĩ đã chơi trở lại vị trí nhiều nhất là gì?",
    "output": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \"back\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các bài hát có tên chứa từ \"The\".",
    "output": "SELECT title FROM songs WHERE title LIKE '% the %'"
  },
  {
    "instruction": "",
    "input": "Tên của các bài hát có tiêu đề có từ \"The\"?",
    "output": "SELECT title FROM songs WHERE title LIKE '% the %'"
  },
  {
    "instruction": "",
    "input": "Tất cả các công cụ được sử dụng là gì?",
    "output": "SELECT DISTINCT instrument FROM Instruments"
  },
  {
    "instruction": "",
    "input": "Các công cụ khác nhau được liệt kê trong cơ sở dữ liệu là gì?",
    "output": "SELECT DISTINCT instrument FROM Instruments"
  },
  {
    "instruction": "",
    "input": "Nhạc sĩ đã làm nhạc cụ nào với họ \"Heilo\" sử dụng trong bài hát \"Le Pop\"?",
    "output": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Le Pop\""
  },
  {
    "instruction": "",
    "input": "Nhạc sĩ đã làm nhạc cụ nào với họ \"Heilo\" Play in the \"Le Pop\"?",
    "output": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Le Pop\""
  },
  {
    "instruction": "",
    "input": "Nhạc cụ được sử dụng nhiều nhất là gì?",
    "output": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Nhạc cụ nào được sử dụng nhiều nhất?",
    "output": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài hát đã sử dụng nhạc cụ \"trống\"?",
    "output": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài hát sử dụng trống như một nhạc cụ?",
    "output": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\""
  },
  {
    "instruction": "",
    "input": "Bài hát \"Le Pop\" sử dụng bài hát nào?",
    "output": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""
  },
  {
    "instruction": "",
    "input": "Các nhạc cụ được sử dụng trong bài hát \"Le Pop\" là gì?",
    "output": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""
  },
  {
    "instruction": "",
    "input": "Bài hát \"Le Pop\" sử dụng bao nhiêu nhạc cụ?",
    "output": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhạc cụ khác nhau được sử dụng trong bài hát \"Le Pop\"?",
    "output": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhạc sĩ với tên cuối cùng \"Heilo\" sử dụng?",
    "output": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhạc sĩ khác nhau với họ \"Heilo\" sử dụng?",
    "output": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các nhạc cụ từng sử dụng bởi nhạc sĩ với họ \"Heilo\"?",
    "output": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\""
  },
  {
    "instruction": "",
    "input": "Tất cả các nhạc cụ được sử dụng bởi nhạc sĩ với họ \"Heilo\" là gì?",
    "output": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\""
  },
  {
    "instruction": "",
    "input": "Bài hát nào có nhiều giọng hát nhất?",
    "output": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Bài hát có nhiều giọng hát nhất là gì?",
    "output": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại giọng hát nào là loại xuất hiện thường xuyên nhất?",
    "output": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại giọng hát xuất hiện thường xuyên nhất là gì?",
    "output": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại giọng hát nào có người bạn ban nhạc với họ \"Heilo\" chơi nhiều nhất?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"Heilo\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại giọng hát mà thành viên ban nhạc có họ \"Heilo\" đã chơi nhiều nhất là gì?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"Heilo\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các loại giọng hát được sử dụng trong bài hát \"Le Pop\" là gì?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""
  },
  {
    "instruction": "",
    "input": "Các loại giọng hát được sử dụng trong bài hát \"Le Pop\" là gì?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các loại giọng hát được sử dụng trong bài hát \"Demon Kitty Rag\"?",
    "output": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Demon Kitty Rag\""
  },
  {
    "instruction": "",
    "input": "Các loại giọng hát được sử dụng trong bài hát \"Demon Kitty Rag\" là gì?",
    "output": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Demon Kitty Rag\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài hát có giọng hát chính?",
    "output": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"lead\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài hát có giọng hát chính?",
    "output": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"lead\""
  },
  {
    "instruction": "",
    "input": "Nhạc sĩ có tên nhạc có tên là \"Solveig\" được chơi trong bài hát với tiêu đề \"A Bar in Amsterdam\"?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\""
  },
  {
    "instruction": "",
    "input": "Các loại giọng hát mà nhạc sĩ có tên \"Solveig\" được chơi trong bài hát \"A Bar in Amsterdam\" là gì?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các bài hát không có giọng hát chính.",
    "output": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"lead\""
  },
  {
    "instruction": "",
    "input": "Tên của các bài hát không có giọng hát chính là gì?",
    "output": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"lead\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các loại giọng hát.",
    "output": "SELECT DISTINCT TYPE FROM vocals"
  },
  {
    "instruction": "",
    "input": "Các loại giọng hát khác nhau là gì?",
    "output": "SELECT DISTINCT TYPE FROM vocals"
  },
  {
    "instruction": "",
    "input": "Các album được sản xuất trong năm 2010 là gì?",
    "output": "SELECT * FROM Albums WHERE YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "Có thông tin gì trên album từ năm 2010?",
    "output": "SELECT * FROM Albums WHERE YEAR  =  2010"
  },
  {
    "instruction": "",
    "input": "Ai đã biểu diễn bài hát tên là \"Le Pop\"?",
    "output": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của nghệ sĩ đã biểu diễn \"Le Pop\" là gì?",
    "output": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\""
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của nhạc sĩ đã sản xuất nhiều bài hát nhất là gì?",
    "output": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của nghệ sĩ đã hát nhiều bài hát nhất là gì?",
    "output": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Nhạc sĩ có nhạc cụ nào với họ \"Heilo\" sử dụng trong bài hát \"Badlands\"?",
    "output": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Badlands\""
  },
  {
    "instruction": "",
    "input": "Nhạc sĩ đã làm nhạc cụ nào với họ \"Heilo\" chơi trong \"Badlands\"?",
    "output": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Badlands\""
  },
  {
    "instruction": "",
    "input": "Bài hát \"Badlands\" sử dụng bao nhiêu nhạc cụ?",
    "output": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhạc cụ khác nhau được sử dụng trong bài hát \"Badlands\"?",
    "output": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\""
  },
  {
    "instruction": "",
    "input": "Các loại giọng hát được sử dụng trong bài hát \"Badlands\" là gì?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\""
  },
  {
    "instruction": "",
    "input": "Những loại giọng hát được sử dụng trong bài hát \"Badlands\"?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các loại giọng hát được sử dụng trong bài hát \"Le Pop\"",
    "output": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại giọng hát được sử dụng trong bài hát \"Le Pop\"?",
    "output": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài hát có một giọng hát được chia sẻ?",
    "output": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"shared\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài hát khác nhau đã chia sẻ giọng hát?",
    "output": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"shared\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các bài hát không có giọng hát trở lại.",
    "output": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\""
  },
  {
    "instruction": "",
    "input": "Tên khác nhau của tất cả các bài hát không có giọng hát trở lại là gì?",
    "output": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\""
  },
  {
    "instruction": "",
    "input": "Loại giọng hát nào có người bạn ban nhạc với tên đầu tiên \"Solveig\" chơi nhiều nhất?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Solveig\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các loại giọng hát mà thành viên ban nhạc có tên \"Solveig\" được chơi nhiều nhất là gì?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Solveig\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Nhạc sĩ với tên nhạc có tên cuối cùng \"Heilo\" đã chơi trong bài hát với tiêu đề \"Der Kapitan\"?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\""
  },
  {
    "instruction": "",
    "input": "Các loại giọng hát mà nhạc sĩ có họ \"Heilo\" được chơi trong \"Der Kapitan\" là gì?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\""
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của người bạn đời đã biểu diễn trong hầu hết các bài hát.",
    "output": "SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của người bạn đời đã biểu diễn trong nhiều bài hát nhất là gì?",
    "output": "SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại giọng hát nào có người bạn ban nhạc với tên đầu tiên \"Marianne\" chơi nhiều nhất?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Marianne\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại giọng hát của người bạn đời có tên đầu tiên là \"Marianne\" chơi nhiều nhất?",
    "output": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Marianne\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Ai đang biểu diễn ở vị trí giai đoạn sau cho bài hát \"Der Kapitan\"?Hiển thị tên và họ.",
    "output": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"back\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của nghệ sĩ đã biểu diễn sân khấu cho bài hát \"Der Kapitan\" là gì?",
    "output": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"back\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các bài hát không có giọng hát trở lại.",
    "output": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\""
  },
  {
    "instruction": "",
    "input": "Tên của các bài hát không có giọng hát trở lại là gì?",
    "output": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\""
  },
  {
    "instruction": "",
    "input": "Những bài hát trong album \"A Kiss Before You Go: Live in Hamburg\" là gì?",
    "output": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"A Kiss Before You Go: Live in Hamburg\""
  },
  {
    "instruction": "",
    "input": "Các tiêu đề bài hát trong album \"A Kiss Before You Go: Live in Hamburg\" là gì?",
    "output": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"A Kiss Before You Go: Live in Hamburg\""
  },
  {
    "instruction": "",
    "input": "Tất cả các bài hát trong album dưới nhãn \"Universal Music Group\" là gì?",
    "output": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  \"Universal Music Group\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các bài hát có album nằm dưới nhãn hiệu của \"Universal Music Group\" là gì?",
    "output": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  \"Universal Music Group\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng bài hát trong tất cả các album phòng thu.",
    "output": "SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  \"Studio\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài hát xuất hiện trong album phòng thu?",
    "output": "SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  \"Studio\""
  },
  {
    "instruction": "",
    "input": "Ai là người sáng lập Sony?",
    "output": "SELECT founder FROM manufacturers WHERE name  =  'Sony'"
  },
  {
    "instruction": "",
    "input": "Trả lại người sáng lập Sony.",
    "output": "SELECT founder FROM manufacturers WHERE name  =  'Sony'"
  },
  {
    "instruction": "",
    "input": "Đâu là trụ sở của công ty được thành lập bởi James?",
    "output": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'"
  },
  {
    "instruction": "",
    "input": "Trụ sở của công ty có người sáng lập là gì?",
    "output": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả tên của các nhà sản xuất và trụ sở của họ, được sắp xếp bởi những người có doanh thu cao nhất trước tiên.",
    "output": "SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC"
  },
  {
    "instruction": "",
    "input": "Tên và trụ sở của tất cả các nhà sản xuất, được đặt hàng bởi doanh thu giảm dần?",
    "output": "SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC"
  },
  {
    "instruction": "",
    "input": "Trung bình, tối đa và tổng doanh thu của tất cả các công ty là bao nhiêu?",
    "output": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers"
  },
  {
    "instruction": "",
    "input": "Trả lại trung bình, tối đa và tổng doanh thu trên tất cả các nhà sản xuất.",
    "output": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu công ty được tạo ra bởi Andy?",
    "output": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'"
  },
  {
    "instruction": "",
    "input": "Trả lại số lượng các công ty được tạo bởi Andy.",
    "output": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'"
  },
  {
    "instruction": "",
    "input": "Tìm tổng doanh thu được tạo ra bởi các công ty có trụ sở chính được đặt tại Austin.",
    "output": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'"
  },
  {
    "instruction": "",
    "input": "Tổng doanh thu từ các công ty có trụ sở ở Austin là bao nhiêu?",
    "output": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'"
  },
  {
    "instruction": "",
    "input": "Các thành phố khác nhau được liệt kê là gì?",
    "output": "SELECT DISTINCT headquarter FROM manufacturers"
  },
  {
    "instruction": "",
    "input": "Cung cấp trụ sở riêng biệt của các nhà sản xuất.",
    "output": "SELECT DISTINCT headquarter FROM manufacturers"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các nhà sản xuất dựa trên Tokyo hoặc Bắc Kinh.",
    "output": "SELECT count(*) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Beijing'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhà sản xuất có trụ sở tại Tokyo hoặc Bắc Kinh?",
    "output": "SELECT count(*) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Beijing'"
  },
  {
    "instruction": "",
    "input": "Tìm người sáng lập công ty có tên bắt đầu bằng chữ 'S'.",
    "output": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'"
  },
  {
    "instruction": "",
    "input": "Ai là người sáng lập của các công ty có lá thư đầu tiên là S?",
    "output": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các công ty có doanh thu từ 100 đến 150.",
    "output": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150"
  },
  {
    "instruction": "",
    "input": "Tên của các công ty có doanh thu từ 100 đến 150 là gì?",
    "output": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150"
  },
  {
    "instruction": "",
    "input": "Tổng doanh thu của tất cả các công ty có văn phòng chính ở Tokyo hay Đài Loan là bao nhiêu?",
    "output": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'"
  },
  {
    "instruction": "",
    "input": "Trả lại tổng doanh thu của các công ty với trụ sở tại Tokyo hoặc Đài Loan.",
    "output": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của sản phẩm được sản xuất bởi cả hai công ty Creative Labs và Sony.",
    "output": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'"
  },
  {
    "instruction": "",
    "input": "Tên của các sản phẩm được sản xuất bởi cả Creative Labs và Sony là gì?",
    "output": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'"
  },
  {
    "instruction": "",
    "input": "Tìm tên, trụ sở và người sáng lập nhà sản xuất có doanh thu cao nhất.",
    "output": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên, trụ sở và người sáng lập của công ty có doanh thu cao nhất là gì?",
    "output": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên, trụ sở và doanh thu của tất cả các nhà sản xuất được sắp xếp theo doanh thu của họ theo thứ tự giảm dần.",
    "output": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC"
  },
  {
    "instruction": "",
    "input": "Tên, trụ sở chính và doanh thu cho các nhà sản xuất, được sắp xếp theo doanh thu giảm dần?",
    "output": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các công ty có doanh thu lớn hơn doanh thu trung bình của tất cả các công ty.",
    "output": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)"
  },
  {
    "instruction": "",
    "input": "Tên của các nhà sản xuất có doanh thu lớn hơn mức trung bình của tất cả các doanh thu là gì?",
    "output": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các công ty có doanh thu nhỏ hơn doanh thu của tất cả các công ty có trụ sở tại Austin.",
    "output": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"
  },
  {
    "instruction": "",
    "input": "Tên của các công ty có doanh thu ít hơn doanh thu thấp nhất của bất kỳ nhà sản xuất nào ở Austin là gì?",
    "output": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"
  },
  {
    "instruction": "",
    "input": "Tìm tổng doanh thu của các công ty có doanh thu lớn hơn doanh thu của một số công ty có trụ sở tại Austin.",
    "output": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"
  },
  {
    "instruction": "",
    "input": "Tổng doanh thu của các công ty có doanh thu lớn hơn doanh thu thấp nhất của bất kỳ nhà sản xuất nào ở Austin là bao nhiêu?",
    "output": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"
  },
  {
    "instruction": "",
    "input": "Tìm tổng doanh thu của các công ty của mỗi người sáng lập.",
    "output": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder"
  },
  {
    "instruction": "",
    "input": "Tổng doanh thu của các công ty bắt đầu bởi người sáng lập là bao nhiêu?",
    "output": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder"
  },
  {
    "instruction": "",
    "input": "Tìm tên và doanh thu của công ty kiếm được doanh thu cao nhất trong mỗi thành phố.",
    "output": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter"
  },
  {
    "instruction": "",
    "input": "Tên và doanh thu của các công ty có doanh thu cao nhất trong mỗi thành phố trụ sở?",
    "output": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter"
  },
  {
    "instruction": "",
    "input": "Tìm tổng doanh thu cho mỗi nhà sản xuất.",
    "output": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name"
  },
  {
    "instruction": "",
    "input": "Tổng doanh thu của mỗi nhà sản xuất là bao nhiêu?",
    "output": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name"
  },
  {
    "instruction": "",
    "input": "Tìm giá trung bình của tất cả các sản phẩm từ mỗi sản xuất và liệt kê tên của mỗi công ty.",
    "output": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"
  },
  {
    "instruction": "",
    "input": "Giá trung bình của sản phẩm cho mỗi nhà sản xuất là gì?",
    "output": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sản phẩm khác nhau được sản xuất bởi các công ty tại các thành phố trụ sở khác nhau.",
    "output": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm khác nhau được sản xuất trong mỗi thành phố trụ sở?",
    "output": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sản phẩm mà Sony không tạo ra.",
    "output": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm không được Sony sản xuất?",
    "output": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các công ty không tạo DVD Drive.",
    "output": "SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T1.name  =  'DVD drive'"
  },
  {
    "instruction": "",
    "input": "Tên của các công ty không tạo ra ổ đĩa DVD là gì?",
    "output": "SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T1.name  =  'DVD drive'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sản phẩm cho mỗi nhà sản xuất, hiển thị tên của mỗi công ty.",
    "output": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm cho mỗi nhà sản xuất?",
    "output": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"
  },
  {
    "instruction": "",
    "input": "Chọn tên của tất cả các sản phẩm trong cửa hàng.",
    "output": "SELECT Name FROM Products"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các sản phẩm là gì?",
    "output": "SELECT Name FROM Products"
  },
  {
    "instruction": "",
    "input": "Chọn tên và giá của tất cả các sản phẩm trong cửa hàng.",
    "output": "SELECT name ,  price FROM products"
  },
  {
    "instruction": "",
    "input": "Tên và giá của tất cả các sản phẩm trong cửa hàng là gì?",
    "output": "SELECT name ,  price FROM products"
  },
  {
    "instruction": "",
    "input": "Chọn tên của các sản phẩm với giá thấp hơn hoặc bằng $ 200.",
    "output": "SELECT name FROM products WHERE price  <=  200"
  },
  {
    "instruction": "",
    "input": "Tên của các sản phẩm có giá tối đa là gì?",
    "output": "SELECT name FROM products WHERE price  <=  200"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả thông tin của tất cả các sản phẩm với giá từ 60 đến 120 đô la.",
    "output": "SELECT * FROM products WHERE price BETWEEN 60 AND 120"
  },
  {
    "instruction": "",
    "input": "Tất cả thông tin của tất cả các sản phẩm có giá từ 60 đến 120 là gì?",
    "output": "SELECT * FROM products WHERE price BETWEEN 60 AND 120"
  },
  {
    "instruction": "",
    "input": "Tính giá trung bình của tất cả các sản phẩm.",
    "output": "SELECT avg(price) FROM products"
  },
  {
    "instruction": "",
    "input": "Giá trung bình trên tất cả các sản phẩm là bao nhiêu?",
    "output": "SELECT avg(price) FROM products"
  },
  {
    "instruction": "",
    "input": "Tính giá trung bình của tất cả các sản phẩm có mã nhà sản xuất bằng 2.",
    "output": "SELECT avg(price) FROM products WHERE Manufacturer  =  2"
  },
  {
    "instruction": "",
    "input": "Giá trung bình của các sản phẩm có mã nhà sản xuất bằng 2 là bao nhiêu?",
    "output": "SELECT avg(price) FROM products WHERE Manufacturer  =  2"
  },
  {
    "instruction": "",
    "input": "Tính toán số lượng sản phẩm có giá lớn hơn hoặc bằng $ 180.",
    "output": "SELECT count(*) FROM products WHERE price >= 180"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm có giá ít nhất 180?",
    "output": "SELECT count(*) FROM products WHERE price >= 180"
  },
  {
    "instruction": "",
    "input": "Chọn tên và giá của tất cả các sản phẩm có giá lớn hơn hoặc bằng $ 180 và sắp xếp đầu tiên theo giá (theo thứ tự giảm dần), và sau đó theo tên (theo thứ tự tăng dần).",
    "output": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC"
  },
  {
    "instruction": "",
    "input": "Tên và giá của các sản phẩm có giá ít nhất 180, được sắp xếp theo giá giảm và tăng dần tên là gì?",
    "output": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC"
  },
  {
    "instruction": "",
    "input": "Chọn tất cả dữ liệu từ sản phẩm và nhà sản xuất của mỗi sản phẩm.",
    "output": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code"
  },
  {
    "instruction": "",
    "input": "Tất cả các dữ liệu sản phẩm, cũng như mỗi nhà sản xuất của mỗi sản phẩm là gì?",
    "output": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code"
  },
  {
    "instruction": "",
    "input": "Chọn giá trung bình của mỗi sản phẩm của mỗi nhà sản xuất, chỉ hiển thị mã của nhà sản xuất.",
    "output": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer"
  },
  {
    "instruction": "",
    "input": "Giá trung bình của sản phẩm, được nhóm theo mã nhà sản xuất là gì?",
    "output": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer"
  },
  {
    "instruction": "",
    "input": "Chọn giá trung bình của mỗi sản phẩm của mỗi nhà sản xuất, hiển thị tên của nhà sản xuất.",
    "output": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"
  },
  {
    "instruction": "",
    "input": "Giá trung bình của sản phẩm, được nhóm theo tên nhà sản xuất là gì?",
    "output": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"
  },
  {
    "instruction": "",
    "input": "Chọn tên của nhà sản xuất có sản phẩm có giá trung bình cao hơn hoặc bằng $ 150.",
    "output": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150"
  },
  {
    "instruction": "",
    "input": "Tên và giá trung bình của các sản phẩm cho các nhà sản xuất có chi phí sản phẩm trung bình từ 150 trở lên là gì?",
    "output": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150"
  },
  {
    "instruction": "",
    "input": "Chọn tên và giá của sản phẩm rẻ nhất.",
    "output": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và giá của sản phẩm rẻ nhất là gì?",
    "output": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Chọn tên của mỗi nhà sản xuất cùng với tên và giá của sản phẩm đắt nhất của nó.",
    "output": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi tên nhà sản xuất, tên và giá của sản phẩm đắt nhất của họ là gì?",
    "output": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"
  },
  {
    "instruction": "",
    "input": "Chọn mã của sản phẩm rẻ nhất trong mỗi loại sản phẩm.",
    "output": "SELECT code ,  name ,  min(price) FROM products GROUP BY name"
  },
  {
    "instruction": "",
    "input": "Các mã và tên của các sản phẩm rẻ nhất trong mỗi danh mục là gì?",
    "output": "SELECT code ,  name ,  min(price) FROM products GROUP BY name"
  },
  {
    "instruction": "",
    "input": "ID của nhật ký vấn đề được tạo gần đây nhất là gì?",
    "output": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Nhật ký vấn đề nào được tạo gần đây nhất?Cho tôi ID nhật ký.",
    "output": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID nhật ký cũ nhất và ID vấn đề tương ứng của nó là gì?",
    "output": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID nhật ký cũ nhất và ID vấn đề tương ứng của nó.",
    "output": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các ID và ngày của nhật ký cho sự cố có ID là 10.",
    "output": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10"
  },
  {
    "instruction": "",
    "input": "Đối với sự cố với ID 10, hãy trả lại ID và ngày của nhật ký vấn đề của nó.",
    "output": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các ID nhật ký và mô tả của chúng từ nhật ký sự cố.",
    "output": "SELECT problem_log_id ,  log_entry_description FROM problem_log"
  },
  {
    "instruction": "",
    "input": "ID nhật ký và mô tả mục nhập của từng vấn đề là gì?",
    "output": "SELECT problem_log_id ,  log_entry_description FROM problem_log"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên đầu tiên và cuối cùng của tất cả các nhân viên riêng biệt được chỉ định cho vấn đề có ID là 1.",
    "output": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1"
  },
  {
    "instruction": "",
    "input": "Những nhân viên nào được giao cho vấn đề với ID 1?Cho tôi họ và họ của họ.",
    "output": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID vấn đề và ID nhật ký được gán cho nhân viên tên là Rylan Homenick.",
    "output": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\""
  },
  {
    "instruction": "",
    "input": "ID vấn đề và ID nhật ký nào được gán cho nhân viên tên là Rylan Homenick?",
    "output": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu vấn đề cho sản phẩm Voluptatem?",
    "output": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu vấn đề mà sản phẩm gọi là \"Voluptatem\" có trong hồ sơ?",
    "output": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu vấn đề mà sản phẩm có nhiều vấn đề nhất có?Liệt kê số lượng các vấn đề và tên sản phẩm.",
    "output": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Sản phẩm nào có nhiều vấn đề nhất?Cho tôi số lượng vấn đề và tên sản phẩm.",
    "output": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi một danh sách các mô tả về các vấn đề được báo cáo bởi các nhân viên có tên đầu tiên là Christop.",
    "output": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\""
  },
  {
    "instruction": "",
    "input": "Những vấn đề nào được báo cáo bởi các nhân viên có tên \"Christop\"?Hiển thị các mô tả về các vấn đề.",
    "output": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\""
  },
  {
    "instruction": "",
    "input": "Tìm ID của các vấn đề được báo cáo bởi các nhân viên có tên cuối cùng là Bosco.",
    "output": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\""
  },
  {
    "instruction": "",
    "input": "Những vấn đề nào được báo cáo bởi các nhân viên có họ \"Bosco\"?Hiển thị ID của các vấn đề.",
    "output": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\""
  },
  {
    "instruction": "",
    "input": "ID của các vấn đề được báo cáo sau 1978-06-26 là gì?",
    "output": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\""
  },
  {
    "instruction": "",
    "input": "Tìm ID của các vấn đề được báo cáo sau 1978-06-26.",
    "output": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\""
  },
  {
    "instruction": "",
    "input": "ID của các vấn đề được báo cáo trước 1978-06-26 là gì?",
    "output": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\""
  },
  {
    "instruction": "",
    "input": "Những vấn đề nào được báo cáo trước 1978-06-26?Cho tôi ID của các vấn đề.",
    "output": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\""
  },
  {
    "instruction": "",
    "input": "Đối với mỗi sản phẩm có vấn đề, số lượng vấn đề và ID sản phẩm là gì?",
    "output": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi sản phẩm có một số vấn đề, hãy liệt kê số lượng vấn đề và ID sản phẩm.",
    "output": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi sản phẩm có vấn đề, hãy tìm số lượng vấn đề được báo cáo sau 1986-11-13 và ID sản phẩm?",
    "output": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id"
  },
  {
    "instruction": "",
    "input": "Các sản phẩm có vấn đề được báo cáo sau 1986-11-13 là gì?Cung cấp cho tôi ID sản phẩm và số lượng các vấn đề được báo cáo sau 1986-11-13.",
    "output": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các tên sản phẩm riêng biệt theo thứ tự bảng chữ cái?",
    "output": "SELECT DISTINCT product_name FROM product ORDER BY product_name"
  },
  {
    "instruction": "",
    "input": "Sắp xếp tất cả các tên sản phẩm riêng biệt theo thứ tự bảng chữ cái.",
    "output": "SELECT DISTINCT product_name FROM product ORDER BY product_name"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên sản phẩm riêng biệt được đặt hàng bởi ID sản phẩm?",
    "output": "SELECT DISTINCT product_name FROM product ORDER BY product_id"
  },
  {
    "instruction": "",
    "input": "Danh sách các tên sản phẩm riêng biệt được sắp xếp theo ID sản phẩm là gì?",
    "output": "SELECT DISTINCT product_name FROM product ORDER BY product_id"
  },
  {
    "instruction": "",
    "input": "ID của các vấn đề được báo cáo bởi các nhân viên tên là Dameon Frami hoặc Jolie Weber là gì?",
    "output": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Jolie\" AND T2.staff_last_name = \"Weber\""
  },
  {
    "instruction": "",
    "input": "Những vấn đề nào đã được báo cáo bởi các nhân viên tên là Dameon Frami hoặc Jolie Weber?Cho tôi ID của các vấn đề.",
    "output": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Jolie\" AND T2.staff_last_name = \"Weber\""
  },
  {
    "instruction": "",
    "input": "ID sản phẩm cho các vấn đề được báo cáo bởi Christop Berge với việc đóng cửa được Ashley Medhurst ủy quyền là gì?",
    "output": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\" AND T2.staff_last_name = \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Ashley\" AND T2.staff_last_name = \"Medhurst\""
  },
  {
    "instruction": "",
    "input": "Đối với sản phẩm nào đã có một vấn đề được báo cáo bởi Christop Berge, với sự đóng cửa được ủy quyền bởi Ashley Medhurst?Trả lại ID sản phẩm.",
    "output": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\" AND T2.staff_last_name = \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Ashley\" AND T2.staff_last_name = \"Medhurst\""
  },
  {
    "instruction": "",
    "input": "ID của các vấn đề được báo cáo trước ngày có bất kỳ vấn đề nào được báo cáo bởi Lysanne Turcotte là gì?",
    "output": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Lysanne\" AND T4.staff_last_name = \"Turcotte\" )"
  },
  {
    "instruction": "",
    "input": "Những vấn đề nào đã được báo cáo trước ngày có bất kỳ vấn đề nào được báo cáo bởi nhân viên Lysanne Turcotte?Cho tôi ID của các vấn đề.",
    "output": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Lysanne\" AND T4.staff_last_name = \"Turcotte\" )"
  },
  {
    "instruction": "",
    "input": "ID của các vấn đề được báo cáo sau ngày có bất kỳ vấn đề nào được báo cáo bởi Rylan Homenick là gì?",
    "output": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\" )"
  },
  {
    "instruction": "",
    "input": "Tìm ID của các vấn đề được báo cáo sau ngày có bất kỳ vấn đề nào được báo cáo bởi nhân viên Rylan Homenick.",
    "output": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\" )"
  },
  {
    "instruction": "",
    "input": "Tìm 3 sản phẩm hàng đầu có số lượng vấn đề lớn nhất?",
    "output": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Ba sản phẩm có nhiều vấn đề nhất là gì",
    "output": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID của các vấn đề từ sản phẩm \"Voluptatem\" được báo cáo sau năm 1995?",
    "output": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\""
  },
  {
    "instruction": "",
    "input": "ID của các vấn đề từ sản phẩm \"Voluptatem\" là gì và được báo cáo sau năm 1995 là gì?",
    "output": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\""
  },
  {
    "instruction": "",
    "input": "Tìm họ và họ của các nhân viên đã báo cáo các vấn đề từ sản phẩm \"REM\" nhưng không phải là \"Aut\"?",
    "output": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\""
  },
  {
    "instruction": "",
    "input": "Những nhân viên nào đã báo cáo các vấn đề từ sản phẩm \"REM\" nhưng không phải là \"Aut\"?Cho tôi họ và họ của họ.",
    "output": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\""
  },
  {
    "instruction": "",
    "input": "Tìm các sản phẩm có vấn đề được báo cáo bởi cả Lacey Bosco và Kenton Champlin?",
    "output": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\""
  },
  {
    "instruction": "",
    "input": "Những sản phẩm nào có vấn đề được báo cáo bởi cả hai nhân viên tên Lacey Bosco và các nhân viên tên là Kenton Champlin?",
    "output": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu chi nhánh có nhiều hơn số lượng thành viên trung bình?",
    "output": "SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch)"
  },
  {
    "instruction": "",
    "input": "Số lượng các chi nhánh có nhiều hơn số lượng thành viên trung bình là bao nhiêu?",
    "output": "SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, đường địa chỉ và thành phố cho tất cả các chi nhánh được sắp xếp theo năm mở.",
    "output": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year"
  },
  {
    "instruction": "",
    "input": "Tên, đường địa chỉ và các thành phố của các chi nhánh được đặt hàng trước năm mở cửa là gì?",
    "output": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year"
  },
  {
    "instruction": "",
    "input": "Tên cho ba chi nhánh hàng đầu với số lượng thành viên là gì?",
    "output": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tên của 3 nhánh có nhiều thành viên nhất là gì?",
    "output": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các thành phố riêng biệt nơi các chi nhánh có ít nhất 100 thành viên được đặt.",
    "output": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100"
  },
  {
    "instruction": "",
    "input": "Các thành phố khác nhau có hơn 100 thành viên là gì?",
    "output": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các năm mở khi có ít nhất hai cửa hàng được mở.",
    "output": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Những năm khai mạc trong đó ít nhất hai cửa hàng đã mở là gì?",
    "output": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng thành viên tối thiểu và tối đa cho tất cả các chi nhánh được mở vào năm 2011 hoặc đặt tại City London.",
    "output": "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London'"
  },
  {
    "instruction": "",
    "input": "Số tiền thành viên tối thiểu và tối đa cho tất cả các chi nhánh được mở vào năm 2011 hoặc được đặt tại London?",
    "output": "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London'"
  },
  {
    "instruction": "",
    "input": "Hiển thị thành phố và số lượng chi nhánh được mở trước năm 2010 cho mỗi thành phố.",
    "output": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi thành phố, có bao nhiêu chi nhánh mở trước năm 2010?",
    "output": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city"
  },
  {
    "instruction": "",
    "input": "Các thành viên có bao nhiêu cấp độ khác nhau?",
    "output": "SELECT count(DISTINCT LEVEL) FROM member"
  },
  {
    "instruction": "",
    "input": "Các cấp thành viên khác nhau là gì?",
    "output": "SELECT count(DISTINCT LEVEL) FROM member"
  },
  {
    "instruction": "",
    "input": "Hiển thị số thẻ, tên và quê hương cho tất cả các thành viên theo thứ tự giảm dần.",
    "output": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC"
  },
  {
    "instruction": "",
    "input": "Các số thẻ, tên và quê hương của mỗi thành viên được đặt hàng theo cấp độ giảm dần là gì?",
    "output": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị cấp độ thành viên với hầu hết các thành viên.",
    "output": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mức độ thành viên với nhiều người nhất là gì?",
    "output": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên thành viên và tên chi nhánh đã đăng ký được sắp xếp theo năm đăng ký.",
    "output": "SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year"
  },
  {
    "instruction": "",
    "input": "Tên của các thành viên và chi nhánh mà chúng được đăng ký được sắp xếp theo năm đăng ký là gì?",
    "output": "SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên chi nhánh với số lượng thành viên trong mỗi chi nhánh được đăng ký sau năm 2015.",
    "output": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ID chi nhánh, tên của các chi nhánh đã được đăng ký sau năm 2015 là gì?",
    "output": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên thành viên mà không có bất kỳ chi nhánh đã đăng ký.",
    "output": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)"
  },
  {
    "instruction": "",
    "input": "Tên của các thành viên chưa bao giờ đăng ký tại bất kỳ chi nhánh nào là gì?",
    "output": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên chi nhánh và thành phố mà không có bất kỳ thành viên đã đăng ký.",
    "output": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)"
  },
  {
    "instruction": "",
    "input": "Tên và thành phố của các chi nhánh không có thành viên đã đăng ký là gì?",
    "output": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)"
  },
  {
    "instruction": "",
    "input": "Tên và năm mở cho chi nhánh với hầu hết các thành viên được đăng ký trong năm 2016 là gì?",
    "output": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và năm mở cửa cho chi nhánh đã đăng ký nhiều thành viên nhất trong năm 2016 là gì?",
    "output": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên thành viên và quê hương đã đăng ký một chi nhánh vào năm 2016.",
    "output": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016"
  },
  {
    "instruction": "",
    "input": "Tên thành viên và quê hương của những người đã đăng ký tại một chi nhánh vào năm 2016 là gì?",
    "output": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả thành phố với một chi nhánh được mở vào năm 2001 và một chi nhánh với hơn 100 thành viên.",
    "output": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100"
  },
  {
    "instruction": "",
    "input": "Các thành phố có một chi nhánh được mở vào năm 2001 và một chi nhánh với hơn 100 thành viên là gì?",
    "output": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các thành phố mà không có chi nhánh có hơn 100 thành viên.",
    "output": "SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100"
  },
  {
    "instruction": "",
    "input": "Các thành phố không có bất kỳ chi nhánh nào với hơn 100 thành viên là gì?",
    "output": "SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100"
  },
  {
    "instruction": "",
    "input": "Tổng số pound mua trong năm 2018 cho tất cả các chi nhánh ở London là bao nhiêu?",
    "output": "SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  'London' AND T1.year  =  2018"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bảng đã mua trong năm 2018 tại tất cả các chi nhánh của London?",
    "output": "SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  'London' AND T1.year  =  2018"
  },
  {
    "instruction": "",
    "input": "Tổng số mua hàng cho các thành viên có cấp 6 là bao nhiêu?",
    "output": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6"
  },
  {
    "instruction": "",
    "input": "Tổng số mua hàng cho các thành viên được xếp hạng ở cấp 6 là gì?",
    "output": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các chi nhánh nơi có một số thành viên có quê hương ở Louisville, Kentucky và một số ở Hiram, Georgia.",
    "output": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'"
  },
  {
    "instruction": "",
    "input": "Tên của các chi nhánh có một số thành viên với quê hương ở Louisville, Kentucky và cả những người đến từ Hiram, Goergia là gì?",
    "output": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'"
  },
  {
    "instruction": "",
    "input": "Liệt kê số thẻ của tất cả các thành viên có địa chỉ quê hương bao gồm Word \"Kentucky\".",
    "output": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\""
  },
  {
    "instruction": "",
    "input": "Số lượng thẻ của các thành viên từ Kentucky là gì?",
    "output": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng học sinh trong tổng số.",
    "output": "SELECT count(*) FROM STUDENT"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu sinh viên?",
    "output": "SELECT count(*) FROM STUDENT"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng hồ sơ bỏ phiếu trong tổng số.",
    "output": "SELECT count(*) FROM VOTING_RECORD"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu hồ sơ bỏ phiếu?",
    "output": "SELECT count(*) FROM VOTING_RECORD"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng phiếu bầu riêng biệt.",
    "output": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phiếu bầu riêng biệt được ghi lại?",
    "output": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD"
  },
  {
    "instruction": "",
    "input": "Tìm tuổi tối đa của tất cả các sinh viên.",
    "output": "SELECT max(Age) FROM STUDENT"
  },
  {
    "instruction": "",
    "input": "Tuổi già nhất trong số các học sinh là gì?",
    "output": "SELECT max(Age) FROM STUDENT"
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của học sinh có chính 50.",
    "output": "SELECT LName FROM STUDENT WHERE Major  =  50"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của học sinh học chính 50 là gì?",
    "output": "SELECT LName FROM STUDENT WHERE Major  =  50"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của học sinh có tuổi trên 22.",
    "output": "SELECT Fname FROM STUDENT WHERE Age  >  22"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các học sinh trên 22 tuổi là gì?",
    "output": "SELECT Fname FROM STUDENT WHERE Age  >  22"
  },
  {
    "instruction": "",
    "input": "Các chuyên ngành của học sinh nam (tình dục là M) là gì?",
    "output": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\""
  },
  {
    "instruction": "",
    "input": "Liệt kê chính của mỗi học sinh nam.",
    "output": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\""
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình của học sinh nữ (giới tính là F) là bao nhiêu?",
    "output": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\""
  },
  {
    "instruction": "",
    "input": "Tìm tuổi trung bình của học sinh nữ.",
    "output": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\""
  },
  {
    "instruction": "",
    "input": "Tuổi tối đa và tối thiểu của học sinh với 600 lớn là bao nhiêu?",
    "output": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600"
  },
  {
    "instruction": "",
    "input": "Nói cho tôi biết độ tuổi của các sinh viên lớn tuổi nhất và trẻ nhất đang học chính 600.",
    "output": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600"
  },
  {
    "instruction": "",
    "input": "Ai là cố vấn cho các sinh viên sống trong một thành phố có mã thành phố \"BAL\"?",
    "output": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\""
  },
  {
    "instruction": "",
    "input": "Hiển thị các cố vấn của các sinh viên có thành phố cư trú có mã thành phố \"BAL\".",
    "output": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\""
  },
  {
    "instruction": "",
    "input": "Các phiếu bầu riêng biệt trong chu kỳ bầu cử mùa thu là gì?",
    "output": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\""
  },
  {
    "instruction": "",
    "input": "Trả lại tất cả các phiếu bầu riêng biệt được thực hiện trong chu kỳ bầu cử mùa thu.",
    "output": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\""
  },
  {
    "instruction": "",
    "input": "Các phiếu bầu của Tổng thống khác biệt vào ngày 30/08/2015 là gì?",
    "output": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các phiếu bầu riêng biệt được thực hiện vào ngày 30/08/2015.",
    "output": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\""
  },
  {
    "instruction": "",
    "input": "Báo cáo ngày đăng ký riêng biệt và chu kỳ bầu cử.",
    "output": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD"
  },
  {
    "instruction": "",
    "input": "Các ngày đăng ký riêng biệt và các chu kỳ bầu cử là gì?",
    "output": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD"
  },
  {
    "instruction": "",
    "input": "Báo cáo các cuộc bỏ phiếu của Tổng thống khác biệt và Phó Tổng thống bỏ phiếu.",
    "output": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các phiếu bầu của Tổng thống và Phó Tổng thống.",
    "output": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD"
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của các sinh viên có phiếu bầu của lớp.",
    "output": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của các sinh viên có phiếu bầu của lớp là gì?",
    "output": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên khác biệt của các sinh viên có phiếu bầu Thượng nghị sĩ lớp.",
    "output": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên khác biệt của các sinh viên có phiếu bầu của lớp là gì?",
    "output": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE"
  },
  {
    "instruction": "",
    "input": "Tìm độ tuổi khác biệt của các sinh viên có phiếu bầu trong chu kỳ bầu cử mùa thu.",
    "output": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\""
  },
  {
    "instruction": "",
    "input": "Các độ tuổi khác biệt của các sinh viên có phiếu bầu trong chu kỳ bầu cử mùa thu là gì?",
    "output": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\""
  },
  {
    "instruction": "",
    "input": "Tìm cố vấn riêng biệt của các sinh viên có phiếu bầu thủ quỹ trong chu kỳ bầu cử mùa xuân.",
    "output": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\""
  },
  {
    "instruction": "",
    "input": "Ai phục vụ như một cố vấn cho các sinh viên có phiếu bầu thủ quỹ trong chu kỳ bầu cử mùa xuân?",
    "output": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\""
  },
  {
    "instruction": "",
    "input": "Tìm các chuyên ngành khác biệt của các sinh viên có phiếu bầu thủ quỹ.",
    "output": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote"
  },
  {
    "instruction": "",
    "input": "Các chuyên ngành khác biệt mà sinh viên có phiếu bầu Thủ quỹ đang học là gì?",
    "output": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên và cuối cùng của tất cả các sinh viên nữ (giới tính là F) có phiếu bầu của Tổng thống.",
    "output": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tất cả các nữ sinh viên có phiếu bầu tổng thống là gì?",
    "output": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\""
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên và cuối cùng của tất cả các sinh viên 18 tuổi có phiếu tổng thống.",
    "output": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18"
  },
  {
    "instruction": "",
    "input": "Tên và tên cuối cùng của các sinh viên 18 tuổi và có phiếu bầu của Phó Tổng thống.",
    "output": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh (giới tính là M) có phiếu bầu của Thượng nghị sĩ trong chu kỳ bầu cử mùa thu?",
    "output": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  \"M\" AND T2.Election_Cycle  =  \"Fall\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng sinh viên nam có phiếu bầu Thượng nghị sĩ trong chu kỳ bầu cử mùa thu.",
    "output": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  \"M\" AND T2.Election_Cycle  =  \"Fall\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sinh viên có mã thành phố là NYC và có phiếu bầu của Thượng nghị sĩ trong chu kỳ bầu cử mùa xuân.",
    "output": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\""
  },
  {
    "instruction": "",
    "input": "Học sinh nào sống trong thành phố với mã \"NYC\" và có phiếu bầu của Thượng nghị sĩ trong chu kỳ bầu cử mùa xuân?Đếm các con số.",
    "output": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\""
  },
  {
    "instruction": "",
    "input": "Tìm độ tuổi trung bình của các sinh viên sống trong thành phố với mã \"NYC\" và có phiếu bầu trong chu kỳ bầu cử mùa xuân.",
    "output": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\""
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình của học sinh có mã thành phố \"NYC\" và có phiếu bầu của thư ký cho chu kỳ bầu cử mùa xuân là bao nhiêu?",
    "output": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\""
  },
  {
    "instruction": "",
    "input": "Tìm tuổi trung bình của nữ (giới tính là F) sinh viên có phiếu bầu trong chu kỳ bầu cử mùa xuân.",
    "output": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\""
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình của các sinh viên nữ với phiếu bầu trong chu kỳ bầu cử mùa xuân là bao nhiêu?",
    "output": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\""
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên khác biệt của tất cả các sinh viên có phiếu bầu của Phó Tổng thống và có mã thành phố không phải là hố.",
    "output": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"PIT\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên khác biệt của các sinh viên có phiếu bầu của Phó Tổng thống và cư trú tại một thành phố có mã thành phố không phải là hố?",
    "output": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"PIT\""
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của tất cả các sinh viên có phiếu bầu của Tổng thống và cố vấn không phải là 2192.",
    "output": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\""
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng khác biệt của các sinh viên có phiếu bầu của Tổng thống nhưng không có 2192 làm cố vấn?",
    "output": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\""
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng của tất cả các sinh viên có phiếu bầu của Tổng thống và cố vấn là 8741.",
    "output": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\""
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của các sinh viên có phiếu bầu của Tổng thống và có 8741 là cố vấn là gì?",
    "output": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\""
  },
  {
    "instruction": "",
    "input": "Đối với mỗi cố vấn, báo cáo tổng số sinh viên được tư vấn bởi anh ấy hoặc cô ấy.",
    "output": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor"
  },
  {
    "instruction": "",
    "input": "Mỗi cố vấn có bao nhiêu sinh viên?",
    "output": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor"
  },
  {
    "instruction": "",
    "input": "Báo cáo tất cả các cố vấn tư vấn hơn 2 sinh viên.",
    "output": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Những cố vấn nào có nhiều hơn hai sinh viên?",
    "output": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Báo cáo tất cả các chuyên ngành có ít hơn 3 sinh viên.",
    "output": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3"
  },
  {
    "instruction": "",
    "input": "Các chuyên ngành chỉ dưới ba sinh viên đang học là gì?",
    "output": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi chu kỳ bầu cử, báo cáo số lượng hồ sơ bỏ phiếu.",
    "output": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng hồ sơ bỏ phiếu cho mỗi chu kỳ bầu cử.",
    "output": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle"
  },
  {
    "instruction": "",
    "input": "Chuyên ngành nào có nhiều sinh viên nhất?",
    "output": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm chuyên ngành được nghiên cứu bởi số lượng sinh viên lớn nhất.",
    "output": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Chuyên ngành phổ biến nhất trong số các sinh viên nữ (giới tính là F) là gì?",
    "output": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm chuyên ngành được nghiên cứu bởi các sinh viên nữ nhất.",
    "output": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "City_code của thành phố mà nhiều sinh viên sống nhất là gì?",
    "output": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại mã của thành phố có nhiều sinh viên nhất.",
    "output": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Báo cáo các cố vấn riêng biệt có hơn 2 sinh viên.",
    "output": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Những cố vấn nào đang tư vấn hơn 2 sinh viên?",
    "output": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm?",
    "output": "SELECT count(*) FROM products"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng sản phẩm.",
    "output": "SELECT count(*) FROM products"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu màu?",
    "output": "SELECT count(*) FROM ref_colors"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng màu sắc.",
    "output": "SELECT count(*) FROM ref_colors"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu đặc điểm?",
    "output": "SELECT count(*) FROM CHARACTERISTICS"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng đặc điểm.",
    "output": "SELECT count(*) FROM CHARACTERISTICS"
  },
  {
    "instruction": "",
    "input": "Tên và giá mua của tất cả các sản phẩm là gì?",
    "output": "SELECT product_name ,  typical_buying_price FROM products"
  },
  {
    "instruction": "",
    "input": "Trả lại tên và giá mua điển hình cho tất cả các sản phẩm.",
    "output": "SELECT product_name ,  typical_buying_price FROM products"
  },
  {
    "instruction": "",
    "input": "Liệt kê mô tả của tất cả các màu.",
    "output": "SELECT color_description FROM ref_colors"
  },
  {
    "instruction": "",
    "input": "Các mô tả cho mỗi màu là gì?",
    "output": "SELECT color_description FROM ref_colors"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các đặc điểm sản phẩm.",
    "output": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS"
  },
  {
    "instruction": "",
    "input": "Các tên khác nhau của các đặc tính sản phẩm là gì?",
    "output": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS"
  },
  {
    "instruction": "",
    "input": "Tên của các sản phẩm có thể loại \"gia vị\" là gì?",
    "output": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\""
  },
  {
    "instruction": "",
    "input": "Trả về tên của các sản phẩm trong danh mục 'Gia vị'.",
    "output": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\""
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên, mô tả màu sắc và mô tả sản phẩm của các sản phẩm với danh mục \"thảo mộc\".",
    "output": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\""
  },
  {
    "instruction": "",
    "input": "Tên, mô tả màu sắc và mô tả sản phẩm cho các sản phẩm trong danh mục 'thảo mộc' là gì?",
    "output": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm trong danh mục \"hạt giống\"?",
    "output": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng sản phẩm trong danh mục 'hạt'.",
    "output": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sản phẩm có thể loại \"gia vị\" và thường được bán trên 1000.",
    "output": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm trong danh mục 'gia vị' và có giá thông thường hơn 1000?",
    "output": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000"
  },
  {
    "instruction": "",
    "input": "Danh mục và giá mua điển hình của sản phẩm với tên \"Cumin\" là gì?",
    "output": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\""
  },
  {
    "instruction": "",
    "input": "Trả lại mã danh mục và giá điển hình của 'thì là'.",
    "output": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\""
  },
  {
    "instruction": "",
    "input": "Sản phẩm có tên \"Flax\" thuộc loại nào?",
    "output": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\""
  },
  {
    "instruction": "",
    "input": "Mã của danh mục mà sản phẩm có tên 'Flax' thuộc về là gì?",
    "output": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\""
  },
  {
    "instruction": "",
    "input": "Tên của sản phẩm với mô tả màu 'vàng' là gì?",
    "output": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'"
  },
  {
    "instruction": "",
    "input": "Đặt tên của các sản phẩm có mô tả màu 'vàng'.",
    "output": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'"
  },
  {
    "instruction": "",
    "input": "Tìm các mô tả danh mục của các sản phẩm có mô tả bao gồm chữ 't'.",
    "output": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'"
  },
  {
    "instruction": "",
    "input": "Các mô tả của các danh mục mà các sản phẩm có mô tả sản phẩm có chứa chữ cái T là gì?",
    "output": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'"
  },
  {
    "instruction": "",
    "input": "Mô tả màu của sản phẩm có tên \"catnip\" là gì?",
    "output": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\""
  },
  {
    "instruction": "",
    "input": "Đưa ra mô tả màu cho sản phẩm 'catnip'.",
    "output": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\""
  },
  {
    "instruction": "",
    "input": "Mã màu và mô tả của sản phẩm có tên là \"Chervil\" là gì?",
    "output": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\""
  },
  {
    "instruction": "",
    "input": "Trả lại mã màu và mô tả cho sản phẩm với tên 'Chervil'.",
    "output": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\""
  },
  {
    "instruction": "",
    "input": "Tìm ID và mô tả màu của các sản phẩm có ít nhất 2 đặc điểm.",
    "output": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "ID sản phẩm và mô tả màu cho các sản phẩm có hai hoặc nhiều đặc tính là gì?",
    "output": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên sản phẩm với mô tả màu \"trắng\".",
    "output": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\""
  },
  {
    "instruction": "",
    "input": "Tên của các sản phẩm có 'trắng' như mô tả màu sắc của chúng là gì?",
    "output": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\""
  },
  {
    "instruction": "",
    "input": "Tên và giá mua và bán điển hình của các sản phẩm có màu được mô tả là \"màu vàng\" là gì?",
    "output": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\""
  },
  {
    "instruction": "",
    "input": "Trả lại tên và giá mua và bán điển hình cho các sản phẩm có 'màu vàng' như mô tả màu sắc của chúng.",
    "output": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\""
  },
  {
    "instruction": "",
    "input": "Sản phẩm có tên \"Sesame\" có bao nhiêu đặc điểm?",
    "output": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sesame\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng đặc điểm mà sản phẩm 'Sesame' có.",
    "output": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sesame\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tên đặc trưng riêng biệt mà sản phẩm \"Cumin\" có?",
    "output": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng tên đặc trưng khác nhau mà sản phẩm 'thì là' có.",
    "output": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\""
  },
  {
    "instruction": "",
    "input": "Tất cả các tên đặc trưng của sản phẩm \"Sesame\" là gì?",
    "output": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\""
  },
  {
    "instruction": "",
    "input": "Trả về tên đặc trưng của sản phẩm 'Sesame'.",
    "output": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên đặc trưng và các loại dữ liệu của sản phẩm \"thì là\".",
    "output": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\""
  },
  {
    "instruction": "",
    "input": "Các tên và loại dữ liệu của các đặc điểm của sản phẩm 'thì là' là gì?",
    "output": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các đặc điểm của sản phẩm có tên \"Sesame\" với mã loại \"Lớp\".",
    "output": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code  =  \"Grade\""
  },
  {
    "instruction": "",
    "input": "Tên của các đặc điểm của sản phẩm 'mè' có mã loại đặc trưng 'lớp' là gì?",
    "output": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code  =  \"Grade\""
  },
  {
    "instruction": "",
    "input": "Sản phẩm có tên \"Vòng nguyệt quế\" có bao nhiêu đặc điểm?",
    "output": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laurel\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng đặc điểm của sản phẩm có tên 'Vòng nguyệt quế'.",
    "output": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laurel\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng đặc điểm mà sản phẩm \"Flax\" có.",
    "output": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"flax\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng đặc điểm của sản phẩm 'lanh'.",
    "output": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"flax\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sản phẩm có mô tả màu \"đỏ\" và có tên đặc trưng \"nhanh\".",
    "output": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\""
  },
  {
    "instruction": "",
    "input": "Tên của các sản phẩm có mô tả màu của 'đỏ' và đặc tính 'nhanh' là gì?",
    "output": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm có đặc điểm có tên là \"nóng\"?",
    "output": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"hot\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng sản phẩm với đặc tính 'nóng'.",
    "output": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"hot\""
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên riêng biệt của các sản phẩm với tên đặc trưng 'ấm áp'.",
    "output": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\""
  },
  {
    "instruction": "",
    "input": "Tên sản phẩm khác nhau cho các sản phẩm có đặc tính 'ấm áp' :?",
    "output": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sản phẩm có màu của chúng được mô tả là \"màu đỏ\" và có một đặc tính có tên là \"chậm\".",
    "output": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"slow\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm có mô tả màu 'đỏ' và tên đặc trưng 'chậm'?",
    "output": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"slow\""
  },
  {
    "instruction": "",
    "input": "Đếm các sản phẩm có mô tả màu \"trắng\" hoặc có tên đặc trưng \"nóng\".",
    "output": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"white\" OR t3.characteristic_name  =  \"hot\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm có màu của chúng được mô tả là 'trắng' hoặc có một đặc điểm với tên 'nóng'?",
    "output": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"white\" OR t3.characteristic_name  =  \"hot\""
  },
  {
    "instruction": "",
    "input": "Đơn vị đo lường của mã loại sản phẩm \"Thảo dược\" là gì?",
    "output": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\""
  },
  {
    "instruction": "",
    "input": "Trả lại đơn vị đo lường cho các sản phẩm 'thảo mộc'.",
    "output": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\""
  },
  {
    "instruction": "",
    "input": "Tìm mô tả danh mục sản phẩm của danh mục sản phẩm với mã \"gia vị\".",
    "output": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\""
  },
  {
    "instruction": "",
    "input": "Mô tả của danh mục sản phẩm với mã 'gia vị' là gì?",
    "output": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\""
  },
  {
    "instruction": "",
    "input": "Mô tả danh mục sản phẩm và đơn vị đo lường \"Thảo dược\" là gì?",
    "output": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\""
  },
  {
    "instruction": "",
    "input": "Trả về mô tả và đơn vị đo lường cho các sản phẩm trong danh mục 'thảo mộc'.",
    "output": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\""
  },
  {
    "instruction": "",
    "input": "Đơn vị đo lường sản phẩm có tên là \"thì là\" là gì?",
    "output": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"cumin\""
  },
  {
    "instruction": "",
    "input": "Đưa ra đơn vị đo lường cho sản phẩm với tên 'thì là'.",
    "output": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"cumin\""
  },
  {
    "instruction": "",
    "input": "Tìm đơn vị đo lường và mã loại sản phẩm của sản phẩm có tên là \"Chervil\".",
    "output": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\""
  },
  {
    "instruction": "",
    "input": "Đơn vị đo lường và mã danh mục cho sản phẩm 'Chervil' là gì?",
    "output": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\""
  },
  {
    "instruction": "",
    "input": "Tìm các tên sản phẩm có màu 'trắng' nhưng không có đơn vị đo lường \"tìm kiếm\".",
    "output": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"white\" AND t2.unit_of_measure != \"Handful\""
  },
  {
    "instruction": "",
    "input": "Tên của các sản phẩm không có màu 'trắng' và không được đo bằng đơn vị 'một số'?",
    "output": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"white\" AND t2.unit_of_measure != \"Handful\""
  },
  {
    "instruction": "",
    "input": "Mô tả về màu sắc cho hầu hết các sản phẩm là gì?",
    "output": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về mô tả màu phổ biến nhất trên tất cả các sản phẩm.",
    "output": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mô tả về màu sắc được sử dụng bởi các sản phẩm ít nhất là gì?",
    "output": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đưa ra mô tả màu sắc ít phổ biến nhất trên các sản phẩm.",
    "output": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên đặc trưng được sử dụng bởi hầu hết các sản phẩm là gì?",
    "output": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về tên của đặc tính phổ biến nhất trên tất cả các sản phẩm.",
    "output": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên, chi tiết và loại dữ liệu của các đặc điểm không bao giờ được sử dụng bởi bất kỳ sản phẩm nào?",
    "output": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id"
  },
  {
    "instruction": "",
    "input": "Đặt tên, chi tiết và các loại đặc điểm dữ liệu không được tìm thấy trong bất kỳ sản phẩm nào.",
    "output": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id"
  },
  {
    "instruction": "",
    "input": "Tên đặc trưng được sử dụng ít nhất hai lần trên tất cả các sản phẩm là gì?",
    "output": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2"
  },
  {
    "instruction": "",
    "input": "Cho tên của các đặc điểm có hai sản phẩm trở lên?",
    "output": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu màu không bao giờ được sử dụng bởi bất kỳ sản phẩm?",
    "output": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng màu sắc không được sử dụng trong bất kỳ sản phẩm nào.",
    "output": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sự kiện?",
    "output": "SELECT count(*) FROM event"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên sự kiện theo năm từ gần đây nhất đến lâu đời nhất.",
    "output": "SELECT name FROM event ORDER BY YEAR DESC"
  },
  {
    "instruction": "",
    "input": "Tên của sự kiện đã xảy ra trong năm gần đây nhất là gì?",
    "output": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sân vận động?",
    "output": "SELECT count(*) FROM stadium"
  },
  {
    "instruction": "",
    "input": "Tìm tên của sân vận động có công suất tối đa.",
    "output": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sân vận động có công suất nhỏ hơn công suất trung bình.",
    "output": "SELECT name FROM stadium WHERE capacity  <  (SELECT avg(capacity) FROM stadium)"
  },
  {
    "instruction": "",
    "input": "Tìm đất nước có nhiều sân vận động nhất.",
    "output": "SELECT country FROM stadium GROUP BY country ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Quốc gia nào có tối đa 3 sân vận động được liệt kê?",
    "output": "SELECT country FROM stadium GROUP BY country HAVING count(*)  <=  3"
  },
  {
    "instruction": "",
    "input": "Quốc gia nào có cả hai sân vận động có công suất lớn hơn 60000 và sân vận động có công suất dưới 50000?",
    "output": "SELECT country FROM stadium WHERE capacity  >  60000 INTERSECT SELECT country FROM stadium WHERE capacity  <  50000"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành phố có một sân vận động được mở trước năm 2006?",
    "output": "SELECT count(DISTINCT city) FROM stadium WHERE opening_year  <  2006"
  },
  {
    "instruction": "",
    "input": "Mỗi quốc gia có bao nhiêu sân vận động?",
    "output": "SELECT country ,  count(*) FROM stadium GROUP BY country"
  },
  {
    "instruction": "",
    "input": "Những quốc gia nào không có sân vận động được mở sau năm 2006?",
    "output": "SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sân vận động không ở trong nước \"Nga\"?",
    "output": "SELECT count(*) FROM stadium WHERE country != 'Russia'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả những người bơi, được sắp xếp theo điểm 100 mét của họ theo thứ tự tăng dần.",
    "output": "SELECT name FROM swimmer ORDER BY meter_100"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu quốc gia khác nhau là tất cả những người bơi từ?",
    "output": "SELECT count(DISTINCT nationality) FROM swimmer"
  },
  {
    "instruction": "",
    "input": "Danh sách các quốc gia có nhiều hơn một vận động viên bơi lội.",
    "output": "SELECT nationality ,  count(*) FROM swimmer GROUP BY nationality HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả kết quả 200 mét và 300 mét của những người bơi lội với quốc tịch \"Úc\".",
    "output": "SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những người bơi có kết quả của \"chiến thắng\".",
    "output": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win'"
  },
  {
    "instruction": "",
    "input": "Tên của sân vận động tổ chức nhiều sự kiện nhất là gì?",
    "output": "SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên và năng lực của sân vận động nơi sự kiện có tên là \"World Junior\" đã xảy ra.",
    "output": "SELECT t1.name ,  t1.capacity FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id WHERE t2.name  =  'World Junior'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sân vận động chưa bao giờ có bất kỳ sự kiện nào.",
    "output": "SELECT name FROM stadium WHERE id NOT IN (SELECT stadium_id FROM event)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của vận động viên bơi lội có nhiều hồ sơ nhất.",
    "output": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của vận động viên bơi lội có ít nhất 2 hồ sơ.",
    "output": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tìm tên và quốc tịch của vận động viên bơi lội đã giành chiến thắng (tức là, có kết quả là \"thắng\") hơn 1 lần.",
    "output": "SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những người bơi không có hồ sơ.",
    "output": "SELECT name FROM swimmer WHERE id NOT IN (SELECT swimmer_id FROM record)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những người bơi có cả hai kết quả \"thắng\" và \"mất\" trong hồ sơ.",
    "output": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' INTERSECT SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Loss'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sân vận động mà một số vận động viên bơi lội Úc đã đến.",
    "output": "SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id JOIN event AS t3 ON t2.event_id  =  t3.id JOIN stadium AS t4 ON t4.id  =  t3.stadium_id WHERE t1.nationality  =  'Australia'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sân vận động mà nhiều người bơi nhất đã đến.",
    "output": "SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các chi tiết cho mỗi người bơi.",
    "output": "SELECT * FROM swimmer"
  },
  {
    "instruction": "",
    "input": "Công suất trung bình của các sân vận động đã được mở vào năm 2005 là bao nhiêu?",
    "output": "SELECT avg(capacity) FROM stadium WHERE opening_year  =  2005"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu đường sắt?",
    "output": "SELECT count(*) FROM railway"
  },
  {
    "instruction": "",
    "input": "Liệt kê các nhà xây dựng đường sắt theo thứ tự bảng chữ cái tăng dần.",
    "output": "SELECT Builder FROM railway ORDER BY Builder ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê các bánh xe và vị trí của đường sắt.",
    "output": "SELECT Wheels ,  LOCATION FROM railway"
  },
  {
    "instruction": "",
    "input": "Mức độ tối đa của các nhà quản lý ở các quốc gia không phải là \"Úc\" là bao nhiêu?",
    "output": "SELECT max(LEVEL) FROM manager WHERE Country != \"Australia\t\""
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình cho tất cả các nhà quản lý là gì?",
    "output": "SELECT avg(Age) FROM manager"
  },
  {
    "instruction": "",
    "input": "Tên của các nhà quản lý theo thứ tự tăng dần của cấp độ là gì?",
    "output": "SELECT Name FROM manager ORDER BY LEVEL ASC"
  },
  {
    "instruction": "",
    "input": "Tên và thời gian đến của tàu là gì?",
    "output": "SELECT Name ,  Arrival FROM train"
  },
  {
    "instruction": "",
    "input": "Tên của người quản lý lâu đời nhất là gì?",
    "output": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các chuyến tàu và địa điểm của đường sắt mà họ đang ở.",
    "output": "SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị người xây dựng đường sắt liên quan đến các chuyến tàu có tên \"Andaman Exp\".",
    "output": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID WHERE T2.Name  =  \"Andaman Exp\""
  },
  {
    "instruction": "",
    "input": "Hiển thị ID và vị trí của đường sắt có liên quan đến nhiều hơn một chuyến tàu.",
    "output": "SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID và người xây dựng đường sắt được liên kết với nhiều chuyến tàu nhất.",
    "output": "SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các nhà xây dựng đường sắt khác nhau, cùng với số lượng đường sắt tương ứng sử dụng mỗi người xây dựng.",
    "output": "SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder"
  },
  {
    "instruction": "",
    "input": "Hiển thị các nhà xây dựng phổ biến nhất của đường sắt.",
    "output": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các vị trí khác nhau của đường sắt cùng với số lượng đường sắt tương ứng tại mỗi địa điểm.",
    "output": "SELECT LOCATION ,  COUNT(*) FROM railway GROUP BY LOCATION"
  },
  {
    "instruction": "",
    "input": "Hiển thị các vị trí có nhiều hơn một đường sắt.",
    "output": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Liệt kê số lượng đối tượng của đường sắt không có bất kỳ chuyến tàu nào.",
    "output": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)"
  },
  {
    "instruction": "",
    "input": "Cho thấy các quốc gia có cả người quản lý trên 50 tuổi và các nhà quản lý tuổi dưới 46.",
    "output": "SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46"
  },
  {
    "instruction": "",
    "input": "Cho thấy các quốc gia khác nhau của các nhà quản lý.",
    "output": "SELECT DISTINCT Country FROM manager"
  },
  {
    "instruction": "",
    "input": "Hiển thị những năm làm việc của các nhà quản lý theo thứ tự giảm dần của cấp độ của họ.",
    "output": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị các quốc gia có các nhà quản lý trên 50 tuổi trở lên.",
    "output": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu địa chỉ ở Country USA?",
    "output": "SELECT count(*) FROM addresses WHERE country  =  'USA'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các thành phố riêng biệt trong hồ sơ địa chỉ.",
    "output": "SELECT DISTINCT city FROM addresses"
  },
  {
    "instruction": "",
    "input": "Hiển thị từng trạng thái và số lượng địa chỉ trong mỗi tiểu bang.",
    "output": "SELECT state_province_county ,  count(*) FROM addresses GROUP BY state_province_county"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và điện thoại của khách hàng không có thông tin địa chỉ.",
    "output": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của khách hàng có nhiều đơn đặt hàng nhất.",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các mã loại sản phẩm có ít nhất hai sản phẩm.",
    "output": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của khách hàng có cả hai đơn đặt hàng trong trạng thái hoàn thành và một đơn đặt hàng trong trạng thái một phần.",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Completed' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Part'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, điện thoại và mã phương thức thanh toán cho tất cả khách hàng theo thứ tự giảm dần của số khách hàng.",
    "output": "SELECT customer_name ,  customer_phone ,  payment_method_code FROM customers ORDER BY customer_number DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên sản phẩm và tổng số lượng đặt hàng cho mỗi sản phẩm.",
    "output": "SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị mức giá tối thiểu, tối đa, trung bình cho tất cả các sản phẩm.",
    "output": "SELECT min(product_price) ,  max(product_price) ,  avg(product_price) FROM products"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sản phẩm có giá cao hơn mức trung bình?",
    "output": "SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên khách hàng, thành phố địa chỉ khách hàng, ngày từ và ngày cho mỗi lịch sử địa chỉ khách hàng.",
    "output": "SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của khách hàng sử dụng phương thức thanh toán thẻ tín dụng và có nhiều hơn 2 đơn đặt hàng.",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Tên và điện thoại của khách hàng với số lượng sản phẩm được đặt hàng nhiều nhất là gì?",
    "output": "SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị loại sản phẩm và tên cho các sản phẩm có giá cao hơn 1000 hoặc thấp hơn 500.",
    "output": "SELECT product_type_code ,  product_name FROM products WHERE product_price  >  1000 OR product_price  <  500"
  },
  {
    "instruction": "",
    "input": "Tìm tên của ký túc xá chỉ dành cho nữ (f giới tính).",
    "output": "SELECT dorm_name FROM dorm WHERE gender  =  'F'"
  },
  {
    "instruction": "",
    "input": "Tên của ký túc xá toàn nữ là gì?",
    "output": "SELECT dorm_name FROM dorm WHERE gender  =  'F'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của ký túc xá có thể chứa hơn 300 sinh viên.",
    "output": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các hình thức có thể chứa hơn 300 sinh viên là gì?",
    "output": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh nữ (tình dục là f) có tuổi dưới 25?",
    "output": "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên nữ dưới 25 tuổi?",
    "output": "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của học sinh lớn hơn 20 tuổi.",
    "output": "SELECT fname FROM student WHERE age  >  20"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các học sinh lớn hơn 20 tuổi là gì?",
    "output": "SELECT fname FROM student WHERE age  >  20"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của các sinh viên sống trong City PHL có tuổi từ 20 đến 25.",
    "output": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của các học sinh từ 20 đến 25 tuổi và sống ở Phl City là gì?",
    "output": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ký túc xá?",
    "output": "SELECT count(*) FROM dorm"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ký túc xá trong cơ sở dữ liệu?",
    "output": "SELECT count(*) FROM dorm"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tiện nghi riêng biệt.",
    "output": "SELECT count(*) FROM dorm_amenity"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tiện nghi ký túc xá khác nhau?",
    "output": "SELECT count(*) FROM dorm_amenity"
  },
  {
    "instruction": "",
    "input": "Tìm tổng công suất của tất cả các ký túc xá.",
    "output": "SELECT sum(student_capacity) FROM dorm"
  },
  {
    "instruction": "",
    "input": "Tổng công suất sinh viên của tất cả các ký túc xá là bao nhiêu?",
    "output": "SELECT sum(student_capacity) FROM dorm"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên ở đó?",
    "output": "SELECT count(*) FROM student"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh tồn tại?",
    "output": "SELECT count(*) FROM student"
  },
  {
    "instruction": "",
    "input": "Tìm tuổi trung bình của tất cả các sinh viên sống trong mỗi thành phố.",
    "output": "SELECT avg(age) ,  city_code FROM student GROUP BY city_code"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình cho mỗi thành phố là gì và những thành phố đó là gì?",
    "output": "SELECT avg(age) ,  city_code FROM student GROUP BY city_code"
  },
  {
    "instruction": "",
    "input": "Tìm trung bình và tổng công suất của ký túc xá cho các sinh viên với giới tính X.",
    "output": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'"
  },
  {
    "instruction": "",
    "input": "Trung bình và tổng công suất cho tất cả các ký túc xá của giới tính X là bao nhiêu?",
    "output": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng ký túc xá có một số tiện nghi.",
    "output": "SELECT count(DISTINCT dormid) FROM has_amenity"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ký túc xá có tiện nghi?",
    "output": "SELECT count(DISTINCT dormid) FROM has_amenity"
  },
  {
    "instruction": "",
    "input": "Tìm tên của ký túc xá không có bất kỳ tiện nghi nào",
    "output": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các ký túc xá không có bất kỳ tiện nghi là gì?",
    "output": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng giới tính riêng biệt cho ký túc xá.",
    "output": "SELECT count(DISTINCT gender) FROM dorm"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giới tính khác nhau trong ký túc xá?",
    "output": "SELECT count(DISTINCT gender) FROM dorm"
  },
  {
    "instruction": "",
    "input": "Tìm năng lực và loại giới tính của ký túc xá có tên có cơ sở ‘nhà tài trợ.",
    "output": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'"
  },
  {
    "instruction": "",
    "input": "Năng lực và loại giới tính của sinh viên cho ký túc xá có tên là nhà tài trợ cụm từ trong đó là gì?",
    "output": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'"
  },
  {
    "instruction": "",
    "input": "Tìm tên và loại giới tính của ký túc xá có công suất lớn hơn 300 hoặc dưới 100.",
    "output": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100"
  },
  {
    "instruction": "",
    "input": "Tên và loại của ký túc xá có công suất lớn hơn 300 hoặc dưới 100 là gì?",
    "output": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các chuyên ngành và thành phố khác nhau.",
    "output": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu chuyên ngành khác nhau và có bao nhiêu mã thành phố khác nhau cho mỗi học sinh?",
    "output": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student"
  },
  {
    "instruction": "",
    "input": "Tìm tên của ký túc xá có cả phòng chờ và phòng học như các tiện nghi.",
    "output": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'"
  },
  {
    "instruction": "",
    "input": "Tên của ký túc xá với cả phòng chờ TV và phòng học được liệt kê là tiện nghi là gì?",
    "output": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của ký túc xá có phòng chờ TV nhưng không có phòng học nào là tiện nghi.",
    "output": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'"
  },
  {
    "instruction": "",
    "input": "Tên của mỗi ký túc xá có phòng chờ TV nhưng không có phòng học?",
    "output": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'"
  },
  {
    "instruction": "",
    "input": "Tìm họ của những học sinh là nữ (giới tính là F) và sống ở thành phố Code Bal hoặc nam (giới tính là M) và ở độ tuổi dưới 20.",
    "output": "SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của mỗi học sinh là nữ hoặc sống trong một thành phố có mã bal hoặc nam và dưới 20?",
    "output": "SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20"
  },
  {
    "instruction": "",
    "input": "Tìm tên của ký túc xá với công suất lớn nhất.",
    "output": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của ký túc xá với công suất lớn nhất là gì?",
    "output": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê theo thứ tự chữ cái tất cả các tiện nghi khác nhau.",
    "output": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name"
  },
  {
    "instruction": "",
    "input": "Các tên tiện nghi ký túc xá khác nhau theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name"
  },
  {
    "instruction": "",
    "input": "Tìm mã của thành phố nơi hầu hết các sinh viên đang sống.",
    "output": "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Mã của thành phố với nhiều sinh viên nhất là gì?",
    "output": "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm họ và họ của học sinh có tuổi trẻ hơn tuổi trung bình.",
    "output": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tất cả các sinh viên trẻ hơn trung bình là gì?",
    "output": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)"
  },
  {
    "instruction": "",
    "input": "Liệt kê họ và họ của những sinh viên không sống trong thành phố với Code HKG và sắp xếp kết quả theo độ tuổi của họ.",
    "output": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tất cả các sinh viên không sống ở thành phố HKG và đặt hàng kết quả theo độ tuổi là gì?",
    "output": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age"
  },
  {
    "instruction": "",
    "input": "Danh sách tên của tất cả các tiện nghi mà Hội trường nhà tài trợ ẩn danh có và sắp xếp kết quả theo thứ tự chữ cái.",
    "output": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name"
  },
  {
    "instruction": "",
    "input": "Các tiện nghi theo thứ tự bảng chữ cái mà Hội trường nhà tài trợ ẩn danh có là gì?",
    "output": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng ký túc xá và tổng công suất cho mỗi giới.",
    "output": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ký túc xá và tổng công suất cho mỗi giới là bao nhiêu?",
    "output": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender"
  },
  {
    "instruction": "",
    "input": "Tìm độ tuổi trung bình và già nhất cho học sinh có giới tính khác nhau.",
    "output": "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex"
  },
  {
    "instruction": "",
    "input": "Độ tuổi trung bình và lâu đời nhất cho mỗi giới của học sinh là bao nhiêu?",
    "output": "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng học sinh trong mỗi chuyên ngành.",
    "output": "SELECT count(*) ,  major FROM student GROUP BY major"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên ở mỗi chuyên ngành?",
    "output": "SELECT count(*) ,  major FROM student GROUP BY major"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng và tuổi trung bình của học sinh sống ở mỗi thành phố.",
    "output": "SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh sống ở mỗi thành phố và tuổi trung bình của họ là gì?",
    "output": "SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code"
  },
  {
    "instruction": "",
    "input": "Tìm độ tuổi trung bình và số lượng sinh viên nam (có sex m) từ mỗi thành phố.",
    "output": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình là bao nhiêu và có bao nhiêu học sinh nam ở mỗi thành phố?",
    "output": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sinh viên cho các thành phố có nhiều hơn một sinh viên.",
    "output": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên đến từ mỗi thành phố, và thành phố nào có nhiều hơn một thành phố?",
    "output": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tìm họ và họ của các sinh viên không thuộc chuyên ngành lớn nhất.",
    "output": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của các sinh viên không thuộc chuyên ngành lớn nhất là gì?",
    "output": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng học sinh có tuổi già hơn độ tuổi trung bình cho mỗi giới.",
    "output": "SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh lớn tuổi hơn trung bình cho mỗi giới?",
    "output": "SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex"
  },
  {
    "instruction": "",
    "input": "Tìm độ tuổi trung bình của học sinh sống trong mỗi ký túc xá và tên của ký túc xá.",
    "output": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình cho mỗi ký túc xá là bao nhiêu và tên của mỗi ký túc xá là gì?",
    "output": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tiện nghi cho mỗi ký túc xá có thể chứa hơn 100 sinh viên.",
    "output": "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi ký túc xá, nó có bao nhiêu tiện nghi?",
    "output": "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng học sinh lớn hơn 20 trong mỗi ký túc xá.",
    "output": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh trên 20 tuổi trong mỗi ký túc xá?",
    "output": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những sinh viên đang sống trong Hội trường Smith.",
    "output": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các sinh viên trong Smith Hall là gì?",
    "output": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'"
  },
  {
    "instruction": "",
    "input": "Tìm tuổi trung bình của học sinh đang sống trong ký túc xá với khả năng lớn nhất.",
    "output": "SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm)"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình của học sinh đang sống trong ký túc xá với khả năng lớn nhất là bao nhiêu?",
    "output": "SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm)"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số học sinh sống trong ký túc xá nam (với giới tính M).",
    "output": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M'"
  },
  {
    "instruction": "",
    "input": "Tổng số học sinh đang sống trong ký túc xá nam là gì?",
    "output": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sinh viên nữ (có tình dục f) sống ở Smith Hall",
    "output": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên nữ sống ở Smith Hall?",
    "output": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của Tiện nghi Smith Hall Dorm có.",
    "output": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'"
  },
  {
    "instruction": "",
    "input": "Tên của các tiện nghi mà Smith Hall có là gì?",
    "output": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của Tiện nghi Smith Hall Dorm có.đặt hàng kết quả bằng tên tiện nghi.",
    "output": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall' ORDER BY T3.amenity_name"
  },
  {
    "instruction": "",
    "input": "Smith Hall có những tiện nghi nào theo thứ tự bảng chữ cái?",
    "output": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall' ORDER BY T3.amenity_name"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tiện nghi là phổ biến nhất trong tất cả các ký túc xá.",
    "output": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tiện nghi phổ biến nhất trong ký túc xá là gì?",
    "output": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của những sinh viên đang sống trong ký túc xá có số lượng tiện nghi nhất.",
    "output": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các sinh viên sống trong ký túc xá với những tiện nghi nhất là gì?",
    "output": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tìm tên và năng lực của ký túc xá với số lượng tiện nghi ít nhất.",
    "output": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và năng lực của ký túc xá với số lượng tiện nghi ít nhất là gì?",
    "output": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các ký túc xá không có Lounge TV tiện ích.",
    "output": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge'"
  },
  {
    "instruction": "",
    "input": "Tên của ký túc xá không có phòng chờ TV là gì?",
    "output": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge'"
  },
  {
    "instruction": "",
    "input": "Tìm họ và họ của những sinh viên đang sống trong ký túc xá có Lounge truyền hình tiện nghi.",
    "output": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tất cả các sinh viên đang sống trong ký túc xá với phòng chờ TV là gì?",
    "output": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')"
  },
  {
    "instruction": "",
    "input": "Tìm tên và tuổi của các sinh viên đang sống trong ký túc xá không có Lounge truyền hình tiện nghi.",
    "output": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')"
  },
  {
    "instruction": "",
    "input": "Tên và tuổi đầu tiên của mỗi học sinh sống trong ký túc xá với một phòng TV là gì?",
    "output": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các tiện nghi của ký túc xá nơi sinh viên có họ Smith đang sống.",
    "output": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'"
  },
  {
    "instruction": "",
    "input": "Các tiện nghi trong ký túc xá mà một sinh viên có họ của Smith sống là gì?",
    "output": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng ở đó?",
    "output": "SELECT count(*) FROM customers"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng khách hàng.",
    "output": "SELECT count(*) FROM customers"
  },
  {
    "instruction": "",
    "input": "Tìm email và số điện thoại của tất cả các khách hàng, được đặt hàng theo địa chỉ email và số điện thoại.",
    "output": "SELECT email_address ,  phone_number FROM customers ORDER BY email_address ,  phone_number"
  },
  {
    "instruction": "",
    "input": "Các email và số điện thoại của tất cả khách hàng, được sắp xếp theo địa chỉ email và số điện thoại là gì?",
    "output": "SELECT email_address ,  phone_number FROM customers ORDER BY email_address ,  phone_number"
  },
  {
    "instruction": "",
    "input": "Thành phố nào có số lượng khách hàng ít nhất có mã loại \"xếp hạng tín dụng tốt\"?",
    "output": "SELECT town_city FROM customers WHERE customer_type_code  =  \"Good Credit Rating\" GROUP BY town_city ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại thành phố với mã loại khách hàng \"Xếp hạng tín dụng tốt\" có ít khách hàng nhất.",
    "output": "SELECT town_city FROM customers WHERE customer_type_code  =  \"Good Credit Rating\" GROUP BY town_city ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các sản phẩm cùng với số lượng khiếu nại mà họ đã nhận được.",
    "output": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name"
  },
  {
    "instruction": "",
    "input": "Tất cả các tên sản phẩm khác nhau là gì và mỗi người đã nhận được bao nhiêu khiếu nại?",
    "output": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name"
  },
  {
    "instruction": "",
    "input": "Tìm email của khách hàng đã nộp đơn khiếu nại về sản phẩm với nhiều khiếu nại nhất.",
    "output": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Email của khách hàng đã nộp đơn khiếu nại về sản phẩm có số lượng khiếu nại lớn nhất là gì?",
    "output": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những sản phẩm nào đã bị phàn nàn bởi khách hàng đã nộp ít lượng khiếu nại nhất?",
    "output": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên các sản phẩm đã có khiếu nại của khách hàng đã nộp đơn khiếu nại ít nhất.",
    "output": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Số điện thoại của khách hàng đã nộp đơn khiếu nại gần đây nhất là gì?",
    "output": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại số điện thoại của khách hàng đã nộp đơn khiếu nại được nêu ra gần đây nhất.",
    "output": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm email và số điện thoại của khách hàng chưa bao giờ nộp đơn khiếu nại trước đây.",
    "output": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)"
  },
  {
    "instruction": "",
    "input": "Các email và số điện thoại của khách hàng chưa bao giờ nộp đơn khiếu nại là gì?",
    "output": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)"
  },
  {
    "instruction": "",
    "input": "Tìm số điện thoại của tất cả các khách hàng và nhân viên.",
    "output": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff"
  },
  {
    "instruction": "",
    "input": "Số điện thoại của tất cả khách hàng và tất cả các nhân viên là gì?",
    "output": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff"
  },
  {
    "instruction": "",
    "input": "Mô tả của sản phẩm có tên là \"sô cô la\" là gì?",
    "output": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\""
  },
  {
    "instruction": "",
    "input": "Trả lại mô tả của sản phẩm gọi là \"sô cô la\".",
    "output": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\""
  },
  {
    "instruction": "",
    "input": "Tìm tên và danh mục của sản phẩm đắt nhất.",
    "output": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và mã danh mục của sản phẩm với giá cao nhất là gì?",
    "output": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm giá của các sản phẩm chưa bao giờ nhận được một khiếu nại.",
    "output": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)"
  },
  {
    "instruction": "",
    "input": "Giá các sản phẩm chưa bao giờ nhận được khiếu nại là gì?",
    "output": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)"
  },
  {
    "instruction": "",
    "input": "Giá trung bình của các sản phẩm cho mỗi danh mục là bao nhiêu?",
    "output": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code"
  },
  {
    "instruction": "",
    "input": "Trả lại giá trung bình của các sản phẩm có mỗi mã danh mục.",
    "output": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code"
  },
  {
    "instruction": "",
    "input": "Tìm họ cuối cùng của nhân viên đã xử lý khiếu nại của sản phẩm rẻ nhất.",
    "output": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của nhân viên phụ trách khiếu nại về sản phẩm với giá thấp nhất là gì?",
    "output": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trạng thái khiếu nại nào có nhiều hơn 3 hồ sơ trong hồ sơ?",
    "output": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"
  },
  {
    "instruction": "",
    "input": "Trả lại mã trạng thái khiếu nại có nhiều hơn 3 khiếu nại tương ứng?",
    "output": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"
  },
  {
    "instruction": "",
    "input": "Tìm họ của nhân viên có địa chỉ email có chứa \"Wrau\".",
    "output": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\""
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của nhân viên với địa chỉ email có chứa \"WRAU\" là gì?",
    "output": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng trong loại khách hàng với nhiều khách hàng nhất?",
    "output": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng khách hàng có loại khách hàng phổ biến nhất.",
    "output": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của các nhân viên đã xử lý khiếu nại đầu tiên là gì?",
    "output": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại họ của nhân viên, người đã xử lý khiếu nại với ngày sớm nhất được nêu ra.",
    "output": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu mã khiếu nại riêng biệt trong cơ sở dữ liệu?",
    "output": "SELECT count(DISTINCT complaint_type_code) FROM complaints"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng mã loại khiếu nại khác nhau.",
    "output": "SELECT count(DISTINCT complaint_type_code) FROM complaints"
  },
  {
    "instruction": "",
    "input": "Tìm dòng địa chỉ 1 và 2 của khách hàng với email \"vbogisich@example.org\".",
    "output": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\""
  },
  {
    "instruction": "",
    "input": "Dòng 1 và 2 của khách hàng được giải quyết với email \"vbogisich@example.org\" là gì?",
    "output": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng khiếu nại với loại lỗi sản phẩm cho từng trạng thái khiếu nại.",
    "output": "SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  \"Product Failure\" GROUP BY complaint_status_code"
  },
  {
    "instruction": "",
    "input": "Khiếu nại với mã loại \"lỗi sản phẩm\", có bao nhiêu người có mã trạng thái khác nhau?",
    "output": "SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  \"Product Failure\" GROUP BY complaint_status_code"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của 5 nhân viên hàng đầu đã xử lý số lượng khiếu nại lớn nhất là gì?",
    "output": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Trả lại tên đầu tiên của 5 nhân viên đã xử lý nhiều khiếu nại nhất.",
    "output": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5"
  },
  {
    "instruction": "",
    "input": "Bang nào có nhiều khách hàng nhất?",
    "output": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho nhà nước có nhiều khách hàng nhất.",
    "output": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài nộp?",
    "output": "SELECT count(*) FROM submission"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng đệ trình.",
    "output": "SELECT count(*) FROM submission"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tác giả của các bài nộp theo thứ tự tăng dần của điểm số.",
    "output": "SELECT Author FROM submission ORDER BY Scores ASC"
  },
  {
    "instruction": "",
    "input": "Tìm tác giả cho mỗi lần gửi và liệt kê chúng theo thứ tự tăng dần điểm gửi.",
    "output": "SELECT Author FROM submission ORDER BY Scores ASC"
  },
  {
    "instruction": "",
    "input": "Các tác giả của bài nộp và các trường đại học của họ là gì?",
    "output": "SELECT Author ,  College FROM submission"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi bài nộp, cho thấy tác giả và trường đại học liên kết của họ.",
    "output": "SELECT Author ,  College FROM submission"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các tác giả từ trường đại học \"Florida\" hoặc \"Temple\"",
    "output": "SELECT Author FROM submission WHERE College  =  \"Florida\" OR College  =  \"Temple\""
  },
  {
    "instruction": "",
    "input": "Những tác giả nào có bài nộp là từ trường đại học \"Florida\" hay \"Temple\"?",
    "output": "SELECT Author FROM submission WHERE College  =  \"Florida\" OR College  =  \"Temple\""
  },
  {
    "instruction": "",
    "input": "Điểm trung bình của bài nộp là bao nhiêu?",
    "output": "SELECT avg(Scores) FROM submission"
  },
  {
    "instruction": "",
    "input": "Tính điểm trung bình của bài nộp.",
    "output": "SELECT avg(Scores) FROM submission"
  },
  {
    "instruction": "",
    "input": "Tác giả của việc gửi với điểm số cao nhất là gì?",
    "output": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tác giả đã đạt được số điểm cao nhất trong một bài nộp.",
    "output": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các trường đại học khác nhau cùng với số lượng tác giả của việc nộp từ mỗi trường đại học.",
    "output": "SELECT College ,  COUNT(*) FROM submission GROUP BY College"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi trường đại học, hãy trả lại tên đại học và số lượng các tác giả có bài nộp từ trường đại học đó.",
    "output": "SELECT College ,  COUNT(*) FROM submission GROUP BY College"
  },
  {
    "instruction": "",
    "input": "Hiển thị các trường đại học phổ biến nhất của các tác giả của bài dự thi.",
    "output": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trường đại học nào có nhiều tác giả nhất với bài nộp?",
    "output": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các trường đại học có cả hai tác giả có điểm số lớn hơn 90 và các tác giả có điểm đệ trình nhỏ hơn 80.",
    "output": "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80"
  },
  {
    "instruction": "",
    "input": "Những trường đại học nào có cả hai tác giả có điểm gửi trên 90 và các tác giả có điểm gửi dưới 80?",
    "output": "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80"
  },
  {
    "instruction": "",
    "input": "Hiển thị các tác giả của bài nộp và kết quả chấp nhận của các bài nộp của họ.",
    "output": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi lần gửi, tìm tác giả của nó và kết quả chấp nhận.",
    "output": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị kết quả của việc nộp với điểm số cao nhất.",
    "output": "SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Bài nộp nào nhận được điểm cao nhất trong kết quả chấp nhận.Cho tôi thấy kết quả.",
    "output": "SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị từng tác giả và số lượng các hội thảo họ đã gửi cho.",
    "output": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author"
  },
  {
    "instruction": "",
    "input": "Mỗi tác giả đã gửi cho mỗi hội thảo?Trả lại tên tác giả và số lượng hội thảo.",
    "output": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author"
  },
  {
    "instruction": "",
    "input": "Hiển thị các tác giả có bài nộp cho nhiều hơn một hội thảo.",
    "output": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1"
  },
  {
    "instruction": "",
    "input": "Những tác giả nào đã nộp cho nhiều hơn một hội thảo?",
    "output": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1"
  },
  {
    "instruction": "",
    "input": "Hiển thị ngày và địa điểm của mỗi hội thảo theo thứ tự bảng chữ cái tăng dần của địa điểm.",
    "output": "SELECT Date ,  Venue FROM workshop ORDER BY Venue"
  },
  {
    "instruction": "",
    "input": "Sắp xếp từng hội thảo theo thứ tự bảng chữ cái của địa điểm.Trả lại ngày và địa điểm của mỗi hội thảo.",
    "output": "SELECT Date ,  Venue FROM workshop ORDER BY Venue"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tác giả không có đệ trình vào bất kỳ hội thảo nào.",
    "output": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)"
  },
  {
    "instruction": "",
    "input": "Những tác giả nào đã không nộp cho bất kỳ hội thảo?",
    "output": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng nhà đầu tư trong tổng số.",
    "output": "SELECT count(*) FROM INVESTORS"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các chi tiết nhà đầu tư.",
    "output": "SELECT Investor_details FROM INVESTORS"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các chi tiết lô riêng biệt.",
    "output": "SELECT DISTINCT lot_details FROM LOTS"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng giao dịch tối đa.",
    "output": "SELECT max(amount_of_transaction) FROM TRANSACTIONS"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả ngày và chia sẻ số lượng giao dịch.",
    "output": "SELECT date_of_transaction ,  share_count FROM TRANSACTIONS"
  },
  {
    "instruction": "",
    "input": "Tổng tỷ lệ giao dịch là bao nhiêu?",
    "output": "SELECT sum(share_count) FROM TRANSACTIONS"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả ID giao dịch với mã giao dịch 'PUR'.",
    "output": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code  =  'PUR'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các ngày của các giao dịch có mã loại là \"bán\".",
    "output": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\""
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng giao dịch trung bình với mã \"Bán\".",
    "output": "SELECT avg(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\""
  },
  {
    "instruction": "",
    "input": "Hiển thị mô tả loại giao dịch với mã \"PUR\".",
    "output": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code\t  =  \"PUR\""
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng giao dịch tối thiểu có mã loại là \"PUR\" và số lượng chia sẻ lớn hơn 50.",
    "output": "SELECT min(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\" AND share_count  >  50"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng chia sẻ tối đa của các giao dịch trong đó số tiền nhỏ hơn 10000",
    "output": "SELECT max(share_count) FROM TRANSACTIONS WHERE amount_of_transaction  <  10000"
  },
  {
    "instruction": "",
    "input": "Hiển thị ngày giao dịch nếu số lượng chia sẻ lớn hơn 100 hoặc số tiền lớn hơn 1000.",
    "output": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100 OR amount_of_transaction  >  1000"
  },
  {
    "instruction": "",
    "input": "Hiển thị các mô tả loại giao dịch và ngày nếu số lượng chia sẻ nhỏ hơn 10.",
    "output": "SELECT T1.transaction_type_description ,  T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10"
  },
  {
    "instruction": "",
    "input": "Hiển thị chi tiết của tất cả các nhà đầu tư nếu họ thực hiện bất kỳ giao dịch nào với số lượng chia sẻ lớn hơn 100.",
    "output": "SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại giao dịch khác nhau được sử dụng trong các giao dịch?",
    "output": "SELECT COUNT(DISTINCT transaction_type_code) FROM TRANSACTIONS"
  },
  {
    "instruction": "",
    "input": "Trả lại các chi tiết lô và ID nhà đầu tư.",
    "output": "SELECT lot_details ,  investor_id FROM LOTS"
  },
  {
    "instruction": "",
    "input": "Trả lại chi tiết lô của các lô thuộc về các nhà đầu tư với chi tiết \"L\"?",
    "output": "SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON  T1.investor_id  =  T2.investor_id WHERE T1.Investor_details  =  \"l\""
  },
  {
    "instruction": "",
    "input": "Các chi tiết mua hàng của các giao dịch với số tiền lớn hơn 10000 là gì?",
    "output": "SELECT T1.purchase_details FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  >  10000"
  },
  {
    "instruction": "",
    "input": "Các chi tiết bán hàng và ngày giao dịch với số tiền nhỏ hơn 3000 là gì?",
    "output": "SELECT T1.sales_details ,  T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000"
  },
  {
    "instruction": "",
    "input": "Các chi tiết lô của các lô liên quan đến các giao dịch với số lượng chia sẻ nhỏ hơn 50 là gì?",
    "output": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  <  50"
  },
  {
    "instruction": "",
    "input": "Các chi tiết lô của các lô liên quan đến các giao dịch có số lượng cổ phần lớn hơn 100 và mã loại có \"PUR\" là gì?",
    "output": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\""
  },
  {
    "instruction": "",
    "input": "Hiển thị số tiền giao dịch trung bình cho các loại giao dịch khác nhau.",
    "output": "SELECT transaction_type_code ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng chia sẻ tối đa và tối thiểu của các loại giao dịch khác nhau.",
    "output": "SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng cổ phần trung bình của các giao dịch cho các nhà đầu tư khác nhau.",
    "output": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng chia sẻ trung bình của mỗi nhà đầu tư, được đặt hàng theo số lượng cổ phiếu trung bình.",
    "output": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng giao dịch trung bình cho các nhà đầu tư khác nhau.",
    "output": "SELECT investor_id ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng giao dịch trung bình cho các lô khác nhau.",
    "output": "SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng giao dịch trung bình cho các lô khác nhau, được đặt hàng theo số lượng giao dịch trung bình.",
    "output": "SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng giao dịch với mã \"Bán\" loại giao dịch cho các nhà đầu tư khác nhau nếu lớn hơn 0.",
    "output": "SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\" GROUP BY investor_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng giao dịch cho các nhà đầu tư khác nhau.",
    "output": "SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS GROUP BY investor_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã loại giao dịch xảy ra ít thời gian nhất.",
    "output": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã loại giao dịch xảy ra thường xuyên nhất.",
    "output": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị mô tả của loại giao dịch xảy ra thường xuyên nhất.",
    "output": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID và chi tiết của nhà đầu tư có số lượng giao dịch lớn nhất.",
    "output": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID và chi tiết cho các nhà đầu tư có 3 số giao dịch hàng đầu.",
    "output": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của các nhà đầu tư có ít nhất hai giao dịch.",
    "output": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID và chi tiết của các nhà đầu tư có ít nhất hai giao dịch với loại mã \"bán\".",
    "output": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.transaction_type_code  =  \"SALE\" GROUP BY T2.investor_id HAVING COUNT(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Ngày của các giao dịch với ít nhất 100 cổ phần hoặc số tiền lớn hơn 100 là bao nhiêu?",
    "output": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100"
  },
  {
    "instruction": "",
    "input": "Các chi tiết của tất cả các doanh số và mua hàng là gì?",
    "output": "SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases"
  },
  {
    "instruction": "",
    "input": "Các chi tiết của các lô không được sử dụng trong bất kỳ giao dịch nào là gì?",
    "output": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id  =  T2.lot_id"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu khách sạn?",
    "output": "SELECT count(*) FROM HOTELS"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số khách sạn có sẵn.",
    "output": "SELECT count(*) FROM HOTELS"
  },
  {
    "instruction": "",
    "input": "Phạm vi giá của khách sạn là gì?",
    "output": "SELECT price_range FROM HOTELS"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết phạm vi giá cho tất cả các khách sạn.",
    "output": "SELECT price_range FROM HOTELS"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên vị trí riêng biệt.",
    "output": "SELECT DISTINCT Location_Name FROM LOCATIONS"
  },
  {
    "instruction": "",
    "input": "Tên vị trí riêng biệt là gì?",
    "output": "SELECT DISTINCT Location_Name FROM LOCATIONS"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và chi tiết của tất cả các nhân viên.",
    "output": "SELECT Name ,  Other_Details FROM Staff"
  },
  {
    "instruction": "",
    "input": "Tên và chi tiết của mỗi nhân viên là gì?",
    "output": "SELECT Name ,  Other_Details FROM Staff"
  },
  {
    "instruction": "",
    "input": "Hiển thị chi tiết của tất cả khách truy cập.",
    "output": "SELECT Tourist_Details FROM VISITORS"
  },
  {
    "instruction": "",
    "input": "Các chi tiết của mỗi khách truy cập là gì?",
    "output": "SELECT Tourist_Details FROM VISITORS"
  },
  {
    "instruction": "",
    "input": "Hiển thị phạm vi giá của các khách sạn với xếp hạng 5 sao.",
    "output": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\""
  },
  {
    "instruction": "",
    "input": "Phạm vi giá của các khách sạn năm sao là bao nhiêu?",
    "output": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\""
  },
  {
    "instruction": "",
    "input": "Hiển thị phạm vi giá trung bình của các khách sạn có xếp hạng 5 sao và cho phép vật nuôi.",
    "output": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1"
  },
  {
    "instruction": "",
    "input": "Phạm vi giá trung bình của các khách sạn năm sao cho phép thú cưng là gì?",
    "output": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1"
  },
  {
    "instruction": "",
    "input": "Địa chỉ của địa điểm \"Phòng trưng bày UK\" là gì?",
    "output": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\""
  },
  {
    "instruction": "",
    "input": "Tìm địa chỉ của địa điểm có tên là \"Phòng trưng bày Vương quốc Anh\".",
    "output": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\""
  },
  {
    "instruction": "",
    "input": "Các chi tiết của địa điểm Phòng trưng bày UK là gì?",
    "output": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\""
  },
  {
    "instruction": "",
    "input": "Trả lại chi tiết của địa điểm có tên là \"Phòng trưng bày Vương quốc Anh\".",
    "output": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\""
  },
  {
    "instruction": "",
    "input": "Tên địa điểm nào chứa từ \"phim\"?",
    "output": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\""
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các vị trí có tên chứa từ \"phim\".",
    "output": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tên riêng biệt được liên kết với tất cả các bức ảnh?",
    "output": "SELECT count(DISTINCT Name) FROM PHOTOS"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng tên riêng biệt liên quan đến các bức ảnh.",
    "output": "SELECT count(DISTINCT Name) FROM PHOTOS"
  },
  {
    "instruction": "",
    "input": "Ngày ghé thăm khác biệt là gì?",
    "output": "SELECT DISTINCT Visit_Date FROM VISITS"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các ngày ghé thăm khác biệt.",
    "output": "SELECT DISTINCT Visit_Date FROM VISITS"
  },
  {
    "instruction": "",
    "input": "Tên của các điểm du lịch có thể được truy cập bằng xe buýt là gì?",
    "output": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\""
  },
  {
    "instruction": "",
    "input": "Những điểm du lịch nào chúng ta có thể đến bằng xe buýt?Hãy cho tôi biết tên của các điểm tham quan.",
    "output": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\""
  },
  {
    "instruction": "",
    "input": "Tên và giờ mở cửa của các điểm du lịch có thể được truy cập bằng xe buýt hoặc đi bộ là gì?",
    "output": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\""
  },
  {
    "instruction": "",
    "input": "Tìm tên và giờ mở cửa của các điểm du lịch mà chúng tôi đến bằng xe buýt hoặc đi bộ.",
    "output": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\""
  },
  {
    "instruction": "",
    "input": "Các mô tả đánh giá ngôi sao của các khách sạn với giá trên 10000 là gì?",
    "output": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi các mô tả xếp hạng sao của các khách sạn có giá hơn 10000.",
    "output": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000"
  },
  {
    "instruction": "",
    "input": "Các chi tiết và giờ mở cửa của các bảo tàng là gì?",
    "output": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi chi tiết và giờ mở cửa cho mỗi bảo tàng.",
    "output": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID"
  },
  {
    "instruction": "",
    "input": "Tên của điểm thu hút khách du lịch có liên quan đến bức ảnh \"Game1\" là gì?",
    "output": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\""
  },
  {
    "instruction": "",
    "input": "Điểm thu hút khách du lịch nào được liên kết với bức ảnh \"Game1\"?Trả lại tên của nó.",
    "output": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\""
  },
  {
    "instruction": "",
    "input": "Những cái tên và mô tả của những bức ảnh được chụp tại điểm thu hút khách du lịch \"Liên hoan phim\" là gì?",
    "output": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\""
  },
  {
    "instruction": "",
    "input": "Tìm tên và mô tả của những bức ảnh được chụp tại điểm thu hút khách du lịch có tên là \"Liên hoan phim\".",
    "output": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\""
  },
  {
    "instruction": "",
    "input": "Các chi tiết và cách để có được các điểm tham quan du lịch liên quan đến Hoàng gia là gì?",
    "output": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID"
  },
  {
    "instruction": "",
    "input": "Những điểm du lịch nào có liên quan đến Hoàng gia?Hãy cho tôi biết chi tiết của họ và làm thế nào chúng ta có thể đến đó.",
    "output": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID"
  },
  {
    "instruction": "",
    "input": "Các chi tiết của các cửa hàng có thể được truy cập bằng cách đi bộ là gì?",
    "output": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\""
  },
  {
    "instruction": "",
    "input": "Tìm các chi tiết của các cửa hàng có thể đạt được bằng cách đi bộ.",
    "output": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\""
  },
  {
    "instruction": "",
    "input": "Tên của các nhân viên chịu trách nhiệm về điểm thu hút có tên là \"Bảo tàng Hoa Kỳ\" là gì?",
    "output": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\""
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết tên của các nhân viên phụ trách điểm thu hút có tên là \"Bảo tàng Hoa Kỳ\".",
    "output": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\""
  },
  {
    "instruction": "",
    "input": "Các chi tiết của các thị trường có thể được truy cập bằng cách đi bộ hoặc xe buýt là gì?",
    "output": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\" OR  T2.How_to_Get_There  =  \"bus\""
  },
  {
    "instruction": "",
    "input": "Tìm chi tiết của tất cả các thị trường có thể truy cập bằng cách đi bộ hoặc xe buýt.",
    "output": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\" OR  T2.How_to_Get_There  =  \"bus\""
  },
  {
    "instruction": "",
    "input": "Ngày ghé thăm và chi tiết của khách truy cập có chi tiết là 'Vincent' là gì?",
    "output": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\""
  },
  {
    "instruction": "",
    "input": "Tìm ngày ghé thăm và chi tiết của khách du lịch có chi tiết là 'Vincent'",
    "output": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\""
  },
  {
    "instruction": "",
    "input": "Khách truy cập du lịch nào mà du khách với chi tiết chuyến thăm 'Vincent'?",
    "output": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\""
  },
  {
    "instruction": "",
    "input": "Hiển thị các điểm du lịch được truy cập bởi khách du lịch có chi tiết là 'Vincent'.",
    "output": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\""
  },
  {
    "instruction": "",
    "input": "Tên của các điểm du lịch và ngày mà khách du lịch tên là Vincent hoặc Vivian đã đến thăm ở đó?",
    "output": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\""
  },
  {
    "instruction": "",
    "input": "Đối với mỗi điểm thu hút khách du lịch, hãy trả lại tên của nó và ngày mà khách du lịch tên Vincent hoặc Vivian đã đến thăm ở đó.",
    "output": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\""
  },
  {
    "instruction": "",
    "input": "Hiển thị giá trung bình của khách sạn cho mỗi mã xếp hạng sao.",
    "output": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code"
  },
  {
    "instruction": "",
    "input": "Phạm vi giá trung bình của các khách sạn cho mỗi mã xếp hạng sao là gì?",
    "output": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code"
  },
  {
    "instruction": "",
    "input": "Hiển thị giá trung bình của khách sạn cho chính sách thú cưng khác nhau.",
    "output": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn"
  },
  {
    "instruction": "",
    "input": "Giá trung bình của các khách sạn được nhóm theo chính sách thú cưng của họ là gì.",
    "output": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID và xếp hạng sao của mỗi khách sạn, được đặt hàng theo giá từ thấp đến cao.",
    "output": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC"
  },
  {
    "instruction": "",
    "input": "Tìm ID và xếp hạng sao của mỗi khách sạn và sắp xếp chúng theo thứ tự giá tăng.",
    "output": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC"
  },
  {
    "instruction": "",
    "input": "Hiển thị chi tiết của 3 khách sạn đắt nhất hàng đầu.",
    "output": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Các chi tiết của ba khách sạn đắt nhất là gì?",
    "output": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Hiển thị các chi tiết và xếp hạng sao của 3 khách sạn ít đắt tiền nhất.",
    "output": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Các chi tiết và xếp hạng sao của ba khách sạn có phạm vi giá thấp nhất là gì?",
    "output": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Hiển thị phương pháp vận chuyển mà hầu hết mọi người chọn để có được các điểm du lịch.",
    "output": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Phương pháp vận chuyển nào được sử dụng thường xuyên nhất để có được các điểm du lịch?",
    "output": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị mô tả và mã của loại thu hút hầu hết các điểm du lịch thuộc về.",
    "output": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những điểm thu hút khách du lịch nhất thuộc loại thu hút nào?Hãy cho tôi biết mô tả và mã loại hấp dẫn của nó.",
    "output": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị các cách khác nhau để có được các điểm tham quan và số lượng các điểm tham quan có thể được truy cập theo cách tương ứng.",
    "output": "SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các cách có thể để có được các điểm tham quan, cùng với số lượng các điểm tham quan có thể truy cập bằng các phương pháp này.",
    "output": "SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, ID của các điểm du lịch khác nhau và số lần truy cập tương ứng.",
    "output": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID"
  },
  {
    "instruction": "",
    "input": "Tên, ID và số lần truy cập tương ứng cho mỗi điểm thu hút khách du lịch là gì?",
    "output": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và ID của các điểm du lịch được truy cập ít nhất hai lần.",
    "output": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Những điểm du lịch nào được ghé thăm ít nhất hai lần?Cho tôi tên và ID của họ.",
    "output": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và ID của các điểm du lịch được truy cập nhiều nhất một lần.",
    "output": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1"
  },
  {
    "instruction": "",
    "input": "Tên và ID của các điểm du lịch được truy cập nhiều nhất một lần là gì?",
    "output": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1"
  },
  {
    "instruction": "",
    "input": "Tên của các điểm du lịch có thể đạt được bằng cách đi bộ hoặc ở địa chỉ 660 Shea Crescent?",
    "output": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các điểm du lịch có thể truy cập bằng cách đi bộ hoặc tại địa chỉ 660 Shea Crescent.",
    "output": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\""
  },
  {
    "instruction": "",
    "input": "Tên của các điểm du lịch có bãi đậu xe hoặc mua sắm như chi tiết tính năng của họ là gì?",
    "output": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping'"
  },
  {
    "instruction": "",
    "input": "Tìm các điểm du lịch có bãi đậu xe hoặc mua sắm như chi tiết tính năng của họ.Tên của các điểm tham quan là gì?",
    "output": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping'"
  },
  {
    "instruction": "",
    "input": "Tên của các điểm du lịch có thể đạt được bằng xe buýt hoặc ở địa chỉ 254 Ottilie Junction là gì?",
    "output": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các điểm du lịch có thể truy cập bằng xe buýt hoặc tại địa chỉ 254 Ottilie Junction.",
    "output": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\""
  },
  {
    "instruction": "",
    "input": "Tên của các điểm thu hút khách du lịch Vincent và Marcelle Visit là gì?",
    "output": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Marcelle\""
  },
  {
    "instruction": "",
    "input": "Những điểm du lịch nào mà khách du lịch Vincent và Marcelle ghé thăm?Hãy cho tôi biết tên của các điểm tham quan.",
    "output": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Marcelle\""
  },
  {
    "instruction": "",
    "input": "Tên của điểm thu hút khách du lịch mà Alison đã đến thăm nhưng Rosalind đã không đến thăm?",
    "output": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các điểm du lịch mà khách du lịch tên Alison đã đến thăm nhưng Rosalind đã không ghé thăm.",
    "output": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách du lịch đã không thực hiện bất kỳ chuyến thăm nào?",
    "output": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng khách du lịch không ghé thăm bất kỳ nơi nào.",
    "output": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trò chơi video tồn tại?",
    "output": "SELECT count(*) FROM Video_games"
  },
  {
    "instruction": "",
    "input": "Bạn có bao nhiêu trò chơi video?",
    "output": "SELECT count(*) FROM Video_games"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại trò chơi video tồn tại?",
    "output": "SELECT count(DISTINCT gtype) FROM Video_games"
  },
  {
    "instruction": "",
    "input": "Số lượng của các loại trò chơi khác nhau là gì?",
    "output": "SELECT count(DISTINCT gtype) FROM Video_games"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các loại trò chơi video.",
    "output": "SELECT DISTINCT gtype FROM Video_games"
  },
  {
    "instruction": "",
    "input": "Các loại trò chơi video khác nhau là gì?",
    "output": "SELECT DISTINCT gtype FROM Video_games"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các trò chơi video và các loại của họ theo thứ tự tên của họ.",
    "output": "SELECT gname ,  gtype FROM Video_games ORDER BY gname"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các trò chơi video và các loại của chúng theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT gname ,  gtype FROM Video_games ORDER BY gname"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các trò chơi video với trò chơi thẻ sưu tập loại.",
    "output": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các trò chơi video là thẻ sưu tập là gì?",
    "output": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\""
  },
  {
    "instruction": "",
    "input": "Loại cuộc gọi trò chơi video của định mệnh là gì.",
    "output": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\""
  },
  {
    "instruction": "",
    "input": "Loại trò chơi nào là Call of Destiny?",
    "output": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trò chơi video đã loại trò chơi trực tuyến nhiều người chơi?",
    "output": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng trò chơi video với loại trò chơi trực tuyến nhiều người chơi.",
    "output": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các loại trò chơi video và số lượng trò chơi video trong mỗi loại.",
    "output": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype"
  },
  {
    "instruction": "",
    "input": "Các loại trò chơi video là gì và bao nhiêu trong mỗi loại?",
    "output": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype"
  },
  {
    "instruction": "",
    "input": "Loại trò chơi nào có số lượng trò chơi nhất?",
    "output": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại trò chơi nào có nhất?",
    "output": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại trò chơi nào có số lượng trò chơi ít nhất?",
    "output": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Loại trò chơi ít nhất là gì?",
    "output": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID cho tất cả các sinh viên sống ở Chicago.",
    "output": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\""
  },
  {
    "instruction": "",
    "input": "ID của tất cả các sinh viên sống ở Chicago là gì?",
    "output": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\""
  },
  {
    "instruction": "",
    "input": "Hiển thị ID cho tất cả các sinh viên có cố vấn 1121.",
    "output": "SELECT StuID FROM Student WHERE Advisor  =  1121"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các sinh viên có cố vấn số 1121 là gì?",
    "output": "SELECT StuID FROM Student WHERE Advisor  =  1121"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên đầu tiên cho tất cả các sinh viên với chính 600.",
    "output": "SELECT Fname FROM Student WHERE Major  =  600"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên cho tất cả các sinh viên đến từ số 600 được đánh số chính là gì?",
    "output": "SELECT Fname FROM Student WHERE Major  =  600"
  },
  {
    "instruction": "",
    "input": "Hiển thị độ tuổi trung bình, tối thiểu và tối đa cho các chuyên ngành khác nhau.",
    "output": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình, tối thiểu và tối đa cho mỗi chuyên ngành khác nhau là bao nhiêu?",
    "output": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các cố vấn có ít nhất hai sinh viên.",
    "output": "SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Các cố vấn là gì",
    "output": "SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu môn thể thao?",
    "output": "SELECT count(DISTINCT sportname) FROM Sportsinfo"
  },
  {
    "instruction": "",
    "input": "Chúng tôi cung cấp bao nhiêu loại thể thao khác nhau?",
    "output": "SELECT count(DISTINCT sportname) FROM Sportsinfo"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh chơi thể thao?",
    "output": "SELECT count(DISTINCT StuID) FROM Sportsinfo"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên khác nhau tham gia vào thể thao?",
    "output": "SELECT count(DISTINCT StuID) FROM Sportsinfo"
  },
  {
    "instruction": "",
    "input": "Danh sách ID cho tất cả các sinh viên đang học bổng.",
    "output": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'"
  },
  {
    "instruction": "",
    "input": "IDS cho tất cả các sinh viên thể thao đang học bổng là gì?",
    "output": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên cuối cùng cho tất cả các sinh viên đang học bổng.",
    "output": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y'"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng cho tất cả các sinh viên học bổng là gì?",
    "output": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trò chơi được chơi cho tất cả các sinh viên?",
    "output": "SELECT sum(gamesplayed) FROM Sportsinfo"
  },
  {
    "instruction": "",
    "input": "Tổng số trò chơi đã chơi là bao nhiêu?",
    "output": "SELECT sum(gamesplayed) FROM Sportsinfo"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trò chơi được chơi cho tất cả các trò chơi bóng đá của các sinh viên về học bổng?",
    "output": "SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"Football\" AND onscholarship  =  'Y'"
  },
  {
    "instruction": "",
    "input": "Tổng số của tất cả các trò chơi bóng đá được chơi bởi các sinh viên học bổng là bao nhiêu?",
    "output": "SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"Football\" AND onscholarship  =  'Y'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả tên thể thao và số lượng sinh viên.",
    "output": "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh chơi từng môn thể thao?",
    "output": "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các ID sinh viên với số lượng thể thao và tổng số trò chơi đã chơi",
    "output": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các sinh viên cùng với bao nhiêu môn thể thao và trò chơi đã chơi?",
    "output": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các ID sinh viên với hơn tổng số 10 giờ mỗi tuần trên tất cả các môn thể thao được chơi.",
    "output": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10"
  },
  {
    "instruction": "",
    "input": "ID sinh viên cho tất cả những người làm việc trong hơn 10 giờ mỗi tuần trên tất cả các môn thể thao?",
    "output": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10"
  },
  {
    "instruction": "",
    "input": "Tên và họ của học sinh có số lượng thể thao nhiều nhất là gì?",
    "output": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của học sinh chơi nhiều môn thể thao nhất là gì?",
    "output": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những môn thể thao nào có số lượng sinh viên nhất trong học bổng?",
    "output": "SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Môn thể thao với nhiều sinh viên học bổng nhất là gì?",
    "output": "SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID sinh viên không có bất kỳ môn thể thao nào.",
    "output": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các sinh viên không chơi thể thao là gì?",
    "output": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID sinh viên đang học bổng và có chính 600.",
    "output": "SELECT StuID FROM Student WHERE major  =  600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'"
  },
  {
    "instruction": "",
    "input": "ID sinh viên cho những người nhận học bổng trong số 600 chính là gì?",
    "output": "SELECT StuID FROM Student WHERE major  =  600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID sinh viên là nữ và chơi bóng đá.",
    "output": "SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\""
  },
  {
    "instruction": "",
    "input": "ID của tất cả các nữ sinh viên chơi bóng đá là gì?",
    "output": "SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các ID sinh viên nam không chơi bóng đá.",
    "output": "SELECT StuID FROM Student WHERE sex  =  'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\""
  },
  {
    "instruction": "",
    "input": "ID của tất cả các sinh viên nam không chơi bóng đá là gì?",
    "output": "SELECT StuID FROM Student WHERE sex  =  'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tổng số giờ mỗi tuần và số lượng trò chơi chơi cho sinh viên David Shieber.",
    "output": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"David\" AND T2.Lname  =  \"Shieber\""
  },
  {
    "instruction": "",
    "input": "Tổng số giờ cho mỗi công việc và số lượng trò chơi do David Shieber chơi là bao nhiêu?",
    "output": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"David\" AND T2.Lname  =  \"Shieber\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tổng số giờ mỗi tuần và số lượng trò chơi chơi cho sinh viên dưới 20 tuổi.",
    "output": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20"
  },
  {
    "instruction": "",
    "input": "Tổng số giờ mỗi tuần và số lượng trò chơi được chơi bởi các sinh viên dưới 20 tuổi là bao nhiêu?",
    "output": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu học sinh chơi trò chơi điện tử?",
    "output": "SELECT count(DISTINCT StuID) FROM Plays_games"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên khác nhau chơi trò chơi?",
    "output": "SELECT count(DISTINCT StuID) FROM Plays_games"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của các sinh viên không chơi trò chơi video.",
    "output": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các sinh viên không phải là người chơi trò chơi video là gì?",
    "output": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của các sinh viên chơi trò chơi video và chơi thể thao.",
    "output": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các sinh viên đã chơi trò chơi video và thể thao là gì?",
    "output": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả ID trò chơi và số giờ chơi.",
    "output": "SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid"
  },
  {
    "instruction": "",
    "input": "ID và tổng số giờ chơi cho mỗi trò chơi là gì?",
    "output": "SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả ID sinh viên và số giờ chơi.",
    "output": "SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các sinh viên và số giờ chơi là gì?",
    "output": "SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên trò chơi có nhiều giờ chơi nhất.",
    "output": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của trò chơi đã được chơi nhiều nhất là gì?",
    "output": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên trò chơi được chơi bởi ít nhất 1000 giờ.",
    "output": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các trò chơi đã được chơi trong ít nhất 1000 giờ là gì?",
    "output": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên trò chơi do Linda Smith chơi",
    "output": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các trò chơi được chơi bởi Linda Smith là gì?",
    "output": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\""
  },
  {
    "instruction": "",
    "input": "Tìm tên cuối cùng và tên đầu tiên của các sinh viên đang chơi bóng đá hoặc lacrosse.",
    "output": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\""
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tất cả các sinh viên chơi bóng đá hoặc lacrosse là gì?",
    "output": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\""
  },
  {
    "instruction": "",
    "input": "Tìm tên và tuổi của các sinh viên đang chơi cả bóng đá và lacrosse.",
    "output": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")"
  },
  {
    "instruction": "",
    "input": "Tên và lứa tuổi của tất cả các sinh viên đang chơi cả bóng đá và lacrosse là gì?",
    "output": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")"
  },
  {
    "instruction": "",
    "input": "Tìm họ và giới tính của các sinh viên đang chơi cả Call of Destiny và các tác phẩm của các trò chơi Widenius.",
    "output": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng và giới tính của tất cả các sinh viên đã chơi cả Call of Destiny và tác phẩm của Widenius là gì?",
    "output": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả khách hàng.",
    "output": "SELECT customer_name FROM customers"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các khách hàng là gì?",
    "output": "SELECT customer_name FROM customers"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng ở đó?",
    "output": "SELECT count(*) FROM customers"
  },
  {
    "instruction": "",
    "input": "Trả lại tổng số khách hàng riêng biệt.",
    "output": "SELECT count(*) FROM customers"
  },
  {
    "instruction": "",
    "input": "Số lượng trung bình của các mặt hàng được đặt hàng trong mỗi đơn hàng là bao nhiêu?",
    "output": "SELECT avg(order_quantity) FROM order_items"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng đơn hàng trung bình cho mỗi đơn hàng.",
    "output": "SELECT avg(order_quantity) FROM order_items"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng sử dụng phương thức thanh toán \"tiền mặt\" là gì?",
    "output": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\""
  },
  {
    "instruction": "",
    "input": "Những khách hàng nào sử dụng \"tiền mặt\" cho phương thức thanh toán?Trả lại tên khách hàng.",
    "output": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\""
  },
  {
    "instruction": "",
    "input": "Tìm \"ngày trở thành khách hàng\" của khách hàng có ID là từ 10 đến 20.",
    "output": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20"
  },
  {
    "instruction": "",
    "input": "Ngày mà khách hàng có ID trong khoảng từ 10 đến 20 trở thành khách hàng là gì?",
    "output": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20"
  },
  {
    "instruction": "",
    "input": "Phương thức thanh toán nào được sử dụng bởi hầu hết các khách hàng?",
    "output": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm phương thức thanh toán được sử dụng thường xuyên nhất.",
    "output": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng sử dụng phương thức thanh toán phổ biến nhất là gì?",
    "output": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng sử dụng phương thức thanh toán được sử dụng thường xuyên nhất.",
    "output": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tất cả các phương thức thanh toán là gì?",
    "output": "SELECT DISTINCT payment_method FROM customers"
  },
  {
    "instruction": "",
    "input": "Trả lại tất cả các phương thức thanh toán riêng biệt được sử dụng bởi khách hàng.",
    "output": "SELECT DISTINCT payment_method FROM customers"
  },
  {
    "instruction": "",
    "input": "Các chi tiết của tất cả các sản phẩm là gì?",
    "output": "SELECT DISTINCT product_details FROM products"
  },
  {
    "instruction": "",
    "input": "Trả lại các chi tiết của tất cả các sản phẩm.",
    "output": "SELECT DISTINCT product_details FROM products"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các khách hàng có tên chứa \"Alex\".",
    "output": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\""
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng nào chứa \"Alex\"?Tìm tên đầy đủ.",
    "output": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\""
  },
  {
    "instruction": "",
    "input": "Tìm chi tiết của các sản phẩm có chi tiết chứa từ \"latte\" hoặc từ \"Americano\"",
    "output": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\""
  },
  {
    "instruction": "",
    "input": "Chi tiết của sản phẩm nào chứa từ \"latte\" hoặc \"Americano\"?Trả lại chi tiết đầy đủ.",
    "output": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\""
  },
  {
    "instruction": "",
    "input": "Nội dung địa chỉ của khách hàng có tên là \"Maudie Kertzmann\" là gì?",
    "output": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\""
  },
  {
    "instruction": "",
    "input": "Trả lại nội dung địa chỉ cho khách hàng có tên là \"Maudie Kertzmann\".",
    "output": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng đang sống trong thành phố \"Hồ Geovannyton\"?",
    "output": "SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  \"Lake Geovannyton\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng khách hàng sống trong thành phố có tên là Hồ Geovannyton.",
    "output": "SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  \"Lake Geovannyton\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của những khách hàng đang sống ở Colorado?",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\""
  },
  {
    "instruction": "",
    "input": "Tên của những khách hàng sống ở bang Colorado là gì?",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\""
  },
  {
    "instruction": "",
    "input": "Tìm danh sách các thành phố mà không có khách hàng đang sống.",
    "output": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)"
  },
  {
    "instruction": "",
    "input": "Các thành phố không có khách hàng sống là gì?",
    "output": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)"
  },
  {
    "instruction": "",
    "input": "Thành phố nào có nhiều khách hàng sống nhất?",
    "output": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm thành phố nơi nhiều khách hàng sống nhất.",
    "output": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Lấy danh sách của tất cả các thành phố.",
    "output": "SELECT DISTINCT city FROM addresses"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các thành phố riêng biệt",
    "output": "SELECT DISTINCT city FROM addresses"
  },
  {
    "instruction": "",
    "input": "Tìm thành phố với mã bài 255.",
    "output": "SELECT city FROM addresses WHERE zip_postcode  =  255"
  },
  {
    "instruction": "",
    "input": "Thành phố nào là mã bài 255 nằm ở?",
    "output": "SELECT city FROM addresses WHERE zip_postcode  =  255"
  },
  {
    "instruction": "",
    "input": "Tìm tiểu bang và quốc gia của tất cả các thành phố có mã bài bắt đầu với 4.",
    "output": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\""
  },
  {
    "instruction": "",
    "input": "Nhà nước và quốc gia của tất cả các thành phố có mã bài bắt đầu bằng 4. \\",
    "output": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\""
  },
  {
    "instruction": "",
    "input": "Liệt kê các quốc gia có hơn 4 địa chỉ được liệt kê.",
    "output": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4"
  },
  {
    "instruction": "",
    "input": "Đối với những quốc gia nào có nhiều hơn bốn địa chỉ riêng biệt được liệt kê?",
    "output": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các mã kênh liên lạc đã được sử dụng ít hơn 5 lần.",
    "output": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5"
  },
  {
    "instruction": "",
    "input": "Những mã kênh liên lạc đã được sử dụng ít hơn 5 lần?",
    "output": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5"
  },
  {
    "instruction": "",
    "input": "Kênh liên lạc nào đã được khách hàng sử dụng với tên \"Tillman Ernser\"?",
    "output": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\""
  },
  {
    "instruction": "",
    "input": "Tìm mã kênh liên lạc được sử dụng bởi khách hàng có tên \"Tillman Ernser\".",
    "output": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\""
  },
  {
    "instruction": "",
    "input": "\"Hoạt động cho đến nay\" của kênh liên lạc mới nhất được sử dụng bởi \"Tillman Ernser\" là gì?",
    "output": "SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\""
  },
  {
    "instruction": "",
    "input": "Trả về \"hoạt động cho đến nay\" của kênh liên lạc mới nhất được sử dụng bởi khách hàng có tên là \"Tillman Ernser\".",
    "output": "SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\""
  },
  {
    "instruction": "",
    "input": "Khoảng thời gian trung bình của các kênh liên lạc trong cơ sở dữ liệu là bao nhiêu?",
    "output": "SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels"
  },
  {
    "instruction": "",
    "input": "Tính toán khoảng thời gian hoạt động trung bình của các kênh liên lạc.",
    "output": "SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels"
  },
  {
    "instruction": "",
    "input": "Mã kênh và số liên lạc của kênh liên hệ của khách hàng đã hoạt động trong thời gian dài nhất là gì?",
    "output": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Trả về mã kênh và số liên hệ của kênh liên hệ của khách hàng có thời lượng hoạt động dài nhất.",
    "output": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Tìm tên và ngày hoạt động của khách hàng sử dụng email làm kênh liên hệ.",
    "output": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'"
  },
  {
    "instruction": "",
    "input": "Tên và ngày hoạt động của khách hàng có mã kênh liên hệ là email là gì?",
    "output": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng đã đặt hàng với số lượng lớn nhất là gì?",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng đã lập đơn đặt hàng số lượng hàng hóa lớn nhất.",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng đã mua nhiều mặt hàng nhất là gì?",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cho tôi tên của khách hàng đã đặt hàng nhiều mặt hàng nhất trong tổng số.",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Phương thức thanh toán của khách hàng đã mua số lượng mặt hàng ít nhất là gì?",
    "output": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết phương thức thanh toán được sử dụng bởi khách hàng đã đặt hàng ít hơn số lượng hàng hóa ít nhất.",
    "output": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Rodrick Heaney đã mua bao nhiêu loại sản phẩm?",
    "output": "SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sản phẩm riêng biệt Rodrick Heaney đã mua cho đến nay.",
    "output": "SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\""
  },
  {
    "instruction": "",
    "input": "Tổng số lượng sản phẩm được mua bởi \"Rodrick Heaney\" là bao nhiêu?",
    "output": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\""
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết tổng số lượng sản phẩm được mua bởi khách hàng có tên là \"Rodrick Heaney\".",
    "output": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng có ít nhất một đơn đặt hàng với trạng thái \"bị hủy\"?",
    "output": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\""
  },
  {
    "instruction": "",
    "input": "Trả lại số lượng khách hàng có ít nhất một đơn đặt hàng với trạng thái \"bị hủy\".",
    "output": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu đơn đặt hàng có chi tiết \"lần thứ hai\"?",
    "output": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\""
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết số lượng đơn đặt hàng với \"lần thứ hai\" là chi tiết đơn đặt hàng.",
    "output": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\""
  },
  {
    "instruction": "",
    "input": "Tìm tên khách hàng và ngày của các đơn đặt hàng có trạng thái \"giao\".",
    "output": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\""
  },
  {
    "instruction": "",
    "input": "Tên khách hàng và ngày của các đơn đặt hàng có trạng thái \"được giao\".",
    "output": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\""
  },
  {
    "instruction": "",
    "input": "Tổng số sản phẩm trong các đơn đặt hàng có trạng thái \"bị hủy\" là bao nhiêu?",
    "output": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"Cancelled\""
  },
  {
    "instruction": "",
    "input": "Tìm tổng số lượng sản phẩm được liên kết với các đơn đặt hàng trong trạng thái \"bị hủy\".",
    "output": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"Cancelled\""
  },
  {
    "instruction": "",
    "input": "Tìm tổng số lượng sản phẩm được đặt hàng trước 2018-03-17 07:13:53.",
    "output": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\""
  },
  {
    "instruction": "",
    "input": "Tổng số lượng sản phẩm đã mua trước 2018-03-17 07:13:53 là bao nhiêu?",
    "output": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\""
  },
  {
    "instruction": "",
    "input": "Ai đã đặt hàng mới nhất?",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng đã đặt hàng gần đây nhất.",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Sản phẩm nào đã được đặt hàng nhiều lần nhất?",
    "output": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Sản phẩm được đặt hàng thường xuyên nhất là gì?Cho tôi biết chi tiết của sản phẩm",
    "output": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên và ID của sản phẩm có tổng số lượng đơn hàng là lớn nhất.",
    "output": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và ID của sản phẩm đã mua nhiều nhất.",
    "output": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các địa chỉ ở Đông Julianaside, Texas hoặc ở Glorymouth, Arizona.",
    "output": "SELECT address_content FROM addresses WHERE city  =  \"East Julianaside\" AND state_province_county  =  \"Texas\" UNION SELECT address_content FROM addresses WHERE city  =  \"Gleasonmouth\" AND state_province_county  =  \"Arizona\""
  },
  {
    "instruction": "",
    "input": "Tất cả các địa chỉ ở Đông Julianaside, Texas hoặc ở Glorymouth, Arizona là gì.",
    "output": "SELECT address_content FROM addresses WHERE city  =  \"East Julianaside\" AND state_province_county  =  \"Texas\" UNION SELECT address_content FROM addresses WHERE city  =  \"Gleasonmouth\" AND state_province_county  =  \"Arizona\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của những khách hàng không trả bằng tiền mặt.",
    "output": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng không sử dụng tiền mặt làm phương thức thanh toán.",
    "output": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những khách hàng không bao giờ đặt hàng sản phẩm latte.",
    "output": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'"
  },
  {
    "instruction": "",
    "input": "Tên của những khách hàng không bao giờ đặt hàng sản phẩm latte.",
    "output": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những khách hàng không bao giờ đặt hàng.",
    "output": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id"
  },
  {
    "instruction": "",
    "input": "Tên của những khách hàng không bao giờ đặt hàng là gì.",
    "output": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng đã đặt hàng cả sản phẩm Latte và Americano.",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng đã mua cả sản phẩm Latte và Americano là gì?",
    "output": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nghệ sĩ?",
    "output": "SELECT count(*) FROM artist"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng nghệ sĩ.",
    "output": "SELECT count(*) FROM artist"
  },
  {
    "instruction": "",
    "input": "Liệt kê tuổi của tất cả các nghệ sĩ âm nhạc.",
    "output": "SELECT Age FROM artist"
  },
  {
    "instruction": "",
    "input": "Thời đại của tất cả các nghệ sĩ âm nhạc là gì?",
    "output": "SELECT Age FROM artist"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình của tất cả các nghệ sĩ là bao nhiêu?",
    "output": "SELECT avg(Age) FROM artist"
  },
  {
    "instruction": "",
    "input": "Trả lại độ tuổi trung bình trên tất cả các nghệ sĩ.",
    "output": "SELECT avg(Age) FROM artist"
  },
  {
    "instruction": "",
    "input": "Những tựa game nổi tiếng của nghệ sĩ \"Triumfall\" là gì?",
    "output": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\""
  },
  {
    "instruction": "",
    "input": "Trả lại các tựa game nổi tiếng của nghệ sĩ có tên là \"Triumfall\".",
    "output": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\""
  },
  {
    "instruction": "",
    "input": "Ngày phát hành nổi tiếng khác biệt là gì?",
    "output": "SELECT distinct(Famous_Release_date) FROM artist"
  },
  {
    "instruction": "",
    "input": "Cung cấp ngày phát hành nổi tiếng khác biệt cho tất cả các nghệ sĩ.",
    "output": "SELECT distinct(Famous_Release_date) FROM artist"
  },
  {
    "instruction": "",
    "input": "Trả lại ngày của buổi lễ và kết quả của tất cả các lễ hội âm nhạc",
    "output": "SELECT Date_of_ceremony ,  RESULT FROM music_festival"
  },
  {
    "instruction": "",
    "input": "Ngày của buổi lễ và kết quả cho mỗi lễ hội âm nhạc là gì?",
    "output": "SELECT Date_of_ceremony ,  RESULT FROM music_festival"
  },
  {
    "instruction": "",
    "input": "Các thể loại lễ hội âm nhạc với kết quả \"được trao\" là gì?",
    "output": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\""
  },
  {
    "instruction": "",
    "input": "Trả lại các loại lễ hội âm nhạc có kết quả \"được trao\".",
    "output": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\""
  },
  {
    "instruction": "",
    "input": "Tuần tối đa và tối thiểu trên tất cả các tập là bao nhiêu?",
    "output": "SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume"
  },
  {
    "instruction": "",
    "input": "Cho các tuần tối đa và tối thiểu trên đầu trên tất cả các khối lượng.",
    "output": "SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume"
  },
  {
    "instruction": "",
    "input": "Các bài hát trong tập với hơn 1 tuần trên đầu là gì?",
    "output": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1"
  },
  {
    "instruction": "",
    "input": "Cung cấp các bài hát bao gồm trong các tập có hơn 1 tuần trên đầu.",
    "output": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1"
  },
  {
    "instruction": "",
    "input": "Vui lòng liệt kê tất cả các bài hát trong tập theo thứ tự bảng chữ cái tăng dần.",
    "output": "SELECT Song FROM volume ORDER BY Song"
  },
  {
    "instruction": "",
    "input": "Các bài hát trong tập, được liệt kê theo thứ tự tăng dần là gì?",
    "output": "SELECT Song FROM volume ORDER BY Song"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nghệ sĩ khác nhau làm các tập liên kết với?",
    "output": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng nghệ sĩ riêng biệt có tập.",
    "output": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị ngày lễ của các tập kéo dài hơn 2 tuần trên đỉnh.",
    "output": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2"
  },
  {
    "instruction": "",
    "input": "Ngày của buổi lễ tại các lễ hội âm nhạc tương ứng với các tập kéo dài hơn 2 tuần trên đỉnh?",
    "output": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các bài hát có kết quả \"được đề cử\" tại các lễ hội âm nhạc.",
    "output": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\""
  },
  {
    "instruction": "",
    "input": "Các bài hát trong các tập đã dẫn đến một đề cử tại các lễ hội âm nhạc là gì?",
    "output": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\""
  },
  {
    "instruction": "",
    "input": "Ngày vấn đề của các tập liên quan đến nghệ sĩ \"Gorgoroth\" là gì?",
    "output": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\""
  },
  {
    "instruction": "",
    "input": "Trả lại ngày vấn đề của các tập của nghệ sĩ tên là Gorgoroth.",
    "output": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\""
  },
  {
    "instruction": "",
    "input": "Các bài hát trong tập liên quan đến nghệ sĩ từ 32 tuổi trở lên là gì?",
    "output": "SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32"
  },
  {
    "instruction": "",
    "input": "Tên trở lại của các bài hát trong các tập của các nghệ sĩ ít nhất 32 tuổi.",
    "output": "SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32"
  },
  {
    "instruction": "",
    "input": "Những tuần trung bình trên các tập liên quan đến nghệ sĩ từ 25 tuổi trở xuống là gì?",
    "output": "SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25"
  },
  {
    "instruction": "",
    "input": "Trả lại số tuần trung bình trên đỉnh cho tập của các nghệ sĩ nhiều nhất là 25 tuổi.",
    "output": "SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25"
  },
  {
    "instruction": "",
    "input": "Tiêu đề nổi tiếng của các nghệ sĩ liên quan đến khối lượng với hơn 2 tuần trên đỉnh?",
    "output": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2"
  },
  {
    "instruction": "",
    "input": "Trả lại các tựa game nổi tiếng cho các nghệ sĩ có tập kéo dài hơn 2 tuần trên đỉnh.",
    "output": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2"
  },
  {
    "instruction": "",
    "input": "Vui lòng liệt kê tuổi và danh hiệu nổi tiếng của các nghệ sĩ theo thứ tự thời đại.",
    "output": "SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC"
  },
  {
    "instruction": "",
    "input": "Các tựa game và lứa tuổi nổi tiếng của mỗi nghệ sĩ, được liệt kê theo thứ tự giảm dần theo độ tuổi là gì?",
    "output": "SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC"
  },
  {
    "instruction": "",
    "input": "Ngày phát hành nổi tiếng của nghệ sĩ với tuổi già nhất là gì?",
    "output": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại ngày phát hành nổi tiếng cho nghệ sĩ lâu đời nhất.",
    "output": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các thể loại của các lễ hội âm nhạc và số đếm.",
    "output": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category"
  },
  {
    "instruction": "",
    "input": "Trả lại số lượng lễ hội âm nhạc của mỗi thể loại.",
    "output": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category"
  },
  {
    "instruction": "",
    "input": "Kết quả phổ biến nhất của lễ hội âm nhạc là gì?",
    "output": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về kết quả thường xuyên nhất tại các lễ hội âm nhạc.",
    "output": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị các thể loại của các lễ hội âm nhạc với số lượng nhiều hơn 1.",
    "output": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Các loại lễ hội âm nhạc đã có hơn 1 lễ hội âm nhạc là gì?",
    "output": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Bài hát trong tập với những tuần tối đa trên đầu là gì?",
    "output": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại bài hát trong tập đã dành nhiều tuần nhất trên đầu?",
    "output": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm các tựa game nổi tiếng của các nghệ sĩ không có thể tích.",
    "output": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề nổi tiếng của các nghệ sĩ không có tập nào?",
    "output": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các tựa game nổi tiếng của các nghệ sĩ với cả hai tập kéo dài hơn 2 tuần trên đỉnh và khối lượng kéo dài chưa đầy 2 tuần trên đỉnh.",
    "output": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2"
  },
  {
    "instruction": "",
    "input": "Những tựa game nổi tiếng của các nghệ sĩ không chỉ có khối lượng đã dành hơn 2 tuần trên đỉnh mà còn cả khối lượng chưa đến 2 tuần trên đầu?",
    "output": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2"
  },
  {
    "instruction": "",
    "input": "Ngày lễ lễ hội âm nhạc với thể loại \"Bài hát hay nhất\" và kết quả là \"được trao\"?",
    "output": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\""
  },
  {
    "instruction": "",
    "input": "Trả lại ngày của buổi lễ tương ứng với các lễ hội âm nhạc có thể loại \"Bài hát hay nhất\" và kết quả \"được trao\".",
    "output": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\""
  },
  {
    "instruction": "",
    "input": "Ngày phát hành của tập với các tuần tối thiểu trên đầu là bao nhiêu?",
    "output": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại ngày phát hành của tập đã dành ít tuần nhất trên đỉnh.",
    "output": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nghệ sĩ riêng biệt có khối lượng?",
    "output": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng nghệ sĩ đã có tập.",
    "output": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị kết quả của các lễ hội âm nhạc và số lượng lễ hội âm nhạc đã từng có, được đặt hàng theo số này.",
    "output": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu lễ hội âm nhạc đã có từng loại kết quả, được yêu cầu giảm dần theo đếm?",
    "output": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"
  },
  {
    "instruction": "",
    "input": "Ngày vấn đề của các tập liên quan đến nghệ sĩ từ 23 tuổi trở xuống là gì?",
    "output": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23"
  },
  {
    "instruction": "",
    "input": "Trả lại ngày vấn đề của tập của các nghệ sĩ nhiều nhất là 23 tuổi?",
    "output": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tàu lượn siêu tốc?",
    "output": "SELECT count(*) FROM roller_coaster"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tàu lượn siêu tốc theo thứ tự tăng dần của chiều dài.",
    "output": "SELECT Name FROM roller_coaster ORDER BY LENGTH ASC"
  },
  {
    "instruction": "",
    "input": "Độ dài và chiều cao của tàu lượn siêu tốc là gì?",
    "output": "SELECT LENGTH ,  Height FROM roller_coaster"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các quốc gia có ngôn ngữ không phải là \"tiếng Đức\".",
    "output": "SELECT Name FROM country WHERE Languages != \"German\""
  },
  {
    "instruction": "",
    "input": "Hiển thị trạng thái của tàu lượn siêu tốc dài hơn 3300 hoặc cao hơn 100.",
    "output": "SELECT Status FROM roller_coaster WHERE LENGTH  >  3300 OR Height  >  100"
  },
  {
    "instruction": "",
    "input": "Tốc độ của tàu lượn siêu tốc dài nhất là gì?",
    "output": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tốc độ trung bình của tàu lượn siêu tốc là bao nhiêu?",
    "output": "SELECT avg(Speed) FROM roller_coaster"
  },
  {
    "instruction": "",
    "input": "Hiển thị các trạng thái khác nhau và số lượng tàu lượn siêu tốc cho mỗi trạng thái.",
    "output": "SELECT Status ,  COUNT(*) FROM roller_coaster GROUP BY Status"
  },
  {
    "instruction": "",
    "input": "Vui lòng hiển thị trạng thái phổ biến nhất của tàu lượn siêu tốc.",
    "output": "SELECT Status FROM roller_coaster GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê trạng thái được chia sẻ bởi nhiều hơn hai tàu lượn siêu tốc.",
    "output": "SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị công viên của tàu lượn siêu tốc với tốc độ cao nhất.",
    "output": "SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của tàu lượn siêu tốc và tên của đất nước họ đang ở.",
    "output": "SELECT T2.Name ,  T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các quốc gia có nhiều hơn một tàu lượn siêu tốc.",
    "output": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name HAVING COUNT(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và dân số của đất nước có tàu lượn siêu tốc cao nhất.",
    "output": "SELECT T1.Name ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID ORDER BY T2.Height DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các quốc gia và tốc độ trung bình của tàu lượn siêu tốc từ mỗi quốc gia.",
    "output": "SELECT T1.Name ,  avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu quốc gia không có tàu lượn siêu tốc dài hơn 3000?",
    "output": "SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )"
  },
  {
    "instruction": "",
    "input": "Tên quốc gia, diện tích và dân số có cả tàu lượn siêu tốc với tốc độ cao hơn",
    "output": "SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  >  60 INTERSECT SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  <  55"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cấp bậc đội trưởng khác nhau?",
    "output": "SELECT count(DISTINCT rank) FROM captain"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng hàng ngũ khác nhau của đội trưởng.",
    "output": "SELECT count(DISTINCT rank) FROM captain"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thuyền trưởng trong mỗi cấp bậc?",
    "output": "SELECT count(*) ,  rank FROM captain GROUP BY rank"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng thuyền trưởng có mỗi cấp bậc.",
    "output": "SELECT count(*) ,  rank FROM captain GROUP BY rank"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thuyền trưởng có dưới 50 tuổi ở mỗi cấp bậc?",
    "output": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng thuyền trưởng dưới 50 của mỗi cấp bậc.",
    "output": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank"
  },
  {
    "instruction": "",
    "input": "Sắp xếp tất cả các tên thuyền trưởng theo độ tuổi của họ từ già đến trẻ.",
    "output": "SELECT name FROM captain ORDER BY age DESC"
  },
  {
    "instruction": "",
    "input": "Tên của các thuyền trưởng, được sắp xếp theo độ tuổi giảm dần là gì?",
    "output": "SELECT name FROM captain ORDER BY age DESC"
  },
  {
    "instruction": "",
    "input": "Tìm tên, lớp học và cấp bậc của tất cả các thuyền trưởng.",
    "output": "SELECT name ,  CLASS ,  rank FROM captain"
  },
  {
    "instruction": "",
    "input": "Tên, lớp học và cấp bậc của tất cả các đội trưởng là gì?",
    "output": "SELECT name ,  CLASS ,  rank FROM captain"
  },
  {
    "instruction": "",
    "input": "Thứ hạng nào là phổ biến nhất trong số các thuyền trưởng?",
    "output": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại thứ hạng mà có ít thuyền trưởng nhất.",
    "output": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những lớp học nào có nhiều hơn hai thuyền trưởng?",
    "output": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho các lớp có nhiều hơn hai thuyền trưởng.",
    "output": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các thuyền trưởng có cấp bậc là Midshipman hoặc Trung úy.",
    "output": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'"
  },
  {
    "instruction": "",
    "input": "Tên của các thuyền trưởng có cấp bậc trung bình hoặc trung úy là gì?",
    "output": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'"
  },
  {
    "instruction": "",
    "input": "Tuổi trung bình và tối thiểu của thuyền trưởng trong các lớp khác nhau là gì?",
    "output": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS"
  },
  {
    "instruction": "",
    "input": "Trả lại tuổi trung bình và tối thiểu của thuyền trưởng trong mỗi lớp.",
    "output": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS"
  },
  {
    "instruction": "",
    "input": "Tìm cấp bậc Thuyền trưởng có một số thuyền trưởng trong cả hai lớp schooner và vũ trang.",
    "output": "SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'"
  },
  {
    "instruction": "",
    "input": "Các cấp bậc của các đội trưởng đều nằm trong các lớp học sinh học và vũ trang là gì?",
    "output": "SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'"
  },
  {
    "instruction": "",
    "input": "Tìm cấp bậc đội trưởng không có đội trưởng trong tàu hạng ba của lớp.",
    "output": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'"
  },
  {
    "instruction": "",
    "input": "Các cấp bậc của các thuyền trưởng không có thuyền trưởng nằm trong con tàu hạng ba của lớp dòng là gì?",
    "output": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'"
  },
  {
    "instruction": "",
    "input": "Tên của đội trưởng trẻ nhất là gì?",
    "output": "SELECT name FROM captain ORDER BY age LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tên của đội trưởng trẻ nhất.",
    "output": "SELECT name FROM captain ORDER BY age LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tàu?",
    "output": "SELECT count(*) FROM ship"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng tàu.",
    "output": "SELECT count(*) FROM ship"
  },
  {
    "instruction": "",
    "input": "Tìm tên, loại và cờ của con tàu được chế tạo trong năm gần đây nhất.",
    "output": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên, loại và cờ của con tàu được chế tạo trong năm gần đây nhất là gì?",
    "output": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Nhóm theo tàu theo cờ và số lượng tàu trả lại có mỗi lá cờ.",
    "output": "SELECT count(*) ,  flag FROM ship GROUP BY flag"
  },
  {
    "instruction": "",
    "input": "Các cờ tàu khác nhau là gì, và mỗi con có bao nhiêu tàu?",
    "output": "SELECT count(*) ,  flag FROM ship GROUP BY flag"
  },
  {
    "instruction": "",
    "input": "Cờ nào được sử dụng rộng rãi nhất trong số tất cả các tàu?",
    "output": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại cờ phổ biến nhất trong số tất cả các tàu.",
    "output": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên tàu theo thứ tự của năm được xây dựng và lớp.",
    "output": "SELECT name FROM ship ORDER BY built_year ,  CLASS"
  },
  {
    "instruction": "",
    "input": "Tên của những con tàu, được đặt hàng theo năm chúng được xây dựng và lớp của chúng là gì?",
    "output": "SELECT name FROM ship ORDER BY built_year ,  CLASS"
  },
  {
    "instruction": "",
    "input": "Tìm loại tàu được sử dụng bởi cả hai tàu với cờ Panama và Malta.",
    "output": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'"
  },
  {
    "instruction": "",
    "input": "Những loại tàu nào có cả hai tàu có cờ Panama và cờ Malta?",
    "output": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'"
  },
  {
    "instruction": "",
    "input": "Trong năm nào hầu hết các tàu được chế tạo?",
    "output": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Năm mà hầu hết các tàu được chế tạo là gì?",
    "output": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những con tàu có nhiều hơn một đội trưởng.",
    "output": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tên của những con tàu có nhiều hơn một đội trưởng là gì?",
    "output": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tên và lớp học của những con tàu chưa có thuyền trưởng là gì?",
    "output": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)"
  },
  {
    "instruction": "",
    "input": "Trả lại tên và các lớp tàu không có thuyền trưởng?",
    "output": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của con tàu được đội trưởng trẻ nhất lái.",
    "output": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của con tàu được chỉ huy bởi thuyền trưởng trẻ nhất là gì?",
    "output": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên và cờ của những con tàu không được lái bởi bất kỳ đội trưởng nào với cấp bậc Midshipman.",
    "output": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')"
  },
  {
    "instruction": "",
    "input": "Tên và cờ của những con tàu không có thuyền trưởng với cấp bậc Midshipman là gì?",
    "output": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')"
  },
  {
    "instruction": "",
    "input": "Tìm tên của những con tàu được cả một đội trưởng với cấp bậc Midshipman và một đội trưởng với trung úy.",
    "output": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'"
  },
  {
    "instruction": "",
    "input": "Tên của những con tàu được chỉ huy bởi cả hai thuyền trưởng với cấp bậc Midshipman và thuyền trưởng với cấp bậc trung úy là gì?",
    "output": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'"
  },
  {
    "instruction": "",
    "input": "ID của thành phố đã tổ chức các sự kiện trong năm gần đây nhất là gì?",
    "output": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm thành phố đã tổ chức một số sự kiện trong năm gần đây nhất.ID của thành phố này là gì?",
    "output": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID trận đấu của các thành phố tổ chức cuộc thi \"Vòng loại FIFA World Cup 1994\"?",
    "output": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\""
  },
  {
    "instruction": "",
    "input": "ID trận đấu của cuộc thi có tên là \"Trình độ chuyên môn FIFA World Cup 1994\" 1994 là gì?",
    "output": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\""
  },
  {
    "instruction": "",
    "input": "Tìm các thành phố đã từng là một thành phố chủ nhà sau năm 2010?",
    "output": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010"
  },
  {
    "instruction": "",
    "input": "Những thành phố nào phục vụ như một thành phố chủ nhà sau năm 2010?",
    "output": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010"
  },
  {
    "instruction": "",
    "input": "Thành phố nào đã tổ chức nhiều sự kiện nhất?",
    "output": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm thành phố tổ chức nhiều sự kiện nhất.",
    "output": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Địa điểm của cuộc thi \"Vòng loại FIFA World Cup 1994\" Được tổ chức bởi \"Nam Kinh (Giang Tô)\" là gì?",
    "output": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\""
  },
  {
    "instruction": "",
    "input": "Tìm địa điểm của cuộc thi \"Trình độ chuyên môn World Cup FIFA 1994\" được tổ chức bởi \"Nam Kinh (Giang Tô)\".",
    "output": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\""
  },
  {
    "instruction": "",
    "input": "Cho tôi nhiệt độ của Thượng Hải vào tháng Giêng.",
    "output": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Shanghai\""
  },
  {
    "instruction": "",
    "input": "Nhiệt độ của thành phố \"Thượng Hải\" vào tháng 1 là bao nhiêu?",
    "output": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Shanghai\""
  },
  {
    "instruction": "",
    "input": "Năm chủ nhà của thành phố \"Taizhou (Chiết Giang)\" là gì?",
    "output": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\""
  },
  {
    "instruction": "",
    "input": "Thành phố \"Taizhou (Chiết Giang)\" vào năm nào làm thành phố chủ nhà?",
    "output": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\""
  },
  {
    "instruction": "",
    "input": "Ba thành phố nào có dân số khu vực lớn nhất?",
    "output": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Ba thành phố lớn nhất về dân số khu vực là gì?",
    "output": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Thành phố nào có GDP thấp nhất?Vui lòng liệt kê tên thành phố và GDP của nó.",
    "output": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Thành phố với GDP nhỏ nhất là gì?Trả lại thành phố và GDP của nó.",
    "output": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Thành phố nào có nhiệt độ cao nhất trong tháng Hai?",
    "output": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Vào tháng Hai, thành phố nào đánh dấu nhiệt độ cao nhất?",
    "output": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cho tôi một danh sách các thành phố có nhiệt độ trong tháng 3 thấp hơn so với tháng 7 hoặc cao hơn so với tháng 10?",
    "output": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct"
  },
  {
    "instruction": "",
    "input": "Nhiệt độ của thành phố nào trong tháng 3 thấp hơn so với tháng 7 hoặc cao hơn so với tháng 10?",
    "output": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct"
  },
  {
    "instruction": "",
    "input": "Cho tôi một danh sách các thành phố có nhiệt độ ở Mar thấp hơn so với tháng 7 và cũng đã từng là thành phố chủ?",
    "output": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
  },
  {
    "instruction": "",
    "input": "Những thành phố nào có nhiệt độ thấp hơn trong tháng 3 so với tháng 7 và đã từng là thành phố chủ nhà?",
    "output": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi một danh sách các thành phố có nhiệt độ ở Mar thấp hơn so với tháng 12 và chưa bao giờ là thành phố chủ.",
    "output": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
  },
  {
    "instruction": "",
    "input": "Những thành phố nào có nhiệt độ thấp hơn trong tháng ba so với trong tháng 12 và chưa bao giờ đóng vai trò là thành phố chủ?",
    "output": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
  },
  {
    "instruction": "",
    "input": "Cho tôi một danh sách các thành phố có nhiệt độ trong tháng 2 cao hơn ở Jun hoặc các thành phố từng là thành phố chủ nhà?",
    "output": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
  },
  {
    "instruction": "",
    "input": "Những thành phố nào có nhiệt độ cao hơn trong tháng 2 so với tháng sáu hoặc đã từng là thành phố chủ?",
    "output": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
  },
  {
    "instruction": "",
    "input": "Vui lòng cho tôi một danh sách các thành phố có dân số khu vực là hơn 10000000.",
    "output": "SELECT city FROM city WHERE regional_population  >  10000000"
  },
  {
    "instruction": "",
    "input": "Những thành phố nào có dân số khu vực trên 10000000?",
    "output": "SELECT city FROM city WHERE regional_population  >  10000000"
  },
  {
    "instruction": "",
    "input": "Vui lòng cho tôi một danh sách các thành phố có dân số khu vực là hơn 8000000 hoặc dưới 5000000.",
    "output": "SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000"
  },
  {
    "instruction": "",
    "input": "Những thành phố nào có dân số khu vực trên 8000000 hoặc dưới 5000000?",
    "output": "SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng trận đấu trong các cuộc thi khác nhau.",
    "output": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi cuộc thi, hãy đếm số lượng trận đấu.",
    "output": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition"
  },
  {
    "instruction": "",
    "input": "Danh sách các địa điểm của tất cả các trận đấu theo thứ tự ngày của họ bắt đầu từ trận gần đây nhất.",
    "output": "SELECT venue FROM MATCH ORDER BY date DESC"
  },
  {
    "instruction": "",
    "input": "Các địa điểm của tất cả các trận đấu là gì?Sắp xếp chúng theo thứ tự giảm dần của ngày trận đấu.",
    "output": "SELECT venue FROM MATCH ORDER BY date DESC"
  },
  {
    "instruction": "",
    "input": "GDP của thành phố với dân số lớn nhất là gì.",
    "output": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm GDP của thành phố với dân số khu vực lớn nhất.",
    "output": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "GDP và dân số của thành phố đã phục vụ như một vật chủ hơn một lần?",
    "output": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Những thành phố nào đã phục vụ như là thành phố chủ nhà nhiều hơn một lần?Trả lại cho tôi GDP và dân số của họ.",
    "output": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên, tên đệm và họ của mỗi cá nhân theo thứ tự bảng chữ cái theo họ.",
    "output": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên, giữa và cuối cùng của tất cả các cá nhân, được đặt hàng theo họ là gì?",
    "output": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các loại hình thức.",
    "output": "SELECT DISTINCT form_type_code FROM forms"
  },
  {
    "instruction": "",
    "input": "Các loại hình thức khác nhau là gì?",
    "output": "SELECT DISTINCT form_type_code FROM forms"
  },
  {
    "instruction": "",
    "input": "Tìm tên của hình thức tiệc phổ biến nhất.",
    "output": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của hình thức bên là gì phổ biến nhất là gì?",
    "output": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm phương thức thanh toán và điện thoại của bữa tiệc với email \"enrico09@example.com\".",
    "output": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\""
  },
  {
    "instruction": "",
    "input": "Mã phương thức thanh toán và điện thoại bên của bên với email 'enrico09@example.com' là gì?",
    "output": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\""
  },
  {
    "instruction": "",
    "input": "Tìm email của các bên có mẫu tiệc phổ biến nhất.",
    "output": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Các email của bên liên quan đến các bên sử dụng hình thức đảng là gì phổ biến nhất là gì?",
    "output": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả tên của các tổ chức theo thứ tự ngày được hình thành.",
    "output": "SELECT organization_name FROM organizations ORDER BY date_formed ASC"
  },
  {
    "instruction": "",
    "input": "Tên của các tổ chức, được đặt hàng trước ngày họ được thành lập, tăng dần?",
    "output": "SELECT organization_name FROM organizations ORDER BY date_formed ASC"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tổ chức trẻ nhất.",
    "output": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của tổ chức được thành lập gần đây nhất là gì?",
    "output": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm họ cuối cùng của cá nhân liên hệ mới nhất của tổ chức \"Đảng Lao động\".",
    "output": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của cá nhân liên lạc từ tổ chức Đảng Lao động được liên lạc gần đây nhất là gì?",
    "output": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm họ của người liên hệ đầu tiên của tổ chức với số VAT cao nhất của Vương quốc Anh.",
    "output": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của cá nhân đầu tiên được liên hệ từ tổ chức với số VAT tối đa của Vương quốc Anh trên tất cả các tổ chức là gì?",
    "output": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu dịch vụ?",
    "output": "SELECT count(*) FROM services"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng dịch vụ.",
    "output": "SELECT count(*) FROM services"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các dịch vụ chưa bao giờ được sử dụng.",
    "output": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id"
  },
  {
    "instruction": "",
    "input": "Tên của các dịch vụ chưa từng được sử dụng là gì?",
    "output": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các thành phố và tiểu bang.",
    "output": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các thành phố và tiểu bang là gì?",
    "output": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành phố ở bang \"Colorado\"?",
    "output": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng thành phố ở bang Colorado.",
    "output": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\""
  },
  {
    "instruction": "",
    "input": "Tìm mã phương thức thanh toán được sử dụng bởi hơn 3 bên.",
    "output": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3"
  },
  {
    "instruction": "",
    "input": "Các mã phương thức thanh toán đã được sử dụng bởi hơn 3 bên là gì?",
    "output": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các tổ chức có tên chứa \"bên\".",
    "output": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\""
  },
  {
    "instruction": "",
    "input": "Tên của các tổ chức có chứa từ \"bên\" là gì?",
    "output": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phương thức thanh toán riêng biệt được sử dụng bởi các bên?",
    "output": "SELECT count(DISTINCT payment_method_code) FROM parties"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng mã phương thức thanh toán khác nhau được sử dụng bởi các bên.",
    "output": "SELECT count(DISTINCT payment_method_code) FROM parties"
  },
  {
    "instruction": "",
    "input": "Đó là email của bữa tiệc đã sử dụng các dịch vụ nhiều lần nhất?",
    "output": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại email bên đã sử dụng các dịch vụ bên số lần lớn nhất.",
    "output": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Bang nào có thể giải quyết \"6862 Kaitlyn Knolls\" có thể ở trong?",
    "output": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\""
  },
  {
    "instruction": "",
    "input": "Cung cấp cho trạng thái tương ứng với tòa nhà số dòng \"6862 Kaitlyn Knolls\".",
    "output": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\""
  },
  {
    "instruction": "",
    "input": "Tên của tổ chức có số lượng cá nhân liên hệ lớn nhất là gì?",
    "output": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về tên của tổ chức có nhiều cá nhân liên lạc nhất.",
    "output": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm họ cuối cùng của các cá nhân đã liên lạc với các cá nhân của một tổ chức.",
    "output": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng của các cá nhân đã liên lạc với các cá nhân cho một tổ chức là gì?",
    "output": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu trình điều khiển?",
    "output": "SELECT count(*) FROM driver"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, thành phố quê hương và tuổi cho tất cả các tài xế.",
    "output": "SELECT name ,  home_city ,  age FROM driver"
  },
  {
    "instruction": "",
    "input": "Hiển thị bữa tiệc và số lượng tài xế trong mỗi bên.",
    "output": "SELECT party ,  count(*) FROM driver GROUP BY party"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các trình điều khiển theo thứ tự giảm dần của tuổi.",
    "output": "SELECT name FROM driver ORDER BY age DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các thành phố nhà khác nhau.",
    "output": "SELECT DISTINCT home_city FROM driver"
  },
  {
    "instruction": "",
    "input": "Hiển thị thành phố quê hương với số lượng tài xế nhiều nhất.",
    "output": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị bữa tiệc với các tài xế từ Hartford và trình điều khiển cũ hơn 40.",
    "output": "SELECT party FROM driver WHERE home_city  =  'Hartford' AND age  >  40"
  },
  {
    "instruction": "",
    "input": "Hiển thị thành phố quê hương nơi ít nhất hai trình điều khiển trên 40 tuổi.",
    "output": "SELECT home_city FROM driver WHERE age  >  40 GROUP BY home_city HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các thành phố gia đình ngoại trừ những người có tài xế trên 40 tuổi.",
    "output": "SELECT home_city FROM driver EXCEPT SELECT home_city FROM driver WHERE age  >  40"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của các tài xế mà không có xe buýt trường học.",
    "output": "SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus)"
  },
  {
    "instruction": "",
    "input": "Hiển thị các loại trường có hai trường.",
    "output": "SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên trường và tên tài xế cho tất cả các xe buýt trường học.",
    "output": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id"
  },
  {
    "instruction": "",
    "input": "Các năm tối đa, tối thiểu và trung bình dành cho một chiếc xe buýt của trường là bao nhiêu?",
    "output": "SELECT max(years_working) ,  min(years_working) ,  avg(years_working) FROM school_bus"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên trường và loại cho các trường học mà không có xe buýt trường học.",
    "output": "SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)"
  },
  {
    "instruction": "",
    "input": "Hiển thị loại trường học và số lượng xe buýt cho mỗi loại.",
    "output": "SELECT T2.type ,  count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T2.type"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài xế từ thành phố Hartford hoặc dưới 40 tuổi?",
    "output": "SELECT count(*) FROM driver WHERE home_city  =  'Hartford' OR age  <  40"
  },
  {
    "instruction": "",
    "input": "Danh sách tên cho các tài xế từ Thành phố Hartford và dưới 40 tuổi.",
    "output": "SELECT name FROM driver WHERE home_city  =  'Hartford' AND age  <  40"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tài xế đang lái xe buýt trường học với lịch sử làm việc lâu nhất.",
    "output": "SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id  =  t2.driver_id ORDER BY years_working DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu chuyến bay có vận tốc lớn hơn 200?",
    "output": "SELECT count(*) FROM flight WHERE velocity  >  200"
  },
  {
    "instruction": "",
    "input": "Liệt kê số chuyến bay của xe, ngày và phi công của tất cả các chuyến bay, được đặt hàng theo độ cao.",
    "output": "SELECT vehicle_flight_number ,  date ,  pilot FROM flight ORDER BY altitude ASC"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID, quốc gia, thành phố và tên của các sân bay được đặt hàng theo thứ tự bảng chữ cái.",
    "output": "SELECT id ,  country ,  city ,  name FROM airport ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Cổ phần vốn chủ sở hữu nhóm tối đa của các công ty là gì?",
    "output": "SELECT max(group_equity_shareholding) FROM operate_company"
  },
  {
    "instruction": "",
    "input": "Vận tốc của phi công tên là 'Thompson' là bao nhiêu?",
    "output": "SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson'"
  },
  {
    "instruction": "",
    "input": "Tên và loại của các công ty đã từng vận hành một chuyến bay là gì?",
    "output": "SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id"
  },
  {
    "instruction": "",
    "input": "Tên của các sân bay không ở trong nước 'Iceland' là gì?",
    "output": "SELECT name FROM airport WHERE country != 'Iceland'"
  },
  {
    "instruction": "",
    "input": "Các loại khác nhau của các công ty đã vận hành bất kỳ chuyến bay nào có vận tốc dưới 200 là gì?",
    "output": "SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200"
  },
  {
    "instruction": "",
    "input": "ID và tên của các công ty vận hành nhiều hơn một chuyến bay là gì?",
    "output": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "ID, tên và mã IATA của sân bay có số lượng chuyến bay nhất là gì?",
    "output": "SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những tên phi công khác nhau đã lái một chuyến bay ở nước này 'Hoa Kỳ' hoặc trong sân bay có tên là 'Sân bay Billund' là gì?",
    "output": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport'"
  },
  {
    "instruction": "",
    "input": "Loại công ty phổ biến nhất là gì và có bao nhiêu công ty?",
    "output": "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sân bay không phải là phi công 'Thompson' điều khiển một chiếc máy bay?",
    "output": "SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các phi công đã bay cho cả một công ty chủ yếu cung cấp dịch vụ 'hàng hóa' và một công ty điều hành các hoạt động 'dịch vụ phục vụ'.",
    "output": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Catering services'"
  },
  {
    "instruction": "",
    "input": "Tên sân bay nào chứa từ 'quốc tế'?",
    "output": "SELECT name FROM airport WHERE name LIKE '%international%'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu công ty vận hành các hãng hàng không ở mỗi sân bay?",
    "output": "SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sân bay ở mỗi quốc gia?",
    "output": "SELECT count(*) ,  country FROM airport GROUP BY country"
  },
  {
    "instruction": "",
    "input": "Những quốc gia nào có nhiều hơn 2 sân bay?",
    "output": "SELECT country FROM airport GROUP BY country HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Phi công nào phụ trách số lượng chuyến bay nhiều nhất?",
    "output": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu tài khoản?",
    "output": "SELECT count(*) FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng tài khoản.",
    "output": "SELECT count(*) FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả ID tài khoản và chi tiết tài khoản.",
    "output": "SELECT account_id ,  account_details FROM Accounts"
  },
  {
    "instruction": "",
    "input": "ID và chi tiết của tất cả các tài khoản là gì?",
    "output": "SELECT account_id ,  account_details FROM Accounts"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu tuyên bố?",
    "output": "SELECT count(*) FROM Statements"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng tuyên bố.",
    "output": "SELECT count(*) FROM Statements"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả ID tuyên bố và chi tiết tuyên bố.",
    "output": "SELECT STATEMENT_ID ,  statement_details FROM Statements"
  },
  {
    "instruction": "",
    "input": "ID và chi tiết của tất cả các tuyên bố là gì?",
    "output": "SELECT STATEMENT_ID ,  statement_details FROM Statements"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID tuyên bố, chi tiết tuyên bố, chi tiết tài khoản cho tài khoản.",
    "output": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id"
  },
  {
    "instruction": "",
    "input": "ID câu lệnh, chi tiết tuyên bố và chi tiết tài khoản, cho tất cả các tài khoản là gì?",
    "output": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả ID câu lệnh và số lượng tài khoản cho mỗi câu lệnh.",
    "output": "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID"
  },
  {
    "instruction": "",
    "input": "ID câu lệnh khác nhau trên tài khoản và số lượng tài khoản cho mỗi tài khoản là gì?",
    "output": "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID câu lệnh và chi tiết câu lệnh cho câu lệnh với hầu hết các tài khoản.",
    "output": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID câu lệnh và chi tiết câu lệnh cho câu lệnh có tài khoản tương ứng nhất là gì?",
    "output": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng tài liệu.",
    "output": "SELECT count(*) FROM Documents"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng tài liệu.",
    "output": "SELECT count(*) FROM Documents"
  },
  {
    "instruction": "",
    "input": "Liệt kê mã loại tài liệu, tên tài liệu và mô tả tài liệu cho tài liệu có tên 'Noel CV' hoặc tên 'King Book'.",
    "output": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'"
  },
  {
    "instruction": "",
    "input": "Loại đến, tên và mô tả của tài liệu có tên 'Noel CV' hoặc 'King Book'?",
    "output": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID và tên của tất cả các tài liệu.",
    "output": "SELECT document_id ,  document_name FROM Documents"
  },
  {
    "instruction": "",
    "input": "ID và tên cho mỗi tài liệu là gì?",
    "output": "SELECT document_id ,  document_name FROM Documents"
  },
  {
    "instruction": "",
    "input": "Tìm tên và ID của tất cả các tài liệu có mã loại tài liệu BK.",
    "output": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\""
  },
  {
    "instruction": "",
    "input": "Tên và ID của các tài liệu có mã BK là gì?",
    "output": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài liệu với mã loại tài liệu BK cho mỗi ID sản phẩm?",
    "output": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng tài liệu với mã BK loại tương ứng với mỗi ID sản phẩm.",
    "output": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên tài liệu và ngày tài liệu cho tất cả các tài liệu trên dự án với chi tiết 'Dự án cơ sở dữ liệu đồ thị'.",
    "output": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'"
  },
  {
    "instruction": "",
    "input": "Tên và ngày cho các tài liệu tương ứng với dự án có chi tiết 'Dự án cơ sở dữ liệu đồ thị' là gì?",
    "output": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID dự án và số lượng tài liệu trong mỗi dự án.",
    "output": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài liệu tương ứng với mỗi ID dự án?",
    "output": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id"
  },
  {
    "instruction": "",
    "input": "ID của dự án có số lượng tài liệu ít nhất là gì?",
    "output": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về ID của dự án có ít tài liệu tương ứng nhất.",
    "output": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID cho các dự án với ít nhất 2 tài liệu.",
    "output": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "ID dự án của các dự án có 2 tài liệu tương ứng trở lên là gì?",
    "output": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Danh sách mã loại tài liệu và số lượng tài liệu trong mỗi mã.",
    "output": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài liệu của mỗi loại?",
    "output": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code"
  },
  {
    "instruction": "",
    "input": "Mã loại tài liệu với hầu hết các tài liệu là gì?",
    "output": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả về mã của loại tài liệu là phổ biến nhất.",
    "output": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã loại tài liệu với ít hơn 3 tài liệu.",
    "output": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3"
  },
  {
    "instruction": "",
    "input": "Các mã tương ứng với các loại tài liệu có ít hơn 3 tài liệu là gì?",
    "output": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3"
  },
  {
    "instruction": "",
    "input": "Hiển thị chi tiết câu lệnh và tên tài liệu tương ứng cho câu lệnh với chi tiết 'dự án riêng tư'.",
    "output": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'"
  },
  {
    "instruction": "",
    "input": "Các chi tiết cho các câu lệnh với các chi tiết 'dự án riêng tư' là gì và tên của các tài liệu tương ứng là gì?",
    "output": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các mã loại tài liệu, tên loại tài liệu, mô tả loại tài liệu.",
    "output": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types"
  },
  {
    "instruction": "",
    "input": "Các mã, tên và mô tả của các loại tài liệu khác nhau là gì?",
    "output": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types"
  },
  {
    "instruction": "",
    "input": "Mô tả loại tài liệu cho loại tài liệu có tên là phim là gì?",
    "output": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\""
  },
  {
    "instruction": "",
    "input": "Trả về mô tả của tên tài liệu tên 'phim'.",
    "output": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\""
  },
  {
    "instruction": "",
    "input": "Tên loại tài liệu và mô tả loại tài liệu và ngày tạo cho tất cả các tài liệu là gì?",
    "output": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code"
  },
  {
    "instruction": "",
    "input": "Trả về tên loại, mô tả loại và ngày tạo cho mỗi tài liệu.",
    "output": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng các dự án.",
    "output": "SELECT count(*) FROM Projects"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu dự án?",
    "output": "SELECT count(*) FROM Projects"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID và chi tiết cho tất cả các dự án.",
    "output": "SELECT project_id ,  project_details FROM Projects"
  },
  {
    "instruction": "",
    "input": "ID và chi tiết cho mỗi dự án là gì?",
    "output": "SELECT project_id ,  project_details FROM Projects"
  },
  {
    "instruction": "",
    "input": "ID dự án và chi tiết cho dự án với ít nhất hai tài liệu là gì?",
    "output": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Trả về ID và chi tiết tương ứng với các dự án có nhiều hơn hai tài liệu.",
    "output": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2"
  },
  {
    "instruction": "",
    "input": "Chi tiết dự án cho dự án với tài liệu \"King Book\" là gì?",
    "output": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\""
  },
  {
    "instruction": "",
    "input": "Cung cấp chi tiết của dự án với tên tài liệu 'King Book'.",
    "output": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\""
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu loại ngân sách?",
    "output": "SELECT count(*) FROM Ref_budget_codes"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng mã ngân sách.",
    "output": "SELECT count(*) FROM Ref_budget_codes"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các mã loại ngân sách và mô tả.",
    "output": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes"
  },
  {
    "instruction": "",
    "input": "Các mã và mô tả loại của từng loại ngân sách là gì?",
    "output": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes"
  },
  {
    "instruction": "",
    "input": "Mô tả cho loại ngân sách với mã org là gì?",
    "output": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\""
  },
  {
    "instruction": "",
    "input": "Trả về mô tả của loại ngân sách có mã org.",
    "output": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài liệu có chi phí?",
    "output": "SELECT count(*) FROM Documents_with_expenses"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng tài liệu với chi phí.",
    "output": "SELECT count(*) FROM Documents_with_expenses"
  },
  {
    "instruction": "",
    "input": "ID tài liệu cho mã loại ngân sách 'sf' là gì?",
    "output": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'"
  },
  {
    "instruction": "",
    "input": "Cung cấp ID của các tài liệu với các chi phí có mã ngân sách 'SF'.",
    "output": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'"
  },
  {
    "instruction": "",
    "input": "Hiển thị mã loại ngân sách và mô tả và ID tài liệu tương ứng.",
    "output": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code"
  },
  {
    "instruction": "",
    "input": "Trả về mã loại ngân sách, mô tả loại ngân sách và ID tài liệu cho các tài liệu có chi phí.",
    "output": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID cho tất cả các tài liệu với các loại ngân sách được mô tả là 'chính phủ'.",
    "output": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Government\""
  },
  {
    "instruction": "",
    "input": "Cung cấp ID cho các tài liệu có mô tả ngân sách 'Chính phủ'.",
    "output": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Government\""
  },
  {
    "instruction": "",
    "input": "Hiển thị mã loại ngân sách và số lượng tài liệu trong mỗi loại ngân sách.",
    "output": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code"
  },
  {
    "instruction": "",
    "input": "Các mã loại ngân sách khác nhau là gì và có bao nhiêu tài liệu cho mỗi tài liệu?",
    "output": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code"
  },
  {
    "instruction": "",
    "input": "Mã loại ngân sách với hầu hết các tài liệu là gì.",
    "output": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cung cấp mã loại ngân sách phổ biến nhất trong số các tài liệu có chi phí.",
    "output": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID ID của các tài liệu không có ngân sách chi phí là gì?",
    "output": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses"
  },
  {
    "instruction": "",
    "input": "Trả lại ID của các tài liệu không có chi phí.",
    "output": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID cho tất cả các tài liệu trong loại CV mà không có ngân sách chi phí.",
    "output": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses"
  },
  {
    "instruction": "",
    "input": "ID ID của các tài liệu với mã CV loại không có chi phí.",
    "output": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses"
  },
  {
    "instruction": "",
    "input": "ID ID của các tài liệu có chữ 'S' trong tên với bất kỳ ngân sách chi phí nào.",
    "output": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'"
  },
  {
    "instruction": "",
    "input": "Đưa ra ID của các tài liệu có chi phí và chứa chữ S trong tên của họ.",
    "output": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tài liệu không có bất kỳ chi phí?",
    "output": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng tài liệu không có chi phí.",
    "output": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )"
  },
  {
    "instruction": "",
    "input": "Các ngày cho các tài liệu với cả loại 'GV' và loại 'SF' là gì?",
    "output": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'"
  },
  {
    "instruction": "",
    "input": "Cung cấp ngày sáng tạo cho các tài liệu có cả mã ngân sách 'GV' và 'SF'.",
    "output": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'"
  },
  {
    "instruction": "",
    "input": "Các chi tiết tài khoản có giá trị lớn nhất hoặc với giá trị có char '5' trong đó là gì?",
    "output": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\""
  },
  {
    "instruction": "",
    "input": "Trả về các chi tiết tài khoản với giá trị lớn nhất, cũng như các chi tiết bao gồm ký tự 5.",
    "output": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\""
  },
  {
    "instruction": "",
    "input": "Tìm tổng số các nhà khoa học.",
    "output": "SELECT count(*) FROM scientists"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhà khoa học?",
    "output": "SELECT count(*) FROM scientists"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số giờ của tất cả các dự án.",
    "output": "SELECT sum(hours) FROM projects"
  },
  {
    "instruction": "",
    "input": "Tổng số giờ cho tất cả các dự án là bao nhiêu?",
    "output": "SELECT sum(hours) FROM projects"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhà khoa học khác nhau được giao cho bất kỳ dự án?",
    "output": "SELECT count(DISTINCT scientist) FROM assignedto"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng các nhà khoa học khác nhau được giao cho bất kỳ dự án.",
    "output": "SELECT count(DISTINCT scientist) FROM assignedto"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các dự án riêng biệt.",
    "output": "SELECT count(DISTINCT name) FROM projects"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu dự án khác nhau?",
    "output": "SELECT count(DISTINCT name) FROM projects"
  },
  {
    "instruction": "",
    "input": "Tìm giờ trung bình của tất cả các dự án.",
    "output": "SELECT avg(hours) FROM projects"
  },
  {
    "instruction": "",
    "input": "Giờ trung bình trên tất cả các dự án là gì?",
    "output": "SELECT avg(hours) FROM projects"
  },
  {
    "instruction": "",
    "input": "Tìm tên của dự án tiếp tục trong thời gian dài nhất.",
    "output": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của dự án với nhiều giờ nhất là gì?",
    "output": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các dự án được vận hành lâu hơn giờ làm việc trung bình của tất cả các dự án.",
    "output": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)"
  },
  {
    "instruction": "",
    "input": "Tên của các dự án đã mất nhiều thời gian hơn số giờ trung bình cho tất cả các dự án là gì?",
    "output": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)"
  },
  {
    "instruction": "",
    "input": "Tìm tên và giờ của dự án có nhiều nhà khoa học nhất.",
    "output": "SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và giờ cho dự án có nhiều nhà khoa học được giao cho nó là gì?",
    "output": "SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của dự án mà một nhà khoa học có tên chứa ‘Smith, được gán cho.",
    "output": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'"
  },
  {
    "instruction": "",
    "input": "Tên của dự án có một nhà khoa học được gán cho nó có tên là 'Smith' là gì?",
    "output": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'"
  },
  {
    "instruction": "",
    "input": "Tìm tổng số giờ của các dự án mà các nhà khoa học tên là Michael Rogers hoặc Carol Smith được chỉ định.",
    "output": "SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name  =  'Michael Rogers' OR T3.name  =  'Carol Smith'"
  },
  {
    "instruction": "",
    "input": "Tổng số giờ cho các dự án mà các nhà khoa học có tên là Michael Rogers hoặc Carol Smith được chỉ định?",
    "output": "SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name  =  'Michael Rogers' OR T3.name  =  'Carol Smith'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các dự án yêu cầu từ 100 đến 300 giờ làm việc.",
    "output": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300"
  },
  {
    "instruction": "",
    "input": "Tên của các dự án yêu cầu từ 100 đến 300 giờ là gì?",
    "output": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300"
  },
  {
    "instruction": "",
    "input": "Tìm tên của nhà khoa học đã làm việc trong cả một dự án có tên 'Matter of Time' và một dự án có tên 'Một thị sai khó hiểu'.",
    "output": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Puzzling Parallax'"
  },
  {
    "instruction": "",
    "input": "Tên của bất kỳ nhà khoa học nào đã làm việc trong các dự án có tên là 'vấn đề thời gian' và 'một mô hình khó hiểu' là gì?",
    "output": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Puzzling Parallax'"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các nhà khoa học được sắp xếp theo thứ tự bảng chữ cái.",
    "output": "SELECT name FROM scientists ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các nhà khoa học theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT name FROM scientists ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các nhà khoa học tham gia cho mỗi tên dự án.",
    "output": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các dự án là gì và có bao nhiêu nhà khoa học được chỉ định cho mỗi người trong số họ là gì?",
    "output": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các nhà khoa học tham gia cho các dự án yêu cầu hơn 300 giờ.",
    "output": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name"
  },
  {
    "instruction": "",
    "input": "Tên của các dự án yêu cầu hơn 300 giờ, và có bao nhiêu nhà khoa học được chỉ định cho mỗi dự án?",
    "output": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các dự án mà mỗi nhà khoa học đang làm và tên của nhà khoa học.",
    "output": "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name"
  },
  {
    "instruction": "",
    "input": "Tên của các nhà khoa học là gì và mỗi dự án đang làm việc bao nhiêu dự án?",
    "output": "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name"
  },
  {
    "instruction": "",
    "input": "Tìm SSN và tên của các nhà khoa học được giao cho dự án với thời gian dài nhất.",
    "output": "SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"
  },
  {
    "instruction": "",
    "input": "SSN và tên của các nhà khoa học làm việc trong dự án với nhiều giờ nhất là gì?",
    "output": "SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các nhà khoa học được giao cho một số dự án.",
    "output": "SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn"
  },
  {
    "instruction": "",
    "input": "Tên của các nhà khoa học được giao cho bất kỳ dự án là gì?",
    "output": "SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn"
  },
  {
    "instruction": "",
    "input": "Chọn các tên dự án chưa được gán.",
    "output": "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)"
  },
  {
    "instruction": "",
    "input": "Tên của các dự án chưa được chỉ định là gì?",
    "output": "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các nhà khoa học không được giao cho bất kỳ dự án nào.",
    "output": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)"
  },
  {
    "instruction": "",
    "input": "Tên của các nhà khoa học chưa được chỉ định một dự án là gì?",
    "output": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các nhà khoa học không được giao cho bất kỳ dự án nào.",
    "output": "SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhà khoa học không có bất kỳ dự án nào được giao cho họ?",
    "output": "SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các nhà khoa học không làm việc trong dự án với số giờ cao nhất.",
    "output": "SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"
  },
  {
    "instruction": "",
    "input": "Tên của các nhà khoa học không làm việc trong dự án với nhiều giờ nhất là gì?",
    "output": "SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên của các nhà khoa học, tên của các dự án của họ và số giờ của nhà khoa học đó trong mỗi dự án, theo thứ tự bảng chữ cái của tên dự án, và sau đó là tên nhà khoa học.",
    "output": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name"
  },
  {
    "instruction": "",
    "input": "Tên của mỗi nhà khoa học, tên của các dự án mà họ làm việc và giờ cho mỗi dự án đó, được liệt kê theo thứ tự bảng chữ cái theo tên dự án, sau đó là tên nhà khoa học.",
    "output": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name"
  },
  {
    "instruction": "",
    "input": "Tìm tên của dự án cần ít thời gian nhất để hoàn thành và tên của các nhà khoa học đã làm việc với nó.",
    "output": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)"
  },
  {
    "instruction": "",
    "input": "Tên của dự án yêu cầu số giờ ít nhất là gì và tên của các nhà khoa học được gán cho nó là gì?",
    "output": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)"
  },
  {
    "instruction": "",
    "input": "Tên của rượu vang được đánh giá cao nhất là gì?",
    "output": "SELECT Name FROM WINE ORDER BY Score LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đặt tên của rượu với số điểm cao nhất.",
    "output": "SELECT Name FROM WINE ORDER BY Score LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Rượu vang nào là rượu vang có điểm số cao nhất?",
    "output": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Nhà máy rượu mà rượu vang với điểm số cao nhất được sản xuất là gì?",
    "output": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các loại rượu vang được sản xuất trong năm 2008.",
    "output": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\""
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các loại rượu vang được sản xuất trong năm 2008 là gì?",
    "output": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\""
  },
  {
    "instruction": "",
    "input": "Liệt kê nho và tên gọi của tất cả các loại rượu vang.",
    "output": "SELECT Grape ,  Appelation FROM WINE"
  },
  {
    "instruction": "",
    "input": "Nho và tên gọi của mỗi loại rượu là gì?",
    "output": "SELECT Grape ,  Appelation FROM WINE"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên và điểm số của tất cả các loại rượu vang.",
    "output": "SELECT Name ,  Score FROM WINE"
  },
  {
    "instruction": "",
    "input": "Tên và điểm số của tất cả các loại rượu vang là gì?",
    "output": "SELECT Name ,  Score FROM WINE"
  },
  {
    "instruction": "",
    "input": "Liệt kê khu vực và quận của tất cả các tên gọi.",
    "output": "SELECT Area ,  County FROM APPELLATIONS"
  },
  {
    "instruction": "",
    "input": "Các khu vực và quận cho tất cả các tên gọi là gì?",
    "output": "SELECT Area ,  County FROM APPELLATIONS"
  },
  {
    "instruction": "",
    "input": "Giá rượu vang được sản xuất trước năm 2010 là gì?",
    "output": "SELECT Price FROM WINE WHERE YEAR  <  2010"
  },
  {
    "instruction": "",
    "input": "Trả lại giá rượu vang được sản xuất trước năm 2010.",
    "output": "SELECT Price FROM WINE WHERE YEAR  <  2010"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các loại rượu vang riêng biệt có điểm cao hơn 90.",
    "output": "SELECT Name FROM WINE WHERE score  >  90"
  },
  {
    "instruction": "",
    "input": "Tên của rượu vang có điểm cao hơn 90 là gì?",
    "output": "SELECT Name FROM WINE WHERE score  >  90"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các loại rượu vang riêng biệt được làm bằng nho màu đỏ.",
    "output": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\""
  },
  {
    "instruction": "",
    "input": "Tên của rượu vang làm từ nho đỏ là gì?",
    "output": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của tất cả các loại rượu vang riêng biệt có tên gọi ở khu vực Bờ biển phía Bắc.",
    "output": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"North Coast\""
  },
  {
    "instruction": "",
    "input": "Các tên riêng biệt của các loại rượu vang có tên gọi ở khu vực Bờ biển phía Bắc là gì?",
    "output": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"North Coast\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại rượu vang được sản xuất tại Robert Biale Winery?",
    "output": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng rượu vang được sản xuất tại nhà máy rượu Robert Biale.",
    "output": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sự thay đổi ở Napa Country?",
    "output": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng ứng dụng ở Hạt Napa.",
    "output": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\""
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi mức giá trung bình của các loại rượu vang được sản xuất bởi các vụ kiện ở Hạt Sonoma.",
    "output": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\""
  },
  {
    "instruction": "",
    "input": "Giá rượu vang trung bình được sản xuất trong tên gọi ở Hạt Sonoma là bao nhiêu?",
    "output": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\""
  },
  {
    "instruction": "",
    "input": "Tên và điểm số của rượu vang được làm bằng nho màu trắng là gì?",
    "output": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\""
  },
  {
    "instruction": "",
    "input": "Đặt tên và điểm số của rượu vang làm từ nho trắng.",
    "output": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\""
  },
  {
    "instruction": "",
    "input": "Tìm giá tối đa của các chiến thắng từ các khu vực trong khu vực Central Coast và được sản xuất trước năm 2005.",
    "output": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Central Coast\" AND T2.year  <  2005"
  },
  {
    "instruction": "",
    "input": "Giá rượu vang tối đa từ tên gọi ở khu vực Bờ biển Trung, được sản xuất trước năm 2005 là bao nhiêu?",
    "output": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Central Coast\" AND T2.year  <  2005"
  },
  {
    "instruction": "",
    "input": "Tìm loại nho có nho màu trắng được sử dụng để sản xuất rượu vang với điểm số cao hơn 90.",
    "output": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\" AND T2.score  >  90"
  },
  {
    "instruction": "",
    "input": "Tìm nho trắng được sử dụng để sản xuất rượu vang với điểm số trên 90.",
    "output": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\" AND T2.score  >  90"
  },
  {
    "instruction": "",
    "input": "Các loại rượu vang có giá cao hơn 50 và làm bằng nho màu đỏ là gì?",
    "output": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50"
  },
  {
    "instruction": "",
    "input": "Tên của các loại rượu vang được làm từ nho đỏ và với giá trên 50 là gì?",
    "output": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50"
  },
  {
    "instruction": "",
    "input": "Các loại rượu vang có giá thấp hơn 50 và có sự thay đổi ở Hạt Monterey là gì?",
    "output": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Monterey\" AND T2.price  <  50"
  },
  {
    "instruction": "",
    "input": "Đặt tên của rượu vang với giá dưới 50 và với tên gọi ở Hạt Monterey.",
    "output": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Monterey\" AND T2.price  <  50"
  },
  {
    "instruction": "",
    "input": "Số lượng rượu vang cho các loại nho khác nhau là gì?",
    "output": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu loại rượu vang cho mỗi loại nho?",
    "output": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape"
  },
  {
    "instruction": "",
    "input": "Giá rượu vang trung bình trong các năm khác nhau là gì?",
    "output": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR"
  },
  {
    "instruction": "",
    "input": "Giá trung bình của rượu vang cho mỗi loại là bao nhiêu?",
    "output": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR"
  },
  {
    "instruction": "",
    "input": "Tìm tên riêng biệt của tất cả các loại rượu vang có giá cao hơn một số loại rượu vang từ John Anthony Winery.",
    "output": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")"
  },
  {
    "instruction": "",
    "input": "Những cái tên riêng biệt của rượu vang với giá cao hơn bất kỳ loại rượu vang nào từ John Anthony Winery.",
    "output": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các loại rượu vang riêng biệt theo thứ tự bảng chữ cái.",
    "output": "SELECT DISTINCT Name FROM WINE ORDER BY Name"
  },
  {
    "instruction": "",
    "input": "Tên của rượu vang, được sắp xếp theo thứ tự bảng chữ cái là gì?",
    "output": "SELECT DISTINCT Name FROM WINE ORDER BY Name"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các loại rượu vang riêng biệt được đặt hàng theo giá.",
    "output": "SELECT DISTINCT Name FROM WINE ORDER BY price"
  },
  {
    "instruction": "",
    "input": "Tên của rượu vang, được sắp xếp theo giá tăng dần là gì?",
    "output": "SELECT DISTINCT Name FROM WINE ORDER BY price"
  },
  {
    "instruction": "",
    "input": "Khu vực của sự xuất hiện tạo ra số lượng rượu vang cao nhất trước năm 2010 là gì?",
    "output": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Khu vực cho sự xuất hiện sản xuất nhiều rượu vang nhất trước năm 2010 là gì?",
    "output": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Màu sắc của nho có sản phẩm rượu vang có giá trung bình cao nhất là gì?",
    "output": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cho màu của nho có sản phẩm rượu vang có giá trung bình cao nhất?",
    "output": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm các tên riêng biệt của rượu vang được sản xuất trước năm 2000 hoặc sau năm 2010.",
    "output": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010"
  },
  {
    "instruction": "",
    "input": "Đặt tên riêng biệt của rượu vang được thực hiện trước năm 2000 hoặc sau năm 2010.",
    "output": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010"
  },
  {
    "instruction": "",
    "input": "Tìm nhà máy rượu vang riêng biệt có giá từ 50 đến 100.",
    "output": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100"
  },
  {
    "instruction": "",
    "input": "Các nhà máy rượu riêng biệt sản xuất rượu vang có giá từ 50 đến 100 là gì?",
    "output": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100"
  },
  {
    "instruction": "",
    "input": "Giá trung bình và trường hợp rượu vang được sản xuất trong năm 2009 và làm từ nho Zinfandel là gì?",
    "output": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\""
  },
  {
    "instruction": "",
    "input": "Cung cấp giá trung bình và trường hợp rượu vang làm từ nho Zinfandel trong năm 2009.",
    "output": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\""
  },
  {
    "instruction": "",
    "input": "Giá tối đa và điểm của rượu vang được sản xuất bởi tên gọi St. Helena là bao nhiêu?",
    "output": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\""
  },
  {
    "instruction": "",
    "input": "Cung cấp giá tối đa và điểm cho các loại rượu vang được sản xuất tại Appelation St. Helena.",
    "output": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\""
  },
  {
    "instruction": "",
    "input": "Giá tối đa và điểm của rượu vang mỗi năm là bao nhiêu?",
    "output": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR"
  },
  {
    "instruction": "",
    "input": "Giá tối đa và điểm của rượu vang cho mỗi năm là bao nhiêu?",
    "output": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR"
  },
  {
    "instruction": "",
    "input": "Giá trung bình và điểm của rượu vang được nhóm lại bởi tên gọi là gì?",
    "output": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation"
  },
  {
    "instruction": "",
    "input": "Giá trung bình và điểm của rượu vang cho mỗi tên gọi là gì?",
    "output": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation"
  },
  {
    "instruction": "",
    "input": "Tìm các nhà máy rượu có ít nhất bốn loại rượu vang.",
    "output": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4"
  },
  {
    "instruction": "",
    "input": "Nhà máy rượu nào sản xuất ít nhất bốn loại rượu vang?",
    "output": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4"
  },
  {
    "instruction": "",
    "input": "Tìm đất nước của tất cả các cấp tăng có tối đa ba loại rượu vang.",
    "output": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3"
  },
  {
    "instruction": "",
    "input": "Các quốc gia cho các loại thuốc có tối đa 3 rượu vang là gì?",
    "output": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3"
  },
  {
    "instruction": "",
    "input": "Tên của các loại rượu vang có năm sản xuất là gì trước năm của tất cả các loại rượu vang của rượu vang Brander là gì?",
    "output": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")"
  },
  {
    "instruction": "",
    "input": "Tên của rượu vang được sản xuất trước bất kỳ loại rượu vang nào từ nhà máy rượu Brander là gì?",
    "output": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")"
  },
  {
    "instruction": "",
    "input": "Tên của các loại rượu vang đắt hơn thì tất cả các loại rượu vang được sản xuất vào năm 2006 là gì?",
    "output": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)"
  },
  {
    "instruction": "",
    "input": "Đặt tên của rượu vang với giá trên bất kỳ loại rượu nào được sản xuất vào năm 2006.",
    "output": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)"
  },
  {
    "instruction": "",
    "input": "Tìm 3 nhà máy rượu vang hàng đầu với số lượng rượu vang lớn nhất làm từ nho màu trắng.",
    "output": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"White\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "3 nhà máy rượu vang nào sản xuất nhiều loại rượu vang được làm từ nho trắng?",
    "output": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"White\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Liệt kê nho, nhà máy rượu và năm của các loại rượu vang có giá lớn hơn 100 lần được đặt hàng theo năm.",
    "output": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR"
  },
  {
    "instruction": "",
    "input": "Nho, nhà máy rượu vang và năm cho rượu vang có giá cao hơn 100, được sắp xếp theo năm?",
    "output": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR"
  },
  {
    "instruction": "",
    "input": "Liệt kê các loại nho, sự áp dụng và tên của các loại rượu vang có điểm cao hơn 93 được đặt hàng theo tên.",
    "output": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name"
  },
  {
    "instruction": "",
    "input": "Các loại nho, táo và rượu vang với điểm số trên 93, được sắp xếp theo tên là gì?",
    "output": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name"
  },
  {
    "instruction": "",
    "input": "Tìm các loại thuốc sản xuất rượu vang sau năm 2008 nhưng không phải ở khu vực Central Coast.",
    "output": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\""
  },
  {
    "instruction": "",
    "input": "Các loại rượu cho rượu vang được sản xuất sau năm 2008 nhưng không phải ở khu vực Central Coast là gì?",
    "output": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\""
  },
  {
    "instruction": "",
    "input": "Tìm giá trung bình của rượu vang không được sản xuất từ ​​Hạt Sonoma.",
    "output": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')"
  },
  {
    "instruction": "",
    "input": "Giá trung bình cho rượu vang không được sản xuất tại Hạt Sonoma là bao nhiêu?",
    "output": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')"
  },
  {
    "instruction": "",
    "input": "Tìm quận nơi sản xuất số lượng rượu vang nhiều nhất với điểm cao hơn 90.",
    "output": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Quận sản xuất nhiều loại rượu vang cao nhất đạt được cao hơn 90 là gì?",
    "output": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu ga tàu?",
    "output": "SELECT count(*) FROM station"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, vị trí và số lượng nền tảng cho tất cả các trạm.",
    "output": "SELECT name ,  LOCATION ,  number_of_platforms FROM station"
  },
  {
    "instruction": "",
    "input": "Tất cả các địa điểm của các ga tàu là gì?",
    "output": "SELECT DISTINCT LOCATION FROM station"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và tổng số hành khách cho tất cả các ga tàu không ở London.",
    "output": "SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và dịch vụ chính cho các ga xe lửa có tổng số hành khách hàng đầu.",
    "output": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3"
  },
  {
    "instruction": "",
    "input": "Tổng số trung bình và tối đa của tổng số hành khách cho các ga tàu ở London hoặc Glasgow là bao nhiêu?",
    "output": "SELECT avg(total_passengers) ,  max(total_passengers) FROM station WHERE LOCATION  =  'London' OR LOCATION  =  'Glasgow'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các địa điểm và tổng số nền tảng và hành khách cho tất cả các ga tàu ở mỗi địa điểm.",
    "output": "SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các địa điểm có các ga xe lửa với ít nhất 15 nền tảng và ga xe lửa với hơn 25 tổng số hành khách.",
    "output": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các địa điểm không có ga xe lửa với ít nhất 15 nền tảng.",
    "output": "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15"
  },
  {
    "instruction": "",
    "input": "Hiển thị vị trí với hầu hết các ga tàu.",
    "output": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, thời gian và dịch vụ cho tất cả các chuyến tàu.",
    "output": "SELECT name ,  TIME ,  service FROM train"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng tàu",
    "output": "SELECT count(*) FROM train"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và dịch vụ cho tất cả các chuyến tàu theo thứ tự theo thời gian.",
    "output": "SELECT name ,  service FROM train ORDER BY TIME"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên nhà ga và số lượng tàu trong mỗi nhà ga.",
    "output": "SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên tàu và tên trạm cho mỗi chuyến tàu.",
    "output": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên tàu và thời gian trong các trạm ở London theo thứ tự giảm dần theo thời gian tàu hỏa.",
    "output": "SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  'London' ORDER BY T3.time DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên nhà ga với số lượng lớn nhất của các chuyến tàu.",
    "output": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên nhà ga với ít nhất hai chuyến tàu.",
    "output": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các địa điểm chỉ có 1 trạm.",
    "output": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên trạm mà không có bất kỳ chuyến tàu nào.",
    "output": "SELECT name FROM station WHERE station_id NOT IN (SELECT station_id FROM train_station)"
  },
  {
    "instruction": "",
    "input": "Tên của các trạm phục vụ cả các chuyến tàu \"Ananthapuri Express\" và \"Guruvayur Express\" là gì?",
    "output": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Ananthapuri Express\" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Guruvayur Express\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các chuyến tàu không đi qua bất kỳ nhà ga nào ở London.",
    "output": "SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id  =  T2.train_id WHERE T1.station_id NOT IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id  =  T4.station_id WHERE t4.location  =  \"London\")"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tên và vị trí của tất cả các trạm được đặt hàng bởi số tiền xuất nhập và trao đổi hàng năm của họ.",
    "output": "SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả ID xe",
    "output": "SELECT vehicle_id FROM Vehicles;"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các phương tiện là gì?",
    "output": "SELECT vehicle_id FROM Vehicles;"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu phương tiện?",
    "output": "SELECT count(*) FROM Vehicles;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu phương tiện tồn tại?",
    "output": "SELECT count(*) FROM Vehicles;"
  },
  {
    "instruction": "",
    "input": "Hiển thị chi tiết của xe với ID 1.",
    "output": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;"
  },
  {
    "instruction": "",
    "input": "Các chi tiết của chiếc xe với ID 1 là gì?",
    "output": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên đầu tiên và họ của tất cả nhân viên.",
    "output": "SELECT first_name ,  middle_name ,  last_name FROM Staff;"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên, giữa và cuối cùng của tất cả nhân viên là gì?",
    "output": "SELECT first_name ,  middle_name ,  last_name FROM Staff;"
  },
  {
    "instruction": "",
    "input": "Sinh nhật của các nhân viên với tên đầu tiên là Janessa và họ là Sawayn là gì?",
    "output": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Ngày sinh của nhân viên tên là Janessa Sawayn là gì?",
    "output": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Khi nào nhân viên có tên đầu tiên là Janessa và họ khi Sawayn gia nhập công ty?",
    "output": "SELECT date_joined_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Khi nào nhân viên tên Janessa Sawayn gia nhập công ty?",
    "output": "SELECT date_joined_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Khi nào nhân viên có tên đầu tiên là Janessa và họ khi Sawayn rời khỏi công ty?",
    "output": "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Khi nào nhân viên Janessa Sawayn rời khỏi công ty?",
    "output": "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhân viên có tên đầu tiên Ludie?",
    "output": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhân viên có tên đầu tiên của Ludie?",
    "output": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";"
  },
  {
    "instruction": "",
    "input": "Biệt danh của nhân viên với tên đầu tiên là Janessa và họ là Sawayn là gì?",
    "output": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Biệt danh của nhân viên tên là Janessa Sawayn là gì?",
    "output": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu nhân viên?",
    "output": "SELECT count(*) FROM Staff;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhân viên?",
    "output": "SELECT count(*) FROM Staff;"
  },
  {
    "instruction": "",
    "input": "Nhân viên có tên đầu tiên là Janessa và họ như Sawayn Live?",
    "output": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Janessa Sawayn sống ở thành phố nào?",
    "output": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Nhân viên nào và nhà nước có tên đầu tiên là Janessa và họ như Sawayn sống?",
    "output": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Janessa Sawayn sống ở quốc gia nào và tiểu bang?",
    "output": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Tổng số bài học của khách hàng mất bao lâu với tên đầu tiên là Rylan và họ là Goodwin?",
    "output": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";"
  },
  {
    "instruction": "",
    "input": "Tổng thời gian tổng số bài học của khách hàng có tên Rylan Goodwin là bao lâu?",
    "output": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";"
  },
  {
    "instruction": "",
    "input": "Mã zip của nhân viên với tên đầu tiên là Janessa và họ như Sawayn sống?",
    "output": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Mã zip của ngôi nhà của nhân viên tên là Janessa Sawayn là gì?",
    "output": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhân viên sống ở bang Georgia?",
    "output": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu nhân viên sống ở Georgia?",
    "output": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";"
  },
  {
    "instruction": "",
    "input": "Tìm hiểu tên và họ của nhân viên sống ở City Damianfort.",
    "output": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\";"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tất cả các nhân viên sống ở thành phố Damianfort là gì?",
    "output": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\";"
  },
  {
    "instruction": "",
    "input": "Thành phố nào sống hầu hết nhân viên?Liệt kê tên thành phố và số lượng nhân viên.",
    "output": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Ở thành phố nào mà nhiều nhân viên sống nhất và có bao nhiêu người trong số họ sống ở đó?",
    "output": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Liệt kê các tiểu bang có từ 2 đến 4 nhân viên sống ở đó.",
    "output": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;"
  },
  {
    "instruction": "",
    "input": "Tên của các tiểu bang có 2 đến 4 nhân viên sống ở đó là gì?",
    "output": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và họ của tất cả khách hàng.",
    "output": "SELECT first_name ,  last_name FROM Customers;"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng cho tất cả khách hàng là gì?",
    "output": "SELECT first_name ,  last_name FROM Customers;"
  },
  {
    "instruction": "",
    "input": "Liệt kê địa chỉ email và sinh nhật của khách hàng có tên đầu tiên là Carole.",
    "output": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\""
  },
  {
    "instruction": "",
    "input": "Các địa chỉ email và ngày sinh cho tất cả các khách hàng có tên là Carole là gì?",
    "output": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\""
  },
  {
    "instruction": "",
    "input": "Liệt kê số điện thoại và địa chỉ email của khách hàng với hơn 2000 số dư chưa thanh toán.",
    "output": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;"
  },
  {
    "instruction": "",
    "input": "Các số điện thoại và địa chỉ email của tất cả các khách hàng có số dư vượt trội hơn 2000 là gì?",
    "output": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;"
  },
  {
    "instruction": "",
    "input": "Mã trạng thái, số điện thoại di động và địa chỉ email của khách hàng có tên cuối cùng là Kohler hoặc tên đầu tiên là Marina?",
    "output": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\""
  },
  {
    "instruction": "",
    "input": "Mã trạng thái, số điện thoại và địa chỉ email của khách hàng có tên cuối cùng là Kohler hoặc tên đầu tiên là Marina?",
    "output": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\""
  },
  {
    "instruction": "",
    "input": "Khi nào sinh nhật của khách hàng được phân loại là tình trạng 'khách hàng tốt'?",
    "output": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'"
  },
  {
    "instruction": "",
    "input": "Ngày sinh của mỗi khách hàng có mã trạng thái là 'khách hàng tốt' là gì?",
    "output": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'"
  },
  {
    "instruction": "",
    "input": "Khi nào khách hàng có tên đầu tiên là Carole và họ khi Bernhard trở thành khách hàng?",
    "output": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";"
  },
  {
    "instruction": "",
    "input": "Carole Bernhard lần đầu tiên trở thành khách hàng khi nào?",
    "output": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";"
  },
  {
    "instruction": "",
    "input": "Tổng cộng có bao nhiêu khách hàng?",
    "output": "SELECT count(*) FROM Customers;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng ở đó?",
    "output": "SELECT count(*) FROM Customers;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các mã trạng thái khách hàng và số lượng khách hàng có mỗi mã trạng thái.",
    "output": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi mã trạng thái khách hàng, có bao nhiêu khách hàng được phân loại theo cách đó?",
    "output": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;"
  },
  {
    "instruction": "",
    "input": "Mã trạng thái khách hàng nào có số lượng khách hàng ít nhất?",
    "output": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Mã trạng thái với số lượng khách hàng ít nhất là gì?",
    "output": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài học của khách hàng với tên đầu tiên là Rylan và họ như Goodwin đã hoàn thành?",
    "output": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Completed\";"
  },
  {
    "instruction": "",
    "input": "Khách hàng Ryan Goodwin đã hoàn thành bao nhiêu bài học?",
    "output": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Completed\";"
  },
  {
    "instruction": "",
    "input": "Số tiền tối đa, tối thiểu và trung bình của khách hàng là bao nhiêu?",
    "output": "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;"
  },
  {
    "instruction": "",
    "input": "Số tiền tối đa, tối thiểu và số tiền trung bình là bao nhiêu cho tất cả khách hàng là bao nhiêu?",
    "output": "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và họ của khách hàng có số tiền chưa thanh toán từ 1000 đến 3000.",
    "output": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tất cả các khách hàng có từ 1000 đến 3000 đô la là gì?",
    "output": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và họ của khách hàng sống ở City Lockmanfurt.",
    "output": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của tất cả các khách hàng sống ở Lockmanfurt là gì?",
    "output": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";"
  },
  {
    "instruction": "",
    "input": "Khách hàng nào có tên đầu tiên là Carole và họ khi Bernhard sống?",
    "output": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\""
  },
  {
    "instruction": "",
    "input": "Quốc gia mà khách hàng Carole Bernhard sống là gì?",
    "output": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\""
  },
  {
    "instruction": "",
    "input": "Mã zip của khách hàng có tên đầu tiên là Carole và họ là Bernhard là gì?",
    "output": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\""
  },
  {
    "instruction": "",
    "input": "Mã zip của khách hàng Carole Bernhard là gì?",
    "output": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\""
  },
  {
    "instruction": "",
    "input": "Thành phố nào có số lượng khách hàng nhất?",
    "output": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Thành phố với nhiều khách hàng nhất là gì?",
    "output": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;"
  },
  {
    "instruction": "",
    "input": "Tổng số khách hàng với tên đầu tiên là Carole và họ như Bernhard đã trả?",
    "output": "SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Carole\" AND T2.last_name = \"Bernhard\""
  },
  {
    "instruction": "",
    "input": "Tổng số tiền mà khách hàng Carol Bernhard trả là bao nhiêu?",
    "output": "SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Carole\" AND T2.last_name = \"Bernhard\""
  },
  {
    "instruction": "",
    "input": "Liệt kê số lượng khách hàng không có bất kỳ lịch sử thanh toán nào.",
    "output": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu khách hàng không có lịch sử thanh toán?",
    "output": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và họ của khách hàng có nhiều hơn 2 khoản thanh toán.",
    "output": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và tên cuối cùng của tất cả khách hàng có hơn 2 khoản thanh toán là gì?",
    "output": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các phương thức thanh toán và số lượng thanh toán bằng mỗi phương thức thanh toán.",
    "output": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi phương thức thanh toán, có bao nhiêu khoản thanh toán được thực hiện?",
    "output": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài học ở trạng thái bị hủy bỏ?",
    "output": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài học đã bị hủy bỏ?",
    "output": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID bài học của tất cả các bài học được dạy bởi các nhân viên có tên đầu tiên là Janessa, họ là Sawayn và biệt danh có chứa chữ 's'.",
    "output": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";"
  },
  {
    "instruction": "",
    "input": "ID bài học của tất cả các nhân viên được giảng dạy bởi Janessa Sawayn có biệt danh có chữ S là gì?",
    "output": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài học được dạy bởi các nhân viên có tên đầu tiên có chữ 'A' trong đó?",
    "output": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài học được dạy bởi một nhân viên có tên đầu tiên có chữ 'A' trong đó?",
    "output": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\""
  },
  {
    "instruction": "",
    "input": "Tổng số bài học được dạy bởi các nhân viên có tên đầu tiên là Janessa và họ như Sawayn?",
    "output": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Tổng thời gian cho tất cả các bài học được giảng dạy bởi Janessa Sawayn là bao nhiêu?",
    "output": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Giá bài học trung bình được dạy bởi các nhân viên với tên đầu tiên là Janessa và họ là Sawayn là gì?",
    "output": "SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Giá trung bình cho một bài học được dạy bởi Janessa Sawayn là bao nhiêu?",
    "output": "SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"
  },
  {
    "instruction": "",
    "input": "Khách hàng có tên Ray đã học bao nhiêu bài học?",
    "output": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Ray\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu bài học mà khách hàng với tên đầu tiên Ray lấy?",
    "output": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Ray\""
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng được sử dụng bởi khách hàng và nhân viên?",
    "output": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff"
  },
  {
    "instruction": "",
    "input": "Tên cuối cùng được sử dụng bởi khách hàng và nhân viên là gì?",
    "output": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của các nhân viên không cho bất kỳ bài học nào?",
    "output": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của tất cả các nhân viên không đưa ra bất kỳ bài học nào?",
    "output": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id"
  },
  {
    "instruction": "",
    "input": "ID và chi tiết của chiếc xe được sử dụng trong các bài học trong hầu hết thời gian là gì?",
    "output": "SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu giảng viên?",
    "output": "SELECT count(*) FROM Faculty"
  },
  {
    "instruction": "",
    "input": "Tổng số giảng viên là bao nhiêu?",
    "output": "SELECT count(*) FROM Faculty"
  },
  {
    "instruction": "",
    "input": "Chúng ta có những thứ hạng nào cho giảng viên?",
    "output": "SELECT DISTINCT rank FROM Faculty"
  },
  {
    "instruction": "",
    "input": "Tìm danh sách các cấp bậc riêng biệt cho giảng viên.",
    "output": "SELECT DISTINCT rank FROM Faculty"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tòa nhà riêng biệt có phòng giảng viên.",
    "output": "SELECT DISTINCT building FROM Faculty"
  },
  {
    "instruction": "",
    "input": "Những tòa nhà có văn phòng giảng viên nào?",
    "output": "SELECT DISTINCT building FROM Faculty"
  },
  {
    "instruction": "",
    "input": "Hiển thị thứ hạng, tên và họ cho tất cả các giảng viên.",
    "output": "SELECT rank ,  Fname ,  Lname FROM Faculty"
  },
  {
    "instruction": "",
    "input": "Thứ hạng, tên và họ của các giảng viên là gì?",
    "output": "SELECT rank ,  Fname ,  Lname FROM Faculty"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên, họ và số điện thoại cho tất cả các giảng viên nữ.",
    "output": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'"
  },
  {
    "instruction": "",
    "input": "Tên, họ và số điện thoại của tất cả các nữ giảng viên là gì?",
    "output": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID cho tất cả các giảng viên nam.",
    "output": "SELECT FacID FROM Faculty WHERE Sex  =  'M'"
  },
  {
    "instruction": "",
    "input": "ID giảng viên của tất cả các giảng viên nam là gì?",
    "output": "SELECT FacID FROM Faculty WHERE Sex  =  'M'"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu nữ giáo sư?",
    "output": "SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng giáo sư nữ chúng tôi có.",
    "output": "SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\""
  },
  {
    "instruction": "",
    "input": "Hiển thị điện thoại, phòng và tòa nhà cho các giảng viên tên là Jerry Prince.",
    "output": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\""
  },
  {
    "instruction": "",
    "input": "Điện thoại, phòng và tòa nhà của giảng viên tên là Jerry Prince là gì?",
    "output": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\""
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giáo sư đang xây dựng neb?",
    "output": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\""
  },
  {
    "instruction": "",
    "input": "Đếm số lượng giáo sư có văn phòng xây dựng NEB.",
    "output": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và họ cho tất cả các giảng viên.",
    "output": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\""
  },
  {
    "instruction": "",
    "input": "Tên và họ của tất cả các giảng viên là gì?",
    "output": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tòa nhà cùng với số lượng giảng viên mà các tòa nhà có.",
    "output": "SELECT building ,  count(*) FROM Faculty GROUP BY building"
  },
  {
    "instruction": "",
    "input": "Mỗi tòa nhà có bao nhiêu giảng viên?Liệt kê kết quả với tên của tòa nhà.",
    "output": "SELECT building ,  count(*) FROM Faculty GROUP BY building"
  },
  {
    "instruction": "",
    "input": "Tòa nhà nào có hầu hết các giảng viên?",
    "output": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tòa nhà có số lượng giảng viên lớn nhất.",
    "output": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tòa nhà có ít nhất 10 giáo sư.",
    "output": "SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10"
  },
  {
    "instruction": "",
    "input": "Trong những tòa nhà nào có ít nhất mười giáo sư?",
    "output": "SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi cấp bậc giảng viên, hãy hiển thị số lượng giảng viên có nó.",
    "output": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank"
  },
  {
    "instruction": "",
    "input": "Chúng tôi có bao nhiêu giảng viên cho mỗi cấp bậc giảng viên?",
    "output": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các cấp bậc và số lượng giảng viên nam và nữ cho mỗi cấp bậc.",
    "output": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu giảng viên cho mỗi cấp bậc và giới tính?",
    "output": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex"
  },
  {
    "instruction": "",
    "input": "Thứ hạng nào có số lượng giảng viên nhỏ nhất?",
    "output": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm thứ hạng giảng viên có ít thành viên nhất.",
    "output": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị số lượng giáo sư trợ lý nam và nữ.",
    "output": "SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"AsstProf\" GROUP BY sex"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu giáo sư nam và nữ?",
    "output": "SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"AsstProf\" GROUP BY sex"
  },
  {
    "instruction": "",
    "input": "Tên và họ của cố vấn của Linda Smith là gì?",
    "output": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\""
  },
  {
    "instruction": "",
    "input": "Ai là cố vấn của Linda Smith?Cho tôi tên và họ.",
    "output": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\""
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của các sinh viên có cố vấn là giáo sư.",
    "output": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\""
  },
  {
    "instruction": "",
    "input": "Học sinh nào có giáo sư làm cố vấn của họ?Tìm id sinh viên của họ.",
    "output": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên và họ cho tất cả các sinh viên được Michael Goodrich tư vấn.",
    "output": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\""
  },
  {
    "instruction": "",
    "input": "Những sinh viên nào được Michael Goodrich khuyên?Cho tôi họ và họ của họ.",
    "output": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\""
  },
  {
    "instruction": "",
    "input": "Hiển thị ID giảng viên của mỗi giảng viên, cùng với số lượng sinh viên mà anh ấy hoặc cô ấy khuyên.",
    "output": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID"
  },
  {
    "instruction": "",
    "input": "ID giảng viên là gì và số lượng sinh viên mỗi giảng viên có?",
    "output": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các cấp bậc giảng viên và số lượng sinh viên được tư vấn bởi mỗi cấp bậc.",
    "output": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sinh viên được thông báo bởi mỗi cấp bậc của giảng viên?Liệt kê thứ hạng và số lượng sinh viên.",
    "output": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của các giảng viên có nhiều sinh viên nhất là gì?",
    "output": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Cho tôi biết tên đầu tiên và cuối cùng của các giảng viên tư vấn cho nhiều sinh viên nhất.",
    "output": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị IDS cho tất cả các giảng viên có ít nhất 2 sinh viên.",
    "output": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Giảng viên nào tư vấn cho hai quặng thêm sinh viên?Hãy cho tôi ID giảng viên của họ.",
    "output": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID cho các giảng viên không tư vấn cho bất kỳ sinh viên nào.",
    "output": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student"
  },
  {
    "instruction": "",
    "input": "ID của các giảng viên không tư vấn cho bất kỳ sinh viên nào.",
    "output": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student"
  },
  {
    "instruction": "",
    "input": "Chúng ta có những hoạt động nào?",
    "output": "SELECT activity_name FROM Activity"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các hoạt động chúng tôi có.",
    "output": "SELECT activity_name FROM Activity"
  },
  {
    "instruction": "",
    "input": "Chúng ta có bao nhiêu hoạt động?",
    "output": "SELECT count(*) FROM Activity"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng hoạt động có sẵn.",
    "output": "SELECT count(*) FROM Activity"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giảng viên tham gia vào một hoạt động?",
    "output": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in"
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi số lượng giảng viên tham gia vào một hoạt động",
    "output": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của các giảng viên không tham gia vào bất kỳ hoạt động nào.",
    "output": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in"
  },
  {
    "instruction": "",
    "input": "Khoa nào không tham gia vào bất kỳ hoạt động nào?Tìm ID giảng viên của họ.",
    "output": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của tất cả các giảng viên tham gia vào một hoạt động và tư vấn cho một sinh viên.",
    "output": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student"
  },
  {
    "instruction": "",
    "input": "ID của các giảng viên không chỉ tham gia vào một hoạt động mà còn tư vấn cho một sinh viên.",
    "output": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student"
  },
  {
    "instruction": "",
    "input": "Mark Giuliano tham gia có bao nhiêu hoạt động?",
    "output": "SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\""
  },
  {
    "instruction": "",
    "input": "Tìm số lượng hoạt động Mark Giuliano có liên quan.",
    "output": "SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\""
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của tất cả các hoạt động Mark Giuliano tham gia.",
    "output": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\""
  },
  {
    "instruction": "",
    "input": "Tên của các hoạt động mà Mark Giuliano có liên quan đến",
    "output": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\""
  },
  {
    "instruction": "",
    "input": "Hiển thị họ và họ của tất cả các giảng viên đã tham gia vào một số hoạt động, cùng với số lượng hoạt động họ tham gia.",
    "output": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID"
  },
  {
    "instruction": "",
    "input": "Họ và họ của các giảng viên đã tham gia ít nhất một hoạt động là gì?Đối với mỗi người trong số họ, cũng cho thấy số lượng hoạt động họ tham gia.",
    "output": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên hoạt động và số lượng giảng viên tham gia vào mỗi hoạt động.",
    "output": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu giảng viên tham gia vào mỗi hoạt động?Trả lại tên hoạt động và số lượng giảng viên.",
    "output": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của các giảng viên tham gia vào các hoạt động nhiều nhất là gì?",
    "output": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm họ và họ của các giảng viên có liên quan đến số lượng hoạt động lớn nhất.",
    "output": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của hoạt động có nhiều giảng viên nhất tham gia là gì?",
    "output": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những hoạt động nào có nhiều giảng viên nhất tham gia?Tìm tên hoạt động.",
    "output": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID của các sinh viên không tham gia vào bất kỳ hoạt động nào.",
    "output": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in"
  },
  {
    "instruction": "",
    "input": "ID của các sinh viên không tham gia vào bất kỳ hoạt động nào",
    "output": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in"
  },
  {
    "instruction": "",
    "input": "Hiển thị ID cho tất cả các sinh viên tham gia vào một hoạt động và dưới 20 tuổi.",
    "output": "SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20"
  },
  {
    "instruction": "",
    "input": "ID của các sinh viên dưới 20 tuổi là gì và có liên quan đến ít nhất một hoạt động.",
    "output": "SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên và cuối cùng của học sinh tham gia vào các hoạt động nhiều nhất là gì?",
    "output": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi biết tên đầu tiên và cuối cùng của học sinh có nhiều hoạt động nhất.",
    "output": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của hoạt động với nhiều sinh viên nhất là gì?",
    "output": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của hoạt động có số lượng người tham gia sinh viên lớn nhất.",
    "output": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của các giảng viên đang chơi chèo thuyền hoặc chèo thuyền kayak.",
    "output": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'"
  },
  {
    "instruction": "",
    "input": "Những giảng viên nào đang chơi chèo thuyền hoặc chèo thuyền kayak?Cho tôi biết tên đầu tiên của họ.",
    "output": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của các giáo sư không chơi chèo thuyền hoặc chèo thuyền kayak.",
    "output": "SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của các giáo sư không chơi chèo thuyền hay chèo thuyền kayak là hoạt động là gì?",
    "output": "SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'"
  },
  {
    "instruction": "",
    "input": "Tìm tên đầu tiên của các giảng viên tham gia chèo thuyền và chèo thuyền kayak.",
    "output": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'"
  },
  {
    "instruction": "",
    "input": "Tên đầu tiên của các giảng viên chơi cả ca nô và chèo thuyền kayak là gì?",
    "output": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'"
  },
  {
    "instruction": "",
    "input": "Tìm ID của các sinh viên tham gia chèo thuyền và chèo thuyền kayak.",
    "output": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'"
  },
  {
    "instruction": "",
    "input": "Những sinh viên nào tham gia vào cả chèo thuyền và chèo thuyền kayak như hoạt động của họ?Hãy cho tôi biết ID sinh viên của họ.",
    "output": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của sân bay ở thành phố Goroka.",
    "output": "SELECT name FROM airports WHERE city  =  'Goroka'"
  },
  {
    "instruction": "",
    "input": "Tên của các sân bay ở thành phố Goroka là gì?",
    "output": "SELECT name FROM airports WHERE city  =  'Goroka'"
  },
  {
    "instruction": "",
    "input": "Tìm tên, thành phố, quốc gia và độ cao (hoặc độ cao) của các sân bay ở thành phố New York.",
    "output": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'"
  },
  {
    "instruction": "",
    "input": "Tên, thành phố, quốc gia và độ cao cho mọi sân bay ở thành phố New York là gì?",
    "output": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu hãng hàng không?",
    "output": "SELECT count(*) FROM airlines"
  },
  {
    "instruction": "",
    "input": "Tổng số các hãng hàng không là bao nhiêu?",
    "output": "SELECT count(*) FROM airlines"
  },
  {
    "instruction": "",
    "input": "Nga có bao nhiêu hãng hàng không?",
    "output": "SELECT count(*) FROM airlines WHERE country  =  'Russia'"
  },
  {
    "instruction": "",
    "input": "Số lượng các hãng hàng không có trụ sở tại Nga là bao nhiêu?",
    "output": "SELECT count(*) FROM airlines WHERE country  =  'Russia'"
  },
  {
    "instruction": "",
    "input": "Độ cao tối đa của tất cả các sân bay ở quốc gia Iceland là bao nhiêu?",
    "output": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'"
  },
  {
    "instruction": "",
    "input": "Độ cao cao nhất của một sân bay ở đất nước Iceland là bao nhiêu?",
    "output": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sân bay nằm ở Cuba hoặc Argentina.",
    "output": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các sân bay ở Cuba hoặc Argentina là gì?",
    "output": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'"
  },
  {
    "instruction": "",
    "input": "Tìm đất nước của các hãng hàng không có tên bắt đầu bằng 'quỹ đạo'.",
    "output": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'"
  },
  {
    "instruction": "",
    "input": "Các quốc gia của tất cả các hãng hàng không có tên bắt đầu bằng quỹ đạo là gì?",
    "output": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các sân bay có độ cao là từ -50 đến 50.",
    "output": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các sân bay có độ cao từ -50 đến 50 là gì?",
    "output": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50"
  },
  {
    "instruction": "",
    "input": "Sân bay có độ cao cao nhất ở nước nào?",
    "output": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đất nước của sân bay có độ cao cao nhất là gì?",
    "output": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng sân bay có tên chứa từ 'quốc tế'.",
    "output": "SELECT count(*) FROM airports WHERE name LIKE '%International%'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tên sân bay có từ xen kẽ trong đó?",
    "output": "SELECT count(*) FROM airports WHERE name LIKE '%International%'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành phố khác nhau có một số sân bay ở đất nước Greenland?",
    "output": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành phố có sân bay ở đất nước Greenland?",
    "output": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tuyến đường được vận hành bởi American Airlines.",
    "output": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'"
  },
  {
    "instruction": "",
    "input": "American Airlines hoạt động có bao nhiêu tuyến?",
    "output": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tuyến đường có sân bay đích ở Canada.",
    "output": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tuyến kết thúc tại một sân bay Canada?",
    "output": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'"
  },
  {
    "instruction": "",
    "input": "Tìm tên, thành phố và đất nước của sân bay có độ cao thấp nhất.",
    "output": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên, thành phố và đất nước của sân bay có độ cao thấp nhất là gì?",
    "output": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên, thành phố và quốc gia của sân bay có vĩ độ cao nhất.",
    "output": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên, thành phố và đất nước của sân bay với độ cao cao nhất là gì?",
    "output": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên và thành phố của sân bay là điểm đến của số lượng tuyến đường nhiều nhất.",
    "output": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và thành phố của sân bay mà các tuyến đường nhiều nhất kết thúc là gì?",
    "output": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của 10 hãng hàng không hàng đầu vận hành số lượng tuyến đường nhiều nhất.",
    "output": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10"
  },
  {
    "instruction": "",
    "input": "Đối với ID của hãng hàng không với 10 tuyến đường hàng đầu được vận hành, tên của họ là gì?",
    "output": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10"
  },
  {
    "instruction": "",
    "input": "Tìm tên và thành phố của sân bay là nguồn cho số lượng chuyến bay nhất.",
    "output": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên và thành phố của sân bay từ hầu hết các tuyến đường bắt đầu là gì?",
    "output": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng các sân bay khác nhau là điểm đến của American Airlines.",
    "output": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'"
  },
  {
    "instruction": "",
    "input": "Số lượng các sân bay khác nhau là điểm đến cho American Airlines là bao nhiêu?",
    "output": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'"
  },
  {
    "instruction": "",
    "input": "Những quốc gia nào có số lượng hãng hàng không nhiều nhất?",
    "output": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của đất nước với số lượng hãng hàng không gia đình nhiều nhất là gì?",
    "output": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Những quốc gia nào có số lượng hãng hàng không nhất có tình trạng hoạt động là 'Y'?",
    "output": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Các quốc gia có hầu hết các hãng hàng không có tình trạng tích cực là y là gì?",
    "output": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các quốc gia và số lượng hãng hàng không của họ theo thứ tự giảm dần số lượng hãng hàng không.",
    "output": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu hãng hàng không hoạt động ra khỏi mỗi quốc gia theo thứ tự giảm dần?",
    "output": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sân bay trên mỗi quốc gia?Đặt hàng các quốc gia bằng cách giảm số lượng sân bay.",
    "output": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC"
  },
  {
    "instruction": "",
    "input": "Số lượng sân bay trên mỗi quốc gia, được đặt hàng từ hầu hết đến nhất là bao nhiêu?",
    "output": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sân bay cho mỗi thành phố ở Hoa Kỳ?Đặt hàng các thành phố bằng cách giảm số lượng sân bay.",
    "output": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu sân bay trên mỗi thành phố ở Mỹ được đặt hàng từ hầu hết đến ít nhất?",
    "output": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC"
  },
  {
    "instruction": "",
    "input": "Trả lại các thành phố với hơn 3 sân bay ở Hoa Kỳ.",
    "output": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3"
  },
  {
    "instruction": "",
    "input": "Số lượng thành phố ở Hoa Kỳ với hơn 3 sân bay là bao nhiêu?",
    "output": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu thành phố có hơn 3 sân bay?",
    "output": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)"
  },
  {
    "instruction": "",
    "input": "Số lượng các thành phố với hơn 3 sân bay là gì?",
    "output": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)"
  },
  {
    "instruction": "",
    "input": "Liệt kê các thành phố có nhiều hơn một sân bay và số lượng sân bay.",
    "output": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Tên của tất cả các thành phố có nhiều hơn một sân bay và họ có bao nhiêu sân bay?",
    "output": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1"
  },
  {
    "instruction": "",
    "input": "Liệt kê các thành phố có hơn 2 sân bay được sắp xếp theo số lượng sân bay.",
    "output": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)"
  },
  {
    "instruction": "",
    "input": "Các thành phố có nhiều hơn 2 sân bay được sắp xếp theo số lượng sân bay là gì?",
    "output": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tuyến đường cho mỗi sân bay nguồn và tên sân bay.",
    "output": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi tên sân bay, có bao nhiêu tuyến bắt đầu tại sân bay đó?",
    "output": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tuyến đường và tên sân bay cho mỗi sân bay nguồn, đặt hàng kết quả bằng cách giảm số lượng tuyến đường.",
    "output": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi tên sân bay, có bao nhiêu tuyến bắt đầu tại sân bay đó, được đặt hàng từ hầu hết đến ít nhất?",
    "output": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC"
  },
  {
    "instruction": "",
    "input": "Tìm độ cao trung bình của tất cả các sân bay cho mỗi quốc gia.",
    "output": "SELECT avg(elevation) ,  country FROM airports GROUP BY country"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi quốc gia, độ cao trung bình của các sân bay của quốc gia đó là gì?",
    "output": "SELECT avg(elevation) ,  country FROM airports GROUP BY country"
  },
  {
    "instruction": "",
    "input": "Tìm các thành phố có chính xác hai sân bay.",
    "output": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2"
  },
  {
    "instruction": "",
    "input": "Các thành phố với chính xác hai sân bay là gì?",
    "output": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi quốc gia và tên hàng không, có bao nhiêu tuyến đường?",
    "output": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name"
  },
  {
    "instruction": "",
    "input": "Tổng số tuyến đường cho mỗi quốc gia và hãng hàng không ở quốc gia đó là bao nhiêu?",
    "output": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tuyến đường với các sân bay đích ở Ý.",
    "output": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'"
  },
  {
    "instruction": "",
    "input": "Số lượng các tuyến đường có điểm đến là sân bay Ý là bao nhiêu?",
    "output": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'"
  },
  {
    "instruction": "",
    "input": "Trả lại số lượng tuyến đường với sân bay đích ở Ý do hãng hàng không vận hành với tên 'American Airlines'.",
    "output": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'"
  },
  {
    "instruction": "",
    "input": "Số lượng các tuyến đường được vận hành bởi các hãng hàng không của hãng hàng không có điểm đến ở Ý là bao nhiêu?",
    "output": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tuyến đường có Sân bay Quốc tế John F Kennedy.",
    "output": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'"
  },
  {
    "instruction": "",
    "input": "Số lượng tuyến đường kết thúc tại Sân bay Quốc tế John F Kennedy là bao nhiêu?",
    "output": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'"
  },
  {
    "instruction": "",
    "input": "Tìm số lượng tuyến đường từ Hoa Kỳ đến Canada.",
    "output": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu tuyến đi từ Hoa Kỳ đến Canada?",
    "output": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')"
  },
  {
    "instruction": "",
    "input": "Tìm ID của các tuyến đường có các sân bay nguồn và điểm đến ở Hoa Kỳ.",
    "output": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')"
  },
  {
    "instruction": "",
    "input": "ID của các tuyến đường có nguồn và sân bay đích ở Hoa Kỳ là gì?",
    "output": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')"
  },
  {
    "instruction": "",
    "input": "Tìm tên của hãng hàng không chạy số lượng tuyến đường nhiều nhất.",
    "output": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của hãng hàng không có nhiều tuyến nhất là gì?",
    "output": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm sân bay nguồn bận rộn nhất chạy số lượng tuyến đường ở Trung Quốc.",
    "output": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của sân bay với số lượng tuyến đường bắt đầu ở Trung Quốc là gì?",
    "output": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm sân bay đích đến bận rộn nhất chạy số lượng tuyến đường ở Trung Quốc.",
    "output": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của sân bay là điểm đến của số lượng tuyến đường bắt đầu ở Trung Quốc là gì?",
    "output": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID của đơn đặt hàng gần đây nhất là gì?",
    "output": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID của đơn đặt hàng gần đây nhất.",
    "output": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID đặt hàng và ID khách hàng của đơn đặt hàng lâu đời nhất là gì?",
    "output": "SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID đặt hàng và ID khách hàng được liên kết với đơn đặt hàng lâu đời nhất.",
    "output": "SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID của đơn đặt hàng có số theo dõi lô hàng là \"3452\".",
    "output": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\""
  },
  {
    "instruction": "",
    "input": "Số theo dõi lô hàng của đơn hàng là \"3452\"?Hãy cho tôi ID của đơn đặt hàng.",
    "output": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\""
  },
  {
    "instruction": "",
    "input": "Tìm ID của tất cả các mục đặt hàng có ID sản phẩm là 11.",
    "output": "SELECT order_item_id FROM order_items WHERE product_id = 11"
  },
  {
    "instruction": "",
    "input": "Tìm tất cả các mục đặt hàng có ID sản phẩm là 11. ID mục đặt hàng là gì?",
    "output": "SELECT order_item_id FROM order_items WHERE product_id = 11"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các khách hàng riêng biệt có đơn đặt hàng có trạng thái \"đóng gói\".",
    "output": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\""
  },
  {
    "instruction": "",
    "input": "Những khách hàng nào có đơn đặt hàng với tình trạng \"đóng gói\"?Cho tôi tên khách hàng.",
    "output": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\""
  },
  {
    "instruction": "",
    "input": "Tìm chi tiết của tất cả các khách hàng riêng biệt có đơn đặt hàng có trạng thái \"trên đường\".",
    "output": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\""
  },
  {
    "instruction": "",
    "input": "Những khách hàng riêng biệt có đơn đặt hàng với tình trạng \"trên đường\" là gì?Cung cấp cho tôi chi tiết khách hàng?",
    "output": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\""
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng có nhiều đơn đặt hàng nhất là gì?",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Khách hàng nào đã đặt hàng nhiều nhất?Tìm tên khách hàng.",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID khách hàng của khách hàng có nhiều đơn đặt hàng nhất là gì?",
    "output": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm ID của khách hàng đã thực hiện nhiều đơn đặt hàng nhất.",
    "output": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hãy cho tôi một danh sách ID và trạng thái của các đơn đặt hàng thuộc về khách hàng có tên là \"Jeramie\".",
    "output": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\""
  },
  {
    "instruction": "",
    "input": "Những đơn đặt hàng nào được thực hiện bởi khách hàng có tên là \"Jeramie\"?Cho tôi ID đặt hàng và trạng thái.",
    "output": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\""
  },
  {
    "instruction": "",
    "input": "Tìm ngày của các đơn đặt hàng thuộc về khách hàng có tên là \"Jeramie\".",
    "output": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\""
  },
  {
    "instruction": "",
    "input": "Ngày của các đơn đặt hàng được thực hiện bởi khách hàng có tên là \"Jeramie\" là gì?",
    "output": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\""
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi tên của những khách hàng đã đặt hàng trong khoảng thời gian từ 2009-01-01 và 2010-01-01.",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\""
  },
  {
    "instruction": "",
    "input": "Những khách hàng nào đã đặt hàng trong khoảng thời gian từ 2009-01-01 và 2010-01-01?Tìm tên của họ.",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\""
  },
  {
    "instruction": "",
    "input": "Cung cấp cho tôi một danh sách các ID sản phẩm riêng biệt từ các đơn đặt hàng được đặt trong khoảng thời gian từ 1975-01-01 và 1976-01-01?",
    "output": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\""
  },
  {
    "instruction": "",
    "input": "ID riêng biệt của các sản phẩm được đặt hàng trong khoảng thời gian từ 1975-01-01 và 1976-01-01 ??",
    "output": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\""
  },
  {
    "instruction": "",
    "input": "Tìm tên của các khách hàng có trạng thái đặt hàng cả \"trên đường\" và \"vận chuyển\".",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\""
  },
  {
    "instruction": "",
    "input": "Những khách hàng nào có cả \"trên đường\" và \"vận chuyển\" làm trạng thái đặt hàng?Liệt kê các tên khách hàng.",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\""
  },
  {
    "instruction": "",
    "input": "Tìm ID của các khách hàng có trạng thái đặt hàng cả \"trên đường\" và \"vận chuyển\".",
    "output": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\""
  },
  {
    "instruction": "",
    "input": "Những khách hàng nào có cả \"trên đường\" và \"vận chuyển\" làm trạng thái đặt hàng?Liệt kê ID khách hàng.",
    "output": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\""
  },
  {
    "instruction": "",
    "input": "Khi nào đơn đặt hàng được đặt số theo dõi lô hàng là 3452?Cho tôi ngày.",
    "output": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452"
  },
  {
    "instruction": "",
    "input": "Đơn hàng được đặt vào ngày nào có số lượng theo dõi lô hàng là 3452?",
    "output": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452"
  },
  {
    "instruction": "",
    "input": "Ngày vị trí của đơn đặt hàng có số hóa đơn là 10 là bao nhiêu?",
    "output": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10"
  },
  {
    "instruction": "",
    "input": "Đơn hàng với hóa đơn số 10 được đặt vào ngày nào?",
    "output": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10"
  },
  {
    "instruction": "",
    "input": "Liệt kê số lượng và ID của từng sản phẩm trong tất cả các đơn đặt hàng.",
    "output": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi sản phẩm, hãy trả lại ID của nó và số lần nó được đặt hàng.",
    "output": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên và số lượng của từng sản phẩm trong tất cả các đơn đặt hàng.",
    "output": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"
  },
  {
    "instruction": "",
    "input": "Đối với mỗi sản phẩm, hãy hiển thị tên của nó và số lần nó được đặt hàng.",
    "output": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"
  },
  {
    "instruction": "",
    "input": "Tìm ID của các đơn đặt hàng được vận chuyển sau 2000-01-01.",
    "output": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\""
  },
  {
    "instruction": "",
    "input": "Đơn đặt hàng nào có lô hàng sau 2000-01-01?Cho tôi ID đặt hàng.",
    "output": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\""
  },
  {
    "instruction": "",
    "input": "Tìm ID của đơn đặt hàng được vận chuyển gần đây nhất.",
    "output": "SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)"
  },
  {
    "instruction": "",
    "input": "Đơn hàng nào có lô hàng gần đây nhất?Cho tôi id đặt hàng.",
    "output": "SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của tất cả các sản phẩm riêng biệt theo thứ tự bảng chữ cái.",
    "output": "SELECT DISTINCT product_name FROM products ORDER BY product_name"
  },
  {
    "instruction": "",
    "input": "Sắp xếp tất cả các sản phẩm riêng biệt theo thứ tự bảng chữ cái.",
    "output": "SELECT DISTINCT product_name FROM products ORDER BY product_name"
  },
  {
    "instruction": "",
    "input": "Liệt kê ID của tất cả các đơn đặt hàng riêng biệt được đặt hàng theo ngày đặt.",
    "output": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed"
  },
  {
    "instruction": "",
    "input": "ID của tất cả các đơn đặt hàng riêng biệt, được sắp xếp theo ngày vị trí là gì?",
    "output": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed"
  },
  {
    "instruction": "",
    "input": "ID của thứ tự có nhiều mục nhất là gì?",
    "output": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Đơn hàng nào liên quan đến nhiều mặt hàng nhất?Trả về ID đặt hàng.",
    "output": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tên của khách hàng có số lượng đơn đặt hàng lớn nhất là gì?",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm tên của khách hàng đã thực hiện nhiều đơn đặt hàng nhất.",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Tìm các số hóa đơn được tạo ra trước năm 1989-09-03 hoặc sau 2007-12-25.",
    "output": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""
  },
  {
    "instruction": "",
    "input": "Các số hóa đơn được tạo ra trước năm 1989-09-03 hoặc sau 2007-12-25 là gì?",
    "output": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""
  },
  {
    "instruction": "",
    "input": "Tìm các chi tiết riêng biệt của các hóa đơn được tạo ra trước 1989-09-03 hoặc sau 2007-12-25.",
    "output": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""
  },
  {
    "instruction": "",
    "input": "Các chi tiết riêng biệt của hóa đơn được tạo ra trước 1989-09-03 hoặc sau 2007-12-25 là gì?",
    "output": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""
  },
  {
    "instruction": "",
    "input": "Đối với mỗi khách hàng có ít nhất hai đơn đặt hàng, hãy tìm tên khách hàng và số lượng đơn đặt hàng được thực hiện.",
    "output": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Những khách hàng nào đã thực hiện ít nhất hai đơn đặt hàng?Cho tôi mỗi tên khách hàng và số lượng đơn đặt hàng được thực hiện.",
    "output": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Tìm tên của các khách hàng có tối đa hai đơn đặt hàng.",
    "output": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2"
  },
  {
    "instruction": "",
    "input": "Tên của các khách hàng đã thực hiện hai hoặc ít đơn đặt hàng là gì?",
    "output": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của các khách hàng đã từng mua sản phẩm \"Thực phẩm\".",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1"
  },
  {
    "instruction": "",
    "input": "Tên của những khách hàng đã mua sản phẩm \"thực phẩm\" ít nhất một lần là gì?",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên của khách hàng đã từng hủy bỏ sản phẩm \"Thực phẩm\" (trạng thái vật phẩm là \"Hủy\").",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1"
  },
  {
    "instruction": "",
    "input": "Những khách hàng nào đã từng hủy bỏ sản phẩm \"Thực phẩm\" (trạng thái mặt hàng là \"Hủy\")?",
    "output": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu kiến ​​trúc sư là nữ?",
    "output": "SELECT count(*) FROM architect WHERE gender  =  'female'"
  },
  {
    "instruction": "",
    "input": "Liệt kê tên, quốc tịch và ID của tất cả các kiến ​​trúc sư nam được đặt hàng theo tên của họ từ vựng.",
    "output": "SELECT name ,  nationality ,  id FROM architect WHERE gender  =  'male' ORDER BY name"
  },
  {
    "instruction": "",
    "input": "Độ dài tối đa tính bằng mét cho các cây cầu là bao nhiêu và tên của các kiến ​​trúc sư là gì?",
    "output": "SELECT max(T1.length_meters) ,  T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id  =  T2.id"
  },
  {
    "instruction": "",
    "input": "Chiều dài trung bình tính bằng chân của cầu là bao nhiêu?",
    "output": "SELECT avg(length_feet) FROM bridge"
  },
  {
    "instruction": "",
    "input": "Tên và năm xây dựng cho các nhà máy thuộc loại 'Grondzeiler' là gì?",
    "output": "SELECT name ,  built_year FROM mill WHERE TYPE  =  'Grondzeiler'"
  },
  {
    "instruction": "",
    "input": "Những cái tên và quốc tịch riêng biệt của các kiến ​​trúc sư đã từng xây dựng một nhà máy là gì?",
    "output": "SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id"
  },
  {
    "instruction": "",
    "input": "Tên của các nhà máy không nằm trong 'Donceel' là gì?",
    "output": "SELECT name FROM mill WHERE LOCATION != 'Donceel'"
  },
  {
    "instruction": "",
    "input": "Các loại nhà máy riêng biệt được xây dựng bởi các kiến ​​trúc sư người Mỹ hoặc Canada là gì?",
    "output": "SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id WHERE T2.nationality  =  'American' OR T2.nationality  =  'Canadian'"
  },
  {
    "instruction": "",
    "input": "ID và tên của các kiến ​​trúc sư đã xây dựng ít nhất 3 cây cầu là gì?",
    "output": "SELECT T1.id ,  T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  >=  3"
  },
  {
    "instruction": "",
    "input": "ID, tên và quốc tịch của kiến ​​trúc sư đã xây dựng hầu hết các nhà máy là gì?",
    "output": "SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "ID, tên và giới tính của các kiến ​​trúc sư đã xây dựng hai cây cầu hoặc một nhà máy là gì?",
    "output": "SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1"
  },
  {
    "instruction": "",
    "input": "Vị trí của cây cầu có tên là 'Kolob Arch' hoặc 'Cầu vồng' là gì?",
    "output": "SELECT LOCATION FROM bridge WHERE name  =  'Kolob Arch' OR name  =  'Rainbow Bridge'"
  },
  {
    "instruction": "",
    "input": "Tên nhà máy nào chứa từ tiếng Pháp 'moulin'?",
    "output": "SELECT name FROM mill WHERE name LIKE '%Moulin%'"
  },
  {
    "instruction": "",
    "input": "Tên riêng biệt của các nhà máy được xây dựng bởi các kiến ​​trúc sư cũng đã xây dựng một cây cầu dài hơn 80 mét?",
    "output": "SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id JOIN bridge AS T3 ON T3.architect_id  =  T2.id WHERE T3.length_meters  >  80"
  },
  {
    "instruction": "",
    "input": "Loại nhà máy phổ biến nhất là gì, và có bao nhiêu?",
    "output": "SELECT TYPE ,  count(*) FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu kiến ​​trúc sư đã không xây dựng một nhà máy trước năm 1850?",
    "output": "SELECT count(*) FROM architect WHERE id NOT IN ( SELECT architect_id FROM mill WHERE built_year  <  1850 );"
  },
  {
    "instruction": "",
    "input": "Hiển thị tên của tất cả các cây cầu được thiết kế bởi kiến ​​trúc sư người Mỹ, và sắp xếp kết quả theo chiều dài chân của cầu.",
    "output": "SELECT t1.name FROM bridge AS t1 JOIN architect AS t2 ON t1.architect_id  =  t2.id WHERE t2.nationality  =  'American' ORDER BY t1.length_feet"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu câu lạc bộ sách?",
    "output": "SELECT count(*) FROM book_club"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng câu lạc bộ sách.",
    "output": "SELECT count(*) FROM book_club"
  },
  {
    "instruction": "",
    "input": "Hiển thị các tiêu đề, và các tác giả hoặc biên tập viên cho tất cả các cuốn sách được thực hiện sau năm 1989.",
    "output": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề và tác giả hoặc biên tập viên tương ứng với những cuốn sách được thực hiện sau năm 1989 là gì?",
    "output": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các nhà xuất bản riêng biệt cho sách.",
    "output": "SELECT DISTINCT publisher FROM book_club"
  },
  {
    "instruction": "",
    "input": "Tất cả các nhà xuất bản sách khác nhau là gì?",
    "output": "SELECT DISTINCT publisher FROM book_club"
  },
  {
    "instruction": "",
    "input": "Hiển thị các năm, tiêu đề sách và nhà xuất bản cho tất cả các cuốn sách, theo thứ tự giảm dần theo năm.",
    "output": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC"
  },
  {
    "instruction": "",
    "input": "Những năm, tiêu đề và nhà xuất bản cho tất cả các cuốn sách, được đặt hàng theo năm giảm dần?",
    "output": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các nhà xuất bản và số lượng sách cho mỗi nhà xuất bản.",
    "output": "SELECT publisher ,  count(*) FROM book_club GROUP BY publisher"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cuốn sách cho mỗi nhà xuất bản?",
    "output": "SELECT publisher ,  count(*) FROM book_club GROUP BY publisher"
  },
  {
    "instruction": "",
    "input": "Nhà xuất bản có số lượng sách nhất là gì?",
    "output": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại nhà xuất bản đã xuất bản nhiều cuốn sách nhất.",
    "output": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các danh mục sách và số lượng sách trong mỗi danh mục.",
    "output": "SELECT category ,  count(*) FROM book_club GROUP BY category"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu cuốn sách rơi vào mỗi thể loại?",
    "output": "SELECT category ,  count(*) FROM book_club GROUP BY category"
  },
  {
    "instruction": "",
    "input": "Danh sách các danh mục có ít nhất hai cuốn sách sau năm 1989.",
    "output": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Những loại nào có hai hoặc nhiều cuốn sách tương ứng được thực hiện sau năm 1989?",
    "output": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2"
  },
  {
    "instruction": "",
    "input": "Hiển thị các nhà xuất bản với một cuốn sách được xuất bản năm 1989 và một cuốn sách vào năm 1990.",
    "output": "SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990"
  },
  {
    "instruction": "",
    "input": "Các nhà xuất bản đã xuất bản một cuốn sách trong cả năm 1989 và 1990 là gì?",
    "output": "SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các nhà xuất bản không có một cuốn sách vào năm 1989.",
    "output": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989"
  },
  {
    "instruction": "",
    "input": "Những nhà xuất bản nào không xuất bản một cuốn sách vào năm 1989?",
    "output": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tiêu đề phim, năm và đạo diễn, được đặt hàng bởi ngân sách.",
    "output": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề, năm và đạo diễn của tất cả các bộ phim, được đặt hàng theo ngân sách bằng hàng triệu?",
    "output": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million"
  },
  {
    "instruction": "",
    "input": "Có bao nhiêu đạo diễn phim?",
    "output": "SELECT COUNT (DISTINCT director) FROM movie"
  },
  {
    "instruction": "",
    "input": "Đếm số lượng giám đốc khác nhau.",
    "output": "SELECT COUNT (DISTINCT director) FROM movie"
  },
  {
    "instruction": "",
    "input": "Tiêu đề và đạo diễn cho bộ phim có tổng doanh thu cao nhất trên toàn thế giới trong năm 2000 trở lên là gì?",
    "output": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Trả lại tiêu đề và đạo diễn của bộ phim được phát hành vào năm 2000 hoặc trước đó có tổng doanh thu cao nhất trên toàn thế giới.",
    "output": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên đạo diễn có một bộ phim trong cả năm 1999 và 2000.",
    "output": "SELECT director FROM movie WHERE YEAR  =  2000 INTERSECT SELECT director FROM movie WHERE YEAR  =  1999"
  },
  {
    "instruction": "",
    "input": "Đạo diễn nào đã có một bộ phim cả trong năm 1999 và 2000?",
    "output": "SELECT director FROM movie WHERE YEAR  =  2000 INTERSECT SELECT director FROM movie WHERE YEAR  =  1999"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả các tên đạo diễn có một bộ phim trong năm 1999 hoặc 2000.",
    "output": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000"
  },
  {
    "instruction": "",
    "input": "Đạo diễn nào đã có một bộ phim trong năm 1999 hoặc 2000?",
    "output": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000"
  },
  {
    "instruction": "",
    "input": "Ngân sách trung bình, tối đa và tối thiểu cho tất cả các bộ phim là bao nhiêu trước năm 2000.",
    "output": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000"
  },
  {
    "instruction": "",
    "input": "Trả lại ngân sách trung bình, tối đa và tối thiểu trong hàng triệu cho các bộ phim được thực hiện trước năm 2000.",
    "output": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000"
  },
  {
    "instruction": "",
    "input": "Liệt kê tất cả các tên công ty với một cuốn sách được xuất bản bởi Alyson.",
    "output": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson'"
  },
  {
    "instruction": "",
    "input": "Tất cả các tên công ty có một cuốn sách được xuất bản bởi Alyson là gì?",
    "output": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson'"
  },
  {
    "instruction": "",
    "input": "Hiển thị các tiêu đề phim và tiêu đề sách cho tất cả các công ty ở Trung Quốc.",
    "output": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'"
  },
  {
    "instruction": "",
    "input": "Các tiêu đề của phim và sách tương ứng với các công ty được thành lập ở Trung Quốc là gì?",
    "output": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'"
  },
  {
    "instruction": "",
    "input": "Hiển thị tất cả tên công ty với một bộ phim được đạo diễn vào năm 1999.",
    "output": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999"
  },
  {
    "instruction": "",
    "input": "Tất cả các tên công ty có một bộ phim tương ứng được đạo diễn vào năm 1999 là gì?",
    "output": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999"
  }
]